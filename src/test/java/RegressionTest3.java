import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest3 {

    public static boolean debug = false;

    @Test
    public void test1501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1501");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.delete(0);
        aVLTree0.delete(10);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        aVLTree16.delete((int) 'a');
        avltree.AVLTree.Node node21 = aVLTree16.getRoot();
        aVLTree16.delete(0);
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree16.getBalance(node24);
        int int26 = aVLTree16.height();
        aVLTree16.delete(100);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree29.getRoot();
        aVLTree29.delete(100);
        aVLTree29.insert((int) (byte) 10);
        avltree.AVLTree.Node node37 = aVLTree29.getRoot();
        int int38 = aVLTree16.getBalance(node37);
        int int39 = aVLTree0.getBalance(node37);
        aVLTree0.delete((int) ' ');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
    }

    @Test
    public void test1502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1502");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        aVLTree0.delete((int) '#');
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node50 = aVLTree0.find(0);
        avltree.AVLTree.Node node51 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(node51);
    }

    @Test
    public void test1503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1503");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 1);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) (byte) -1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test1504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1504");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 1);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree13.find((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree13.find((int) ' ');
        avltree.AVLTree.Node node21 = aVLTree13.find((int) (byte) 100);
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree22.getRoot();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        avltree.AVLTree.Node node29 = aVLTree24.find((int) (short) -1);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        aVLTree30.delete((int) 'a');
        avltree.AVLTree.Node node35 = aVLTree30.getRoot();
        aVLTree30.delete(0);
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree30.getBalance(node38);
        int int40 = aVLTree30.height();
        aVLTree30.delete(100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        avltree.AVLTree.Node node46 = aVLTree43.getRoot();
        aVLTree43.delete(100);
        aVLTree43.insert((int) (byte) 10);
        avltree.AVLTree.Node node51 = aVLTree43.getRoot();
        int int52 = aVLTree30.getBalance(node51);
        int int53 = aVLTree24.getBalance(node51);
        int int54 = aVLTree22.getBalance(node51);
        int int55 = aVLTree13.getBalance(node51);
        int int56 = aVLTree0.getBalance(node51);
        int int57 = aVLTree0.height();
        avltree.AVLTree.Node node58 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node58);
    }

    @Test
    public void test1505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1505");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.delete((int) (short) 10);
        int int11 = aVLTree0.height();
        aVLTree0.insert((int) (short) 0);
        aVLTree0.insert((int) ' ');
        avltree.AVLTree.Node node17 = aVLTree0.find(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test1506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1506");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        int int4 = aVLTree0.height();
        java.lang.Class<?> wildcardClass5 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1507");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        avltree.AVLTree.Node node24 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) (short) 1);
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node24);
    }

    @Test
    public void test1508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1508");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        int int7 = aVLTree0.height();
        int int8 = aVLTree0.height();
        aVLTree0.delete((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1509");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node15 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert((int) ' ');
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass22 = node21.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test1510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1510");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        aVLTree0.insert((int) (byte) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test1511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1511");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        int int43 = aVLTree0.height();
        aVLTree0.delete(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
    }

    @Test
    public void test1512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1512");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete(0);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1513");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        int int4 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = aVLTree9.getRoot();
        aVLTree9.delete(100);
        aVLTree9.delete((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.insert((int) (short) 0);
        avltree.AVLTree.Node node23 = aVLTree17.find(100);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete(0);
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree24.getBalance(node32);
        int int34 = aVLTree24.height();
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree35.getRoot();
        aVLTree35.delete(100);
        aVLTree35.insert((int) (byte) 10);
        avltree.AVLTree.Node node43 = aVLTree35.getRoot();
        int int44 = aVLTree24.getBalance(node43);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        aVLTree45.delete(0);
        avltree.AVLTree.Node node53 = null;
        int int54 = aVLTree45.getBalance(node53);
        int int55 = aVLTree45.height();
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree56.getRoot();
        aVLTree56.delete(100);
        aVLTree56.insert((int) (byte) 10);
        avltree.AVLTree.Node node64 = aVLTree56.getRoot();
        int int65 = aVLTree45.getBalance(node64);
        int int66 = aVLTree24.getBalance(node64);
        int int67 = aVLTree17.getBalance(node64);
        int int68 = aVLTree9.getBalance(node64);
        aVLTree9.insert(1);
        avltree.AVLTree.Node node72 = aVLTree9.find((int) (byte) 0);
        avltree.AVLTree.Node node73 = aVLTree9.getRoot();
        avltree.AVLTree.Node node74 = aVLTree9.getRoot();
        aVLTree9.insert((int) '4');
        avltree.AVLTree.Node node77 = aVLTree9.getRoot();
        int int78 = aVLTree0.getBalance(node77);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 1 + "'", int78 == 1);
    }

    @Test
    public void test1514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1514");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        aVLTree8.insert((int) (short) 0);
        avltree.AVLTree.Node node14 = aVLTree8.find(100);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        aVLTree15.delete((int) 'a');
        avltree.AVLTree.Node node20 = aVLTree15.getRoot();
        aVLTree15.delete(0);
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree15.getBalance(node23);
        int int25 = aVLTree15.height();
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        avltree.AVLTree.Node node29 = aVLTree26.getRoot();
        aVLTree26.delete(100);
        aVLTree26.insert((int) (byte) 10);
        avltree.AVLTree.Node node34 = aVLTree26.getRoot();
        int int35 = aVLTree15.getBalance(node34);
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        aVLTree36.delete((int) 'a');
        avltree.AVLTree.Node node41 = aVLTree36.getRoot();
        aVLTree36.delete(0);
        avltree.AVLTree.Node node44 = null;
        int int45 = aVLTree36.getBalance(node44);
        int int46 = aVLTree36.height();
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node50 = aVLTree47.getRoot();
        aVLTree47.delete(100);
        aVLTree47.insert((int) (byte) 10);
        avltree.AVLTree.Node node55 = aVLTree47.getRoot();
        int int56 = aVLTree36.getBalance(node55);
        int int57 = aVLTree15.getBalance(node55);
        int int58 = aVLTree8.getBalance(node55);
        int int59 = aVLTree0.getBalance(node55);
        aVLTree0.insert(1);
        aVLTree0.delete((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test1515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1515");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find(0);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        aVLTree9.delete(1);
        aVLTree9.delete((int) '#');
        aVLTree9.delete((int) (short) -1);
        avltree.AVLTree.Node node20 = aVLTree9.getRoot();
        avltree.AVLTree.Node node22 = aVLTree9.find((int) (byte) 100);
        int int23 = aVLTree9.height();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        aVLTree24.insert((int) (byte) 100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree30.find((int) 'a');
        aVLTree30.delete((int) (short) 10);
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        aVLTree37.insert((int) (byte) 100);
        aVLTree37.insert((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree37.find((int) (byte) 100);
        int int46 = aVLTree30.getBalance(node45);
        int int47 = aVLTree24.getBalance(node45);
        int int48 = aVLTree9.getBalance(node45);
        int int49 = aVLTree0.getBalance(node45);
        avltree.AVLTree.Node node51 = aVLTree0.find(0);
        avltree.AVLTree.Node node53 = aVLTree0.find(1);
        int int54 = aVLTree0.height();
        avltree.AVLTree.Node node55 = null;
        int int56 = aVLTree0.getBalance(node55);
        aVLTree0.delete(0);
        java.lang.Class<?> wildcardClass59 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(wildcardClass59);
    }

    @Test
    public void test1516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1516");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1517");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 10);
        aVLTree0.insert(10);
        aVLTree0.insert((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test1518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1518");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        int int4 = aVLTree0.height();
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
    }

    @Test
    public void test1519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1519");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree12.getBalance(node15);
        aVLTree12.insert((int) '4');
        avltree.AVLTree.Node node20 = aVLTree12.find(100);
        avltree.AVLTree.Node node21 = aVLTree12.getRoot();
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = aVLTree22.find((int) '4');
        aVLTree22.delete((int) 'a');
        avltree.AVLTree.Node node27 = aVLTree22.getRoot();
        aVLTree22.delete(0);
        avltree.AVLTree.Node node30 = null;
        int int31 = aVLTree22.getBalance(node30);
        int int32 = aVLTree22.height();
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        avltree.AVLTree.Node node36 = aVLTree33.getRoot();
        aVLTree33.delete(100);
        aVLTree33.insert((int) (byte) 10);
        avltree.AVLTree.Node node41 = aVLTree33.getRoot();
        int int42 = aVLTree22.getBalance(node41);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        int int53 = aVLTree43.height();
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.delete(100);
        aVLTree54.insert((int) (byte) 10);
        avltree.AVLTree.Node node62 = aVLTree54.getRoot();
        int int63 = aVLTree43.getBalance(node62);
        int int64 = aVLTree22.getBalance(node62);
        int int65 = aVLTree12.getBalance(node62);
        avltree.AVLTree.Node node66 = aVLTree12.getRoot();
        int int67 = aVLTree0.getBalance(node66);
        aVLTree0.delete((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test1520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1520");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        int int16 = aVLTree0.height();
        avltree.AVLTree.Node node18 = aVLTree0.find((int) (short) 10);
        java.lang.Class<?> wildcardClass19 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1521");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree7.getBalance(node10);
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.insert((int) (short) 0);
        avltree.AVLTree.Node node19 = aVLTree13.find(100);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        aVLTree20.delete((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree20.getRoot();
        aVLTree20.delete(0);
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree20.getBalance(node28);
        int int30 = aVLTree20.height();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree31.getRoot();
        aVLTree31.delete(100);
        aVLTree31.insert((int) (byte) 10);
        avltree.AVLTree.Node node39 = aVLTree31.getRoot();
        int int40 = aVLTree20.getBalance(node39);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.delete((int) 'a');
        avltree.AVLTree.Node node46 = aVLTree41.getRoot();
        aVLTree41.delete(0);
        avltree.AVLTree.Node node49 = null;
        int int50 = aVLTree41.getBalance(node49);
        int int51 = aVLTree41.height();
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree52.getRoot();
        aVLTree52.delete(100);
        aVLTree52.insert((int) (byte) 10);
        avltree.AVLTree.Node node60 = aVLTree52.getRoot();
        int int61 = aVLTree41.getBalance(node60);
        int int62 = aVLTree20.getBalance(node60);
        int int63 = aVLTree13.getBalance(node60);
        int int64 = aVLTree7.getBalance(node60);
        int int65 = aVLTree7.height();
        aVLTree7.insert((int) (byte) 0);
        int int68 = aVLTree7.height();
        avltree.AVLTree.Node node70 = aVLTree7.find((int) (short) 0);
        int int71 = aVLTree0.getBalance(node70);
        avltree.AVLTree.Node node73 = aVLTree0.find(100);
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree.Node node76 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(node76);
    }

    @Test
    public void test1522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1522");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) 'a');
        int int7 = aVLTree0.height();
        aVLTree0.delete(0);
        int int10 = aVLTree0.height();
        aVLTree0.insert((int) '4');
        int int13 = aVLTree0.height();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree.Node node16 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(node16);
    }

    @Test
    public void test1523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1523");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) (byte) -1);
        int int5 = aVLTree0.height();
        aVLTree0.insert((int) (byte) -1);
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(node9);
    }

    @Test
    public void test1524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1524");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        aVLTree0.delete((int) (short) -1);
        int int11 = aVLTree0.height();
        int int12 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
    }

    @Test
    public void test1525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1525");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete((int) (byte) 0);
        int int5 = aVLTree0.height();
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node10 = aVLTree6.find((int) 'a');
        int int11 = aVLTree6.height();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree12.getBalance(node13);
        avltree.AVLTree.Node node15 = aVLTree12.getRoot();
        aVLTree12.insert((int) (byte) 100);
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        aVLTree18.delete((int) 'a');
        avltree.AVLTree.Node node23 = aVLTree18.getRoot();
        aVLTree18.delete(0);
        avltree.AVLTree.Node node26 = null;
        int int27 = aVLTree18.getBalance(node26);
        int int28 = aVLTree18.height();
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree29.getRoot();
        aVLTree29.delete(100);
        aVLTree29.insert((int) (byte) 10);
        avltree.AVLTree.Node node37 = aVLTree29.getRoot();
        int int38 = aVLTree18.getBalance(node37);
        int int39 = aVLTree12.getBalance(node37);
        int int40 = aVLTree6.getBalance(node37);
        int int41 = aVLTree0.getBalance(node37);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1526");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        int int16 = aVLTree0.height();
        aVLTree0.insert((-1));
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test1527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1527");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = aVLTree3.getRoot();
        aVLTree3.insert((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node17 = aVLTree9.find((int) ' ');
        int int18 = aVLTree9.height();
        avltree.AVLTree.Node node19 = aVLTree9.getRoot();
        int int20 = aVLTree3.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.insert((int) (short) 0);
        avltree.AVLTree.Node node30 = aVLTree24.find(100);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        aVLTree52.delete((int) 'a');
        avltree.AVLTree.Node node57 = aVLTree52.getRoot();
        aVLTree52.delete(0);
        avltree.AVLTree.Node node60 = null;
        int int61 = aVLTree52.getBalance(node60);
        int int62 = aVLTree52.height();
        avltree.AVLTree aVLTree63 = new avltree.AVLTree();
        avltree.AVLTree.Node node65 = aVLTree63.find((int) '4');
        avltree.AVLTree.Node node66 = aVLTree63.getRoot();
        aVLTree63.delete(100);
        aVLTree63.insert((int) (byte) 10);
        avltree.AVLTree.Node node71 = aVLTree63.getRoot();
        int int72 = aVLTree52.getBalance(node71);
        int int73 = aVLTree31.getBalance(node71);
        int int74 = aVLTree24.getBalance(node71);
        int int75 = aVLTree0.getBalance(node71);
        avltree.AVLTree.Node node76 = aVLTree0.getRoot();
        aVLTree0.insert(0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(node76);
    }

    @Test
    public void test1528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1528");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree.Node node9 = aVLTree0.find((int) (byte) 10);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 0);
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1529");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        java.lang.Class<?> wildcardClass8 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1530");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((int) '4');
        avltree.AVLTree.Node node26 = null;
        int int27 = aVLTree23.getBalance(node26);
        aVLTree23.insert((int) '4');
        avltree.AVLTree.Node node31 = aVLTree23.find(100);
        avltree.AVLTree.Node node32 = aVLTree23.getRoot();
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        aVLTree33.delete((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree33.getRoot();
        aVLTree33.delete(0);
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree33.getBalance(node41);
        int int43 = aVLTree33.height();
        avltree.AVLTree aVLTree44 = new avltree.AVLTree();
        avltree.AVLTree.Node node46 = aVLTree44.find((int) '4');
        avltree.AVLTree.Node node47 = aVLTree44.getRoot();
        aVLTree44.delete(100);
        aVLTree44.insert((int) (byte) 10);
        avltree.AVLTree.Node node52 = aVLTree44.getRoot();
        int int53 = aVLTree33.getBalance(node52);
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        aVLTree54.delete((int) 'a');
        avltree.AVLTree.Node node59 = aVLTree54.getRoot();
        aVLTree54.delete(0);
        avltree.AVLTree.Node node62 = null;
        int int63 = aVLTree54.getBalance(node62);
        int int64 = aVLTree54.height();
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node67 = aVLTree65.find((int) '4');
        avltree.AVLTree.Node node68 = aVLTree65.getRoot();
        aVLTree65.delete(100);
        aVLTree65.insert((int) (byte) 10);
        avltree.AVLTree.Node node73 = aVLTree65.getRoot();
        int int74 = aVLTree54.getBalance(node73);
        int int75 = aVLTree33.getBalance(node73);
        int int76 = aVLTree23.getBalance(node73);
        int int77 = aVLTree0.getBalance(node73);
        aVLTree0.delete((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test1531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1531");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) (byte) -1);
        int int5 = aVLTree0.height();
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test1532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1532");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 1);
        int int13 = aVLTree0.height();
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree14.getBalance(node17);
        aVLTree14.insert((int) '4');
        avltree.AVLTree.Node node22 = aVLTree14.find(100);
        avltree.AVLTree.Node node23 = aVLTree14.getRoot();
        int int24 = aVLTree0.getBalance(node23);
        aVLTree0.insert((-1));
        int int27 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1533");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree9.getBalance(node15);
        avltree.AVLTree.Node node18 = aVLTree9.find((int) ' ');
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree19.find((int) 'a');
        aVLTree19.delete((int) (short) 10);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree26.getBalance(node27);
        aVLTree26.insert((int) (byte) 100);
        aVLTree26.insert((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree26.find((int) (byte) 100);
        int int35 = aVLTree19.getBalance(node34);
        int int36 = aVLTree9.getBalance(node34);
        int int37 = aVLTree0.getBalance(node34);
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree38.find((int) 'a');
        avltree.AVLTree.Node node43 = aVLTree38.getRoot();
        avltree.AVLTree.Node node44 = aVLTree38.getRoot();
        avltree.AVLTree.Node node45 = aVLTree38.getRoot();
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        avltree.AVLTree.Node node52 = aVLTree49.getRoot();
        aVLTree49.insert((int) (byte) 100);
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node58 = null;
        int int59 = aVLTree55.getBalance(node58);
        aVLTree55.insert((int) (short) 100);
        avltree.AVLTree.Node node63 = aVLTree55.find((int) ' ');
        int int64 = aVLTree55.height();
        avltree.AVLTree.Node node65 = aVLTree55.getRoot();
        int int66 = aVLTree49.getBalance(node65);
        int int67 = aVLTree46.getBalance(node65);
        int int68 = aVLTree38.getBalance(node65);
        int int69 = aVLTree0.getBalance(node65);
        avltree.AVLTree.Node node70 = aVLTree0.getRoot();
        aVLTree0.delete(2);
        aVLTree0.delete(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(node70);
    }

    @Test
    public void test1534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1534");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) (short) 100);
        avltree.AVLTree.Node node19 = aVLTree11.find((int) ' ');
        int int20 = aVLTree11.height();
        avltree.AVLTree.Node node21 = aVLTree11.getRoot();
        int int22 = aVLTree5.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        int int24 = aVLTree0.height();
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) 'a');
        aVLTree0.delete((-1));
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.delete(0);
        avltree.AVLTree.Node node36 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node38 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node38);
    }

    @Test
    public void test1535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1535");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        aVLTree0.delete((int) (short) 0);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        int int16 = aVLTree0.height();
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node19 = aVLTree0.find(10);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        aVLTree20.delete((int) (byte) -1);
        aVLTree20.delete((int) (byte) 0);
        avltree.AVLTree.Node node25 = aVLTree20.getRoot();
        avltree.AVLTree.Node node27 = aVLTree20.find(1);
        avltree.AVLTree.Node node29 = aVLTree20.find(10);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = null;
        int int32 = aVLTree30.getBalance(node31);
        aVLTree30.delete((int) (byte) -1);
        int int35 = aVLTree30.height();
        int int36 = aVLTree30.height();
        avltree.AVLTree.Node node38 = aVLTree30.find((int) '#');
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree39.find((int) 'a');
        aVLTree39.delete((int) (short) 10);
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        aVLTree46.insert((int) (byte) 100);
        aVLTree46.insert((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree46.find((int) (byte) 100);
        int int55 = aVLTree39.getBalance(node54);
        int int56 = aVLTree30.getBalance(node54);
        int int57 = aVLTree20.getBalance(node54);
        int int58 = aVLTree20.height();
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = aVLTree59.find((int) '4');
        avltree.AVLTree.Node node63 = aVLTree59.find((int) 'a');
        aVLTree59.insert((int) (short) -1);
        avltree.AVLTree.Node node66 = aVLTree59.getRoot();
        int int67 = aVLTree20.getBalance(node66);
        int int68 = aVLTree0.getBalance(node66);
        avltree.AVLTree.Node node69 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(node69);
    }

    @Test
    public void test1536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1536");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        int int27 = aVLTree21.height();
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        aVLTree49.delete((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree49.getRoot();
        aVLTree49.delete(0);
        avltree.AVLTree.Node node57 = null;
        int int58 = aVLTree49.getBalance(node57);
        int int59 = aVLTree49.height();
        avltree.AVLTree aVLTree60 = new avltree.AVLTree();
        avltree.AVLTree.Node node62 = aVLTree60.find((int) '4');
        avltree.AVLTree.Node node63 = aVLTree60.getRoot();
        aVLTree60.delete(100);
        aVLTree60.insert((int) (byte) 10);
        avltree.AVLTree.Node node68 = aVLTree60.getRoot();
        int int69 = aVLTree49.getBalance(node68);
        int int70 = aVLTree28.getBalance(node68);
        int int71 = aVLTree21.getBalance(node68);
        int int72 = aVLTree0.getBalance(node68);
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
    }

    @Test
    public void test1537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1537");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 1);
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        avltree.AVLTree.Node node16 = aVLTree0.find(0);
        aVLTree0.delete((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test1538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1538");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node15 = aVLTree0.find(10);
        avltree.AVLTree.Node node17 = aVLTree0.find((int) '4');
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((-1));
        aVLTree18.delete(100);
        avltree.AVLTree.Node node24 = aVLTree18.find((int) '#');
        int int25 = aVLTree18.height();
        avltree.AVLTree.Node node27 = aVLTree18.find(10);
        int int28 = aVLTree18.height();
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        int int32 = aVLTree29.height();
        int int33 = aVLTree29.height();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree34.getBalance(node35);
        aVLTree34.insert((int) (byte) 100);
        aVLTree34.insert((int) 'a');
        avltree.AVLTree.Node node42 = aVLTree34.find((int) (byte) 100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        int int53 = aVLTree43.height();
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.delete(100);
        aVLTree54.insert((int) (byte) 10);
        avltree.AVLTree.Node node62 = aVLTree54.getRoot();
        int int63 = aVLTree43.getBalance(node62);
        int int64 = aVLTree34.getBalance(node62);
        int int65 = aVLTree29.getBalance(node62);
        int int66 = aVLTree18.getBalance(node62);
        int int67 = aVLTree0.getBalance(node62);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test1539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1539");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        int int10 = aVLTree0.height();
        aVLTree0.delete(0);
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1540");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        int int16 = aVLTree0.height();
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass19 = node18.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1541");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.insert((int) (short) 0);
        avltree.AVLTree.Node node16 = aVLTree10.find(100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree17.getRoot();
        aVLTree17.delete(100);
        aVLTree17.insert((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree17.getRoot();
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((-1));
        aVLTree30.delete(100);
        avltree.AVLTree.Node node36 = aVLTree30.find((int) '#');
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node39 = aVLTree37.find((int) '4');
        aVLTree37.delete((int) 'a');
        avltree.AVLTree.Node node42 = aVLTree37.getRoot();
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree37.getBalance(node43);
        avltree.AVLTree.Node node46 = aVLTree37.find((int) ' ');
        aVLTree37.insert((-1));
        avltree.AVLTree.Node node49 = aVLTree37.getRoot();
        int int50 = aVLTree37.height();
        avltree.AVLTree.Node node52 = aVLTree37.find((int) (short) -1);
        aVLTree37.insert((int) ' ');
        avltree.AVLTree.Node node55 = aVLTree37.getRoot();
        int int56 = aVLTree30.getBalance(node55);
        int int57 = aVLTree0.getBalance(node55);
        avltree.AVLTree aVLTree58 = new avltree.AVLTree();
        avltree.AVLTree.Node node60 = aVLTree58.find((int) '4');
        avltree.AVLTree.Node node61 = aVLTree58.getRoot();
        aVLTree58.insert((int) (byte) 100);
        int int64 = aVLTree58.height();
        aVLTree58.delete((int) (byte) 10);
        aVLTree58.delete((int) (byte) 1);
        aVLTree58.delete((int) ' ');
        avltree.AVLTree.Node node72 = aVLTree58.find((int) (byte) 10);
        avltree.AVLTree.Node node73 = aVLTree58.getRoot();
        int int74 = aVLTree0.getBalance(node73);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 1 + "'", int56 == 1);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test1542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1542");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 1);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree13.find((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree13.find((int) ' ');
        avltree.AVLTree.Node node21 = aVLTree13.find((int) (byte) 100);
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree22.getRoot();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        avltree.AVLTree.Node node29 = aVLTree24.find((int) (short) -1);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        aVLTree30.delete((int) 'a');
        avltree.AVLTree.Node node35 = aVLTree30.getRoot();
        aVLTree30.delete(0);
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree30.getBalance(node38);
        int int40 = aVLTree30.height();
        aVLTree30.delete(100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        avltree.AVLTree.Node node46 = aVLTree43.getRoot();
        aVLTree43.delete(100);
        aVLTree43.insert((int) (byte) 10);
        avltree.AVLTree.Node node51 = aVLTree43.getRoot();
        int int52 = aVLTree30.getBalance(node51);
        int int53 = aVLTree24.getBalance(node51);
        int int54 = aVLTree22.getBalance(node51);
        int int55 = aVLTree13.getBalance(node51);
        int int56 = aVLTree0.getBalance(node51);
        int int57 = aVLTree0.height();
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test1543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1543");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree8.getBalance(node9);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree17.getBalance(node20);
        aVLTree17.insert((int) (short) 100);
        avltree.AVLTree.Node node25 = aVLTree17.find((int) ' ');
        int int26 = aVLTree17.height();
        avltree.AVLTree.Node node27 = aVLTree17.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree8.getBalance(node27);
        int int30 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node32 = aVLTree0.find((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node32);
    }

    @Test
    public void test1544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1544");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        int int12 = aVLTree0.height();
        aVLTree0.insert(1);
        aVLTree0.insert((int) ' ');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.delete((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1545");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node9 = aVLTree0.find(10);
        aVLTree0.delete((int) ' ');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test1546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1546");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = aVLTree3.getRoot();
        aVLTree3.insert((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node17 = aVLTree9.find((int) ' ');
        int int18 = aVLTree9.height();
        avltree.AVLTree.Node node19 = aVLTree9.getRoot();
        int int20 = aVLTree3.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        aVLTree0.insert((int) (short) 1);
        int int24 = aVLTree0.height();
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree.Node node27 = aVLTree0.getRoot();
        aVLTree0.insert((-1));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node27);
    }

    @Test
    public void test1547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1547");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 1);
        aVLTree0.delete(0);
        java.lang.Class<?> wildcardClass10 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1548");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        aVLTree0.insert(100);
        avltree.AVLTree.Node node56 = aVLTree0.getRoot();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node59 = null;
        int int60 = aVLTree0.getBalance(node59);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test1549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1549");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree7.getBalance(node10);
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.insert((int) (short) 0);
        avltree.AVLTree.Node node19 = aVLTree13.find(100);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        aVLTree20.delete((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree20.getRoot();
        aVLTree20.delete(0);
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree20.getBalance(node28);
        int int30 = aVLTree20.height();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree31.getRoot();
        aVLTree31.delete(100);
        aVLTree31.insert((int) (byte) 10);
        avltree.AVLTree.Node node39 = aVLTree31.getRoot();
        int int40 = aVLTree20.getBalance(node39);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.delete((int) 'a');
        avltree.AVLTree.Node node46 = aVLTree41.getRoot();
        aVLTree41.delete(0);
        avltree.AVLTree.Node node49 = null;
        int int50 = aVLTree41.getBalance(node49);
        int int51 = aVLTree41.height();
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree52.getRoot();
        aVLTree52.delete(100);
        aVLTree52.insert((int) (byte) 10);
        avltree.AVLTree.Node node60 = aVLTree52.getRoot();
        int int61 = aVLTree41.getBalance(node60);
        int int62 = aVLTree20.getBalance(node60);
        int int63 = aVLTree13.getBalance(node60);
        int int64 = aVLTree7.getBalance(node60);
        int int65 = aVLTree7.height();
        aVLTree7.insert((int) (byte) 0);
        int int68 = aVLTree7.height();
        avltree.AVLTree.Node node70 = aVLTree7.find((int) (short) 0);
        int int71 = aVLTree0.getBalance(node70);
        avltree.AVLTree.Node node73 = aVLTree0.find(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node76 = aVLTree0.getRoot();
        int int77 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test1550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1550");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree31.find((int) 'a');
        int int36 = aVLTree31.height();
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        avltree.AVLTree.Node node40 = aVLTree37.getRoot();
        aVLTree37.insert((int) (byte) 100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        int int53 = aVLTree43.height();
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.delete(100);
        aVLTree54.insert((int) (byte) 10);
        avltree.AVLTree.Node node62 = aVLTree54.getRoot();
        int int63 = aVLTree43.getBalance(node62);
        int int64 = aVLTree37.getBalance(node62);
        int int65 = aVLTree31.getBalance(node62);
        int int66 = aVLTree0.getBalance(node62);
        int int67 = aVLTree0.height();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node72 = aVLTree70.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree70.getRoot();
        aVLTree70.delete(100);
        aVLTree70.insert((int) (byte) 10);
        avltree.AVLTree.Node node78 = aVLTree70.getRoot();
        aVLTree70.insert((int) (byte) 100);
        int int81 = aVLTree70.height();
        aVLTree70.delete((int) (byte) 0);
        avltree.AVLTree.Node node85 = aVLTree70.find(0);
        int int86 = aVLTree70.height();
        avltree.AVLTree.Node node88 = aVLTree70.find(0);
        avltree.AVLTree.Node node89 = aVLTree70.getRoot();
        int int90 = aVLTree0.getBalance(node89);
        avltree.AVLTree.Node node92 = aVLTree0.find((int) ' ');
        aVLTree0.insert(2);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(node88);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNull(node92);
    }

    @Test
    public void test1551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1551");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.insert((int) (short) 0);
        avltree.AVLTree.Node node16 = aVLTree10.find(100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree17.getRoot();
        aVLTree17.delete(100);
        aVLTree17.insert((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree17.getRoot();
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree0.find((int) (byte) 10);
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node33 = aVLTree0.find((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node33);
    }

    @Test
    public void test1552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1552");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree8.getRoot();
        aVLTree8.delete(100);
        aVLTree8.insert((int) (byte) 10);
        avltree.AVLTree.Node node16 = aVLTree8.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        int int18 = aVLTree0.height();
        avltree.AVLTree.Node node19 = aVLTree0.getRoot();
        aVLTree0.delete((-1));
        aVLTree0.delete((int) (byte) 100);
        avltree.AVLTree.Node node25 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node27 = aVLTree0.find((int) (byte) -1);
        int int28 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
    }

    @Test
    public void test1553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1553");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        int int30 = aVLTree0.height();
        int int31 = aVLTree0.height();
        avltree.AVLTree.Node node33 = aVLTree0.find((int) (short) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node33);
    }

    @Test
    public void test1554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1554");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.find(0);
        int int13 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1555");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node12 = aVLTree0.find(0);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = null;
        int int17 = aVLTree15.getBalance(node16);
        aVLTree15.insert((int) (byte) 100);
        aVLTree15.insert((int) 'a');
        avltree.AVLTree.Node node23 = aVLTree15.find((int) (byte) 100);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete(0);
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree24.getBalance(node32);
        int int34 = aVLTree24.height();
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree35.getRoot();
        aVLTree35.delete(100);
        aVLTree35.insert((int) (byte) 10);
        avltree.AVLTree.Node node43 = aVLTree35.getRoot();
        int int44 = aVLTree24.getBalance(node43);
        int int45 = aVLTree15.getBalance(node43);
        avltree.AVLTree.Node node46 = aVLTree15.getRoot();
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node51 = aVLTree47.find((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree47.find((int) ' ');
        avltree.AVLTree.Node node55 = aVLTree47.find(0);
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        aVLTree56.delete((int) 'a');
        aVLTree56.delete(1);
        aVLTree56.delete((int) '#');
        aVLTree56.delete((int) (short) -1);
        avltree.AVLTree.Node node67 = aVLTree56.getRoot();
        avltree.AVLTree.Node node69 = aVLTree56.find((int) (byte) 100);
        int int70 = aVLTree56.height();
        avltree.AVLTree aVLTree71 = new avltree.AVLTree();
        avltree.AVLTree.Node node73 = aVLTree71.find((int) '4');
        avltree.AVLTree.Node node74 = aVLTree71.getRoot();
        aVLTree71.insert((int) (byte) 100);
        avltree.AVLTree aVLTree77 = new avltree.AVLTree();
        avltree.AVLTree.Node node79 = aVLTree77.find((int) '4');
        avltree.AVLTree.Node node81 = aVLTree77.find((int) 'a');
        aVLTree77.delete((int) (short) 10);
        avltree.AVLTree aVLTree84 = new avltree.AVLTree();
        avltree.AVLTree.Node node85 = null;
        int int86 = aVLTree84.getBalance(node85);
        aVLTree84.insert((int) (byte) 100);
        aVLTree84.insert((int) 'a');
        avltree.AVLTree.Node node92 = aVLTree84.find((int) (byte) 100);
        int int93 = aVLTree77.getBalance(node92);
        int int94 = aVLTree71.getBalance(node92);
        int int95 = aVLTree56.getBalance(node92);
        int int96 = aVLTree47.getBalance(node92);
        int int97 = aVLTree15.getBalance(node92);
        int int98 = aVLTree0.getBalance(node92);
        java.lang.Class<?> wildcardClass99 = node92.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(node79);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertNotNull(node92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + (-1) + "'", int94 == (-1));
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + (-1) + "'", int95 == (-1));
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + (-1) + "'", int96 == (-1));
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + (-1) + "'", int97 == (-1));
        org.junit.Assert.assertTrue("'" + int98 + "' != '" + (-1) + "'", int98 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test1556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1556");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) (short) 10);
        int int12 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test1557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1557");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
    }

    @Test
    public void test1558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1558");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.insert(10);
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node16 = aVLTree0.find(2);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test1559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1559");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        avltree.AVLTree.Node node20 = aVLTree0.find((int) 'a');
        int int21 = aVLTree0.height();
        int int22 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test1560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1560");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 10);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1561");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        aVLTree0.insert(10);
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        avltree.AVLTree.Node node16 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.find((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNull(node18);
    }

    @Test
    public void test1562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1562");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node10 = aVLTree0.find((-1));
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        int int13 = aVLTree0.height();
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node18 = aVLTree14.find((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree14.getRoot();
        avltree.AVLTree.Node node20 = aVLTree14.getRoot();
        avltree.AVLTree.Node node21 = aVLTree14.getRoot();
        aVLTree14.delete((int) (byte) 10);
        int int24 = aVLTree14.height();
        avltree.AVLTree.Node node26 = aVLTree14.find((int) (short) 10);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        avltree.AVLTree.Node node30 = aVLTree27.getRoot();
        aVLTree27.delete(100);
        aVLTree27.insert((int) (byte) 10);
        avltree.AVLTree.Node node35 = aVLTree27.getRoot();
        int int36 = aVLTree14.getBalance(node35);
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        aVLTree37.insert((int) (byte) 100);
        aVLTree37.insert((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree37.find((int) (byte) 100);
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node48 = aVLTree46.find((int) '4');
        aVLTree46.delete((int) 'a');
        avltree.AVLTree.Node node51 = aVLTree46.getRoot();
        aVLTree46.delete(0);
        avltree.AVLTree.Node node54 = null;
        int int55 = aVLTree46.getBalance(node54);
        int int56 = aVLTree46.height();
        avltree.AVLTree aVLTree57 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = aVLTree57.find((int) '4');
        avltree.AVLTree.Node node60 = aVLTree57.getRoot();
        aVLTree57.delete(100);
        aVLTree57.insert((int) (byte) 10);
        avltree.AVLTree.Node node65 = aVLTree57.getRoot();
        int int66 = aVLTree46.getBalance(node65);
        int int67 = aVLTree37.getBalance(node65);
        avltree.AVLTree.Node node68 = aVLTree37.getRoot();
        int int69 = aVLTree14.getBalance(node68);
        int int70 = aVLTree0.getBalance(node68);
        int int71 = aVLTree0.height();
        java.lang.Class<?> wildcardClass72 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test1563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1563");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 10);
        aVLTree0.delete((int) (byte) -1);
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1564");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        aVLTree8.delete((int) 'a');
        aVLTree8.delete(1);
        aVLTree8.delete((int) '#');
        aVLTree8.delete((int) (short) -1);
        avltree.AVLTree.Node node19 = aVLTree8.getRoot();
        aVLTree8.insert(10);
        aVLTree8.delete(1);
        avltree.AVLTree.Node node24 = aVLTree8.getRoot();
        int int25 = aVLTree8.height();
        aVLTree8.delete((int) 'a');
        avltree.AVLTree.Node node28 = aVLTree8.getRoot();
        int int29 = aVLTree0.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree0.find((int) '#');
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
    }

    @Test
    public void test1565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1565");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.delete(10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test1566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1566");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) (short) -1);
        int int7 = aVLTree0.height();
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node10 = aVLTree0.find(100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        aVLTree11.delete((int) 'a');
        aVLTree11.delete(1);
        avltree.AVLTree.Node node18 = aVLTree11.getRoot();
        int int19 = aVLTree11.height();
        avltree.AVLTree.Node node20 = aVLTree11.getRoot();
        aVLTree11.insert((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree11.find(0);
        avltree.AVLTree.Node node26 = aVLTree11.find(1);
        int int27 = aVLTree11.height();
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree28.find((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree28.find((int) ' ');
        aVLTree28.delete((int) '4');
        avltree.AVLTree.Node node38 = aVLTree28.find((-1));
        avltree.AVLTree.Node node40 = aVLTree28.find((int) (byte) -1);
        int int41 = aVLTree28.height();
        int int42 = aVLTree28.height();
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        avltree.AVLTree.Node node53 = null;
        int int54 = aVLTree43.getBalance(node53);
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree55.find((int) 'a');
        avltree.AVLTree.Node node60 = aVLTree55.getRoot();
        aVLTree55.delete((int) (short) 10);
        avltree.AVLTree.Node node63 = aVLTree55.getRoot();
        avltree.AVLTree.Node node64 = aVLTree55.getRoot();
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = null;
        int int67 = aVLTree65.getBalance(node66);
        aVLTree65.insert((int) (byte) 100);
        aVLTree65.insert((int) 'a');
        avltree.AVLTree.Node node73 = aVLTree65.find((int) (byte) 100);
        int int74 = aVLTree55.getBalance(node73);
        int int75 = aVLTree43.getBalance(node73);
        aVLTree43.delete((int) (short) 10);
        avltree.AVLTree aVLTree78 = new avltree.AVLTree();
        avltree.AVLTree.Node node79 = null;
        int int80 = aVLTree78.getBalance(node79);
        aVLTree78.insert((int) (byte) 100);
        aVLTree78.insert((int) 'a');
        avltree.AVLTree.Node node86 = aVLTree78.find((int) (byte) 100);
        avltree.AVLTree.Node node87 = aVLTree78.getRoot();
        avltree.AVLTree.Node node88 = aVLTree78.getRoot();
        int int89 = aVLTree43.getBalance(node88);
        int int90 = aVLTree28.getBalance(node88);
        int int91 = aVLTree11.getBalance(node88);
        int int92 = aVLTree0.getBalance(node88);
        avltree.AVLTree.Node node93 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertNotNull(node87);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + (-1) + "'", int92 == (-1));
        org.junit.Assert.assertNotNull(node93);
    }

    @Test
    public void test1567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1567");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node9 = aVLTree6.getRoot();
        aVLTree6.delete(100);
        aVLTree6.insert((int) (byte) 10);
        avltree.AVLTree.Node node14 = aVLTree6.getRoot();
        avltree.AVLTree.Node node16 = aVLTree6.find((int) (byte) 0);
        aVLTree6.delete((int) (byte) 10);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.insert((int) (byte) 100);
        int int25 = aVLTree19.height();
        aVLTree19.insert(1);
        aVLTree19.insert((int) (short) 10);
        avltree.AVLTree.Node node31 = aVLTree19.find((int) (short) 1);
        int int32 = aVLTree6.getBalance(node31);
        int int33 = aVLTree0.getBalance(node31);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree34.getBalance(node37);
        aVLTree34.insert(0);
        avltree.AVLTree.Node node42 = aVLTree34.find((int) (short) 0);
        int int43 = aVLTree0.getBalance(node42);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test1568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1568");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1569");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree0.getBalance(node13);
        int int15 = aVLTree0.height();
        avltree.AVLTree.Node node16 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.find((int) ' ');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node18);
    }

    @Test
    public void test1570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1570");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree3.getBalance(node6);
        aVLTree3.insert((int) (short) 100);
        avltree.AVLTree.Node node11 = aVLTree3.find((int) ' ');
        int int12 = aVLTree3.height();
        avltree.AVLTree.Node node13 = aVLTree3.getRoot();
        int int14 = aVLTree0.getBalance(node13);
        int int15 = aVLTree0.height();
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 0);
        int int18 = aVLTree0.height();
        avltree.AVLTree.Node node20 = aVLTree0.find(2);
        aVLTree0.insert((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(node20);
    }

    @Test
    public void test1571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1571");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) '#');
        int int12 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1572");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree13.find((int) 'a');
        int int18 = aVLTree13.height();
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree19.getBalance(node20);
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.insert((int) (byte) 100);
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        aVLTree25.delete((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree25.getRoot();
        aVLTree25.delete(0);
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree25.getBalance(node33);
        int int35 = aVLTree25.height();
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        avltree.AVLTree.Node node39 = aVLTree36.getRoot();
        aVLTree36.delete(100);
        aVLTree36.insert((int) (byte) 10);
        avltree.AVLTree.Node node44 = aVLTree36.getRoot();
        int int45 = aVLTree25.getBalance(node44);
        int int46 = aVLTree19.getBalance(node44);
        int int47 = aVLTree13.getBalance(node44);
        int int48 = aVLTree0.getBalance(node44);
        avltree.AVLTree.Node node49 = aVLTree0.getRoot();
        aVLTree0.delete((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node49);
    }

    @Test
    public void test1573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1573");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        int int11 = aVLTree0.height();
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1574");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.delete((int) (byte) 1);
        int int11 = aVLTree0.height();
        java.lang.Class<?> wildcardClass12 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1575");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        int int4 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        aVLTree0.insert(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test1576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1576");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = aVLTree9.getRoot();
        aVLTree9.delete(100);
        int int15 = aVLTree9.height();
        avltree.AVLTree.Node node17 = aVLTree9.find((int) (short) -1);
        avltree.AVLTree.Node node18 = aVLTree9.getRoot();
        avltree.AVLTree.Node node20 = aVLTree9.find(1);
        aVLTree9.delete(10);
        int int23 = aVLTree9.height();
        aVLTree9.insert((int) ' ');
        avltree.AVLTree.Node node26 = aVLTree9.getRoot();
        avltree.AVLTree.Node node27 = aVLTree9.getRoot();
        int int28 = aVLTree0.getBalance(node27);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1577");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = aVLTree3.getRoot();
        aVLTree3.insert((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node17 = aVLTree9.find((int) ' ');
        int int18 = aVLTree9.height();
        avltree.AVLTree.Node node19 = aVLTree9.getRoot();
        int int20 = aVLTree3.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        avltree.AVLTree.Node node23 = aVLTree0.find((int) 'a');
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        aVLTree24.delete(1);
        aVLTree24.delete((int) '#');
        aVLTree24.delete((int) (short) -1);
        avltree.AVLTree.Node node35 = aVLTree24.getRoot();
        aVLTree24.insert(10);
        aVLTree24.delete(1);
        avltree.AVLTree.Node node40 = aVLTree24.getRoot();
        int int41 = aVLTree24.height();
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node44 = aVLTree24.getRoot();
        int int45 = aVLTree0.getBalance(node44);
        int int46 = aVLTree0.height();
        aVLTree0.insert((int) (byte) 0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test1578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1578");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.insert(0);
        aVLTree0.delete((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test1579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1579");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        aVLTree0.insert((int) (short) 1);
        int int44 = aVLTree0.height();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        avltree.AVLTree.Node node48 = null;
        int int49 = aVLTree45.getBalance(node48);
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node53 = aVLTree51.find((int) '4');
        avltree.AVLTree.Node node54 = aVLTree51.getRoot();
        aVLTree51.delete(100);
        int int57 = aVLTree51.height();
        avltree.AVLTree.Node node59 = aVLTree51.find((int) (short) -1);
        avltree.AVLTree.Node node60 = aVLTree51.getRoot();
        avltree.AVLTree.Node node61 = aVLTree51.getRoot();
        aVLTree51.insert((int) (byte) 1);
        avltree.AVLTree.Node node64 = aVLTree51.getRoot();
        int int65 = aVLTree45.getBalance(node64);
        int int66 = aVLTree0.getBalance(node64);
        int int67 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test1580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1580");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        aVLTree0.insert(10);
        aVLTree0.delete(1);
        avltree.AVLTree.Node node16 = aVLTree0.getRoot();
        int int17 = aVLTree0.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree18.getBalance(node21);
        aVLTree18.insert((int) (short) 100);
        avltree.AVLTree.Node node26 = aVLTree18.find((int) ' ');
        int int27 = aVLTree18.height();
        avltree.AVLTree.Node node28 = aVLTree18.getRoot();
        int int29 = aVLTree0.getBalance(node28);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.insert((int) (byte) 100);
        int int36 = aVLTree30.height();
        aVLTree30.insert(10);
        avltree.AVLTree.Node node40 = aVLTree30.find((int) (byte) 10);
        avltree.AVLTree.Node node42 = aVLTree30.find((int) (byte) 0);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        avltree.AVLTree.Node node49 = null;
        int int50 = aVLTree43.getBalance(node49);
        avltree.AVLTree.Node node52 = aVLTree43.find((int) ' ');
        int int53 = aVLTree43.height();
        avltree.AVLTree.Node node55 = aVLTree43.find((int) (short) 1);
        int int56 = aVLTree43.height();
        avltree.AVLTree aVLTree57 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = aVLTree57.find((int) '4');
        avltree.AVLTree.Node node60 = null;
        int int61 = aVLTree57.getBalance(node60);
        aVLTree57.insert((int) '4');
        avltree.AVLTree.Node node65 = aVLTree57.find(100);
        avltree.AVLTree.Node node66 = aVLTree57.getRoot();
        int int67 = aVLTree43.getBalance(node66);
        int int68 = aVLTree30.getBalance(node66);
        int int69 = aVLTree0.getBalance(node66);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test1581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1581");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) 10);
        aVLTree0.insert((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test1582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1582");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        int int7 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.find(10);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        int int14 = aVLTree11.height();
        int int15 = aVLTree11.height();
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree16.getBalance(node17);
        aVLTree16.insert((int) (byte) 100);
        aVLTree16.insert((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree16.find((int) (byte) 100);
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        aVLTree25.delete((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree25.getRoot();
        aVLTree25.delete(0);
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree25.getBalance(node33);
        int int35 = aVLTree25.height();
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        avltree.AVLTree.Node node39 = aVLTree36.getRoot();
        aVLTree36.delete(100);
        aVLTree36.insert((int) (byte) 10);
        avltree.AVLTree.Node node44 = aVLTree36.getRoot();
        int int45 = aVLTree25.getBalance(node44);
        int int46 = aVLTree16.getBalance(node44);
        int int47 = aVLTree11.getBalance(node44);
        int int48 = aVLTree0.getBalance(node44);
        aVLTree0.insert(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test1583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1583");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree23.find((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree23.find((int) ' ');
        avltree.AVLTree.Node node31 = aVLTree23.find(0);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        aVLTree32.delete((int) 'a');
        aVLTree32.delete(1);
        aVLTree32.delete((int) '#');
        aVLTree32.delete((int) (short) -1);
        avltree.AVLTree.Node node43 = aVLTree32.getRoot();
        avltree.AVLTree.Node node45 = aVLTree32.find((int) (byte) 100);
        int int46 = aVLTree32.height();
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node50 = aVLTree47.getRoot();
        aVLTree47.insert((int) (byte) 100);
        avltree.AVLTree aVLTree53 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = aVLTree53.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree53.find((int) 'a');
        aVLTree53.delete((int) (short) 10);
        avltree.AVLTree aVLTree60 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = null;
        int int62 = aVLTree60.getBalance(node61);
        aVLTree60.insert((int) (byte) 100);
        aVLTree60.insert((int) 'a');
        avltree.AVLTree.Node node68 = aVLTree60.find((int) (byte) 100);
        int int69 = aVLTree53.getBalance(node68);
        int int70 = aVLTree47.getBalance(node68);
        int int71 = aVLTree32.getBalance(node68);
        int int72 = aVLTree23.getBalance(node68);
        int int73 = aVLTree0.getBalance(node68);
        int int74 = aVLTree0.height();
        java.lang.Class<?> wildcardClass75 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass75);
    }

    @Test
    public void test1584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1584");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        int int17 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 100);
        aVLTree0.delete((int) (byte) -1);
        avltree.AVLTree.Node node22 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node22);
    }

    @Test
    public void test1585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1585");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree0.getRoot();
        avltree.AVLTree.Node node44 = aVLTree0.getRoot();
        avltree.AVLTree.Node node46 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        avltree.AVLTree.Node node51 = aVLTree0.find((-1));
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree52.getRoot();
        aVLTree52.delete(100);
        int int58 = aVLTree52.height();
        avltree.AVLTree.Node node60 = aVLTree52.find((int) (short) -1);
        avltree.AVLTree.Node node61 = aVLTree52.getRoot();
        avltree.AVLTree.Node node63 = aVLTree52.find(1);
        avltree.AVLTree.Node node64 = aVLTree52.getRoot();
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node67 = aVLTree65.find((-1));
        aVLTree65.delete(100);
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node71 = null;
        int int72 = aVLTree70.getBalance(node71);
        aVLTree70.insert((int) (byte) 100);
        aVLTree70.insert((int) 'a');
        avltree.AVLTree.Node node78 = aVLTree70.find((int) (byte) 100);
        int int79 = aVLTree65.getBalance(node78);
        int int80 = aVLTree52.getBalance(node78);
        int int81 = aVLTree0.getBalance(node78);
        java.lang.Class<?> wildcardClass82 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test1586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1586");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        int int16 = aVLTree0.height();
        avltree.AVLTree.Node node18 = aVLTree0.find(0);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree19.getRoot();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        avltree.AVLTree.Node node26 = aVLTree21.find((int) (short) -1);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        aVLTree27.delete((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        aVLTree27.delete(0);
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree27.getBalance(node35);
        int int37 = aVLTree27.height();
        aVLTree27.delete(100);
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree40.getRoot();
        aVLTree40.delete(100);
        aVLTree40.insert((int) (byte) 10);
        avltree.AVLTree.Node node48 = aVLTree40.getRoot();
        int int49 = aVLTree27.getBalance(node48);
        int int50 = aVLTree21.getBalance(node48);
        int int51 = aVLTree19.getBalance(node48);
        int int52 = aVLTree0.getBalance(node48);
        aVLTree0.insert(0);
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1587");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree17.getRoot();
        aVLTree17.delete(100);
        aVLTree17.insert((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree17.getRoot();
        int int26 = aVLTree6.getBalance(node25);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((-1));
        int int30 = aVLTree27.height();
        avltree.AVLTree.Node node31 = aVLTree27.getRoot();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree32.getBalance(node33);
        aVLTree32.insert((int) (byte) 100);
        aVLTree32.insert((int) 'a');
        avltree.AVLTree.Node node40 = aVLTree32.find((int) (byte) 100);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.delete((int) 'a');
        avltree.AVLTree.Node node46 = aVLTree41.getRoot();
        aVLTree41.delete(0);
        avltree.AVLTree.Node node49 = null;
        int int50 = aVLTree41.getBalance(node49);
        int int51 = aVLTree41.height();
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree52.getRoot();
        aVLTree52.delete(100);
        aVLTree52.insert((int) (byte) 10);
        avltree.AVLTree.Node node60 = aVLTree52.getRoot();
        int int61 = aVLTree41.getBalance(node60);
        int int62 = aVLTree32.getBalance(node60);
        avltree.AVLTree.Node node63 = aVLTree32.getRoot();
        int int64 = aVLTree27.getBalance(node63);
        int int65 = aVLTree6.getBalance(node63);
        int int66 = aVLTree0.getBalance(node63);
        aVLTree0.insert((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test1588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1588");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        aVLTree12.delete((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        aVLTree12.delete(0);
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree12.getBalance(node20);
        avltree.AVLTree.Node node22 = null;
        int int23 = aVLTree12.getBalance(node22);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node28 = aVLTree24.find((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete((int) (short) 10);
        avltree.AVLTree.Node node32 = aVLTree24.getRoot();
        avltree.AVLTree.Node node33 = aVLTree24.getRoot();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree34.getBalance(node35);
        aVLTree34.insert((int) (byte) 100);
        aVLTree34.insert((int) 'a');
        avltree.AVLTree.Node node42 = aVLTree34.find((int) (byte) 100);
        int int43 = aVLTree24.getBalance(node42);
        int int44 = aVLTree12.getBalance(node42);
        int int45 = aVLTree0.getBalance(node42);
        aVLTree0.insert((int) '#');
        aVLTree0.insert((int) ' ');
        avltree.AVLTree.Node node51 = aVLTree0.find((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(node51);
    }

    @Test
    public void test1589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1589");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        avltree.AVLTree.Node node20 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) 'a');
        aVLTree0.delete(0);
        int int25 = aVLTree0.height();
        int int26 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test1590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1590");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node13 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(node18);
    }

    @Test
    public void test1591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1591");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 1);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '4');
        int int9 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test1592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1592");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.find(0);
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1593");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree0.getBalance(node9);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) -1);
        java.lang.Class<?> wildcardClass14 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1594");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node6 = aVLTree0.find(100);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        aVLTree7.delete(0);
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree7.getBalance(node15);
        int int17 = aVLTree7.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        int int27 = aVLTree7.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        int int49 = aVLTree7.getBalance(node47);
        int int50 = aVLTree0.getBalance(node47);
        avltree.AVLTree.Node node51 = aVLTree0.getRoot();
        avltree.AVLTree.Node node53 = aVLTree0.find(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNull(node53);
    }

    @Test
    public void test1595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1595");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree.Node node7 = aVLTree0.find((int) (short) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node7);
    }

    @Test
    public void test1596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1596");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        avltree.AVLTree.Node node54 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass55 = node54.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test1597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1597");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        int int7 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.find(10);
        int int10 = aVLTree0.height();
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) ' ');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1598");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node12);
    }

    @Test
    public void test1599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1599");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        avltree.AVLTree.Node node48 = null;
        int int49 = aVLTree45.getBalance(node48);
        aVLTree45.insert(0);
        aVLTree45.insert((int) (short) 10);
        avltree.AVLTree.Node node54 = aVLTree45.getRoot();
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = null;
        int int57 = aVLTree55.getBalance(node56);
        aVLTree55.insert((int) (byte) 100);
        aVLTree55.insert((int) 'a');
        avltree.AVLTree.Node node63 = aVLTree55.find((int) (byte) 100);
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = aVLTree64.find((int) '4');
        aVLTree64.delete((int) 'a');
        avltree.AVLTree.Node node69 = aVLTree64.getRoot();
        aVLTree64.delete(0);
        avltree.AVLTree.Node node72 = null;
        int int73 = aVLTree64.getBalance(node72);
        int int74 = aVLTree64.height();
        avltree.AVLTree aVLTree75 = new avltree.AVLTree();
        avltree.AVLTree.Node node77 = aVLTree75.find((int) '4');
        avltree.AVLTree.Node node78 = aVLTree75.getRoot();
        aVLTree75.delete(100);
        aVLTree75.insert((int) (byte) 10);
        avltree.AVLTree.Node node83 = aVLTree75.getRoot();
        int int84 = aVLTree64.getBalance(node83);
        int int85 = aVLTree55.getBalance(node83);
        int int86 = aVLTree45.getBalance(node83);
        int int87 = aVLTree0.getBalance(node83);
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node90 = aVLTree0.getRoot();
        int int91 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test1600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1600");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree23.find((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree23.find((int) ' ');
        avltree.AVLTree.Node node31 = aVLTree23.find(0);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        aVLTree32.delete((int) 'a');
        aVLTree32.delete(1);
        aVLTree32.delete((int) '#');
        aVLTree32.delete((int) (short) -1);
        avltree.AVLTree.Node node43 = aVLTree32.getRoot();
        avltree.AVLTree.Node node45 = aVLTree32.find((int) (byte) 100);
        int int46 = aVLTree32.height();
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node50 = aVLTree47.getRoot();
        aVLTree47.insert((int) (byte) 100);
        avltree.AVLTree aVLTree53 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = aVLTree53.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree53.find((int) 'a');
        aVLTree53.delete((int) (short) 10);
        avltree.AVLTree aVLTree60 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = null;
        int int62 = aVLTree60.getBalance(node61);
        aVLTree60.insert((int) (byte) 100);
        aVLTree60.insert((int) 'a');
        avltree.AVLTree.Node node68 = aVLTree60.find((int) (byte) 100);
        int int69 = aVLTree53.getBalance(node68);
        int int70 = aVLTree47.getBalance(node68);
        int int71 = aVLTree32.getBalance(node68);
        int int72 = aVLTree23.getBalance(node68);
        int int73 = aVLTree0.getBalance(node68);
        int int74 = aVLTree0.height();
        int int75 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
    }

    @Test
    public void test1601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1601");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete(0);
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree9.getBalance(node17);
        int int19 = aVLTree9.height();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree20.getRoot();
        aVLTree20.delete(100);
        aVLTree20.insert((int) (byte) 10);
        avltree.AVLTree.Node node28 = aVLTree20.getRoot();
        int int29 = aVLTree9.getBalance(node28);
        int int30 = aVLTree0.getBalance(node28);
        aVLTree0.delete((int) '4');
        java.lang.Class<?> wildcardClass33 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1602");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node7 = aVLTree0.find((int) (short) 1);
        aVLTree0.insert((int) '4');
        int int10 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test1603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1603");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.find(10);
        avltree.AVLTree.Node node14 = aVLTree0.find(100);
        avltree.AVLTree.Node node16 = aVLTree0.find((int) (short) 1);
        aVLTree0.insert((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test1604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1604");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        int int5 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.insert((int) (short) 1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((-1));
        int int20 = aVLTree17.height();
        avltree.AVLTree.Node node21 = aVLTree17.getRoot();
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        aVLTree26.delete((int) 'a');
        avltree.AVLTree.Node node31 = aVLTree26.getRoot();
        aVLTree26.delete(0);
        avltree.AVLTree.Node node34 = null;
        int int35 = aVLTree26.getBalance(node34);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree26.getBalance(node36);
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        aVLTree38.delete((int) 'a');
        avltree.AVLTree.Node node43 = aVLTree38.getRoot();
        avltree.AVLTree.Node node44 = null;
        int int45 = aVLTree38.getBalance(node44);
        avltree.AVLTree.Node node47 = aVLTree38.find((int) ' ');
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        avltree.AVLTree.Node node52 = aVLTree48.find((int) 'a');
        aVLTree48.delete((int) (short) 10);
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = null;
        int int57 = aVLTree55.getBalance(node56);
        aVLTree55.insert((int) (byte) 100);
        aVLTree55.insert((int) 'a');
        avltree.AVLTree.Node node63 = aVLTree55.find((int) (byte) 100);
        int int64 = aVLTree48.getBalance(node63);
        int int65 = aVLTree38.getBalance(node63);
        int int66 = aVLTree26.getBalance(node63);
        int int67 = aVLTree17.getBalance(node63);
        int int68 = aVLTree9.getBalance(node63);
        avltree.AVLTree aVLTree69 = new avltree.AVLTree();
        avltree.AVLTree.Node node71 = aVLTree69.find((int) '4');
        avltree.AVLTree.Node node72 = aVLTree69.getRoot();
        aVLTree69.delete(100);
        aVLTree69.insert((int) (byte) 10);
        avltree.AVLTree.Node node77 = aVLTree69.getRoot();
        aVLTree69.insert((int) (byte) 100);
        int int80 = aVLTree69.height();
        aVLTree69.delete((int) (byte) 0);
        avltree.AVLTree.Node node84 = aVLTree69.find(0);
        int int85 = aVLTree69.height();
        avltree.AVLTree.Node node86 = aVLTree69.getRoot();
        int int87 = aVLTree9.getBalance(node86);
        int int88 = aVLTree0.getBalance(node86);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 1 + "'", int80 == 1);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 1 + "'", int87 == 1);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
    }

    @Test
    public void test1605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1605");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find((-1));
        int int14 = aVLTree0.height();
        int int15 = aVLTree0.height();
        int int16 = aVLTree0.height();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node19 = aVLTree0.getRoot();
        avltree.AVLTree.Node node20 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNotNull(node20);
    }

    @Test
    public void test1606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1606");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        aVLTree0.insert((int) (short) 1);
        aVLTree0.delete((int) 'a');
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test1607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1607");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        aVLTree0.delete((int) '4');
        int int11 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1608");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete(0);
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree9.getBalance(node17);
        int int19 = aVLTree9.height();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree20.getRoot();
        aVLTree20.delete(100);
        aVLTree20.insert((int) (byte) 10);
        avltree.AVLTree.Node node28 = aVLTree20.getRoot();
        int int29 = aVLTree9.getBalance(node28);
        int int30 = aVLTree0.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree0.getRoot();
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        avltree.AVLTree.Node node34 = aVLTree0.find((int) (byte) 100);
        java.lang.Class<?> wildcardClass35 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test1609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1609");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.delete(0);
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test1610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1610");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        aVLTree26.delete((int) 'a');
        avltree.AVLTree.Node node31 = aVLTree26.getRoot();
        aVLTree26.delete(0);
        avltree.AVLTree.Node node34 = null;
        int int35 = aVLTree26.getBalance(node34);
        int int36 = aVLTree26.height();
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node39 = aVLTree37.find((int) '4');
        avltree.AVLTree.Node node40 = aVLTree37.getRoot();
        aVLTree37.delete(100);
        aVLTree37.insert((int) (byte) 10);
        avltree.AVLTree.Node node45 = aVLTree37.getRoot();
        int int46 = aVLTree26.getBalance(node45);
        int int47 = aVLTree17.getBalance(node45);
        avltree.AVLTree.Node node48 = aVLTree17.getRoot();
        avltree.AVLTree.Node node49 = aVLTree17.getRoot();
        int int50 = aVLTree0.getBalance(node49);
        avltree.AVLTree.Node node51 = aVLTree0.getRoot();
        avltree.AVLTree.Node node53 = aVLTree0.find((int) (short) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertNull(node53);
    }

    @Test
    public void test1611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1611");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        aVLTree0.delete((int) ' ');
        int int8 = aVLTree0.height();
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test1612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1612");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find(0);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        aVLTree9.delete(1);
        aVLTree9.delete((int) '#');
        aVLTree9.delete((int) (short) -1);
        avltree.AVLTree.Node node20 = aVLTree9.getRoot();
        avltree.AVLTree.Node node22 = aVLTree9.find((int) (byte) 100);
        int int23 = aVLTree9.height();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        aVLTree24.insert((int) (byte) 100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree30.find((int) 'a');
        aVLTree30.delete((int) (short) 10);
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        aVLTree37.insert((int) (byte) 100);
        aVLTree37.insert((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree37.find((int) (byte) 100);
        int int46 = aVLTree30.getBalance(node45);
        int int47 = aVLTree24.getBalance(node45);
        int int48 = aVLTree9.getBalance(node45);
        int int49 = aVLTree0.getBalance(node45);
        avltree.AVLTree.Node node50 = aVLTree0.getRoot();
        aVLTree0.insert(1);
        aVLTree0.delete(100);
        int int55 = aVLTree0.height();
        aVLTree0.insert((int) ' ');
        aVLTree0.insert(10);
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert(10);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test1613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1613");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        avltree.AVLTree.Node node43 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node45 = aVLTree0.find((int) (byte) -1);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((int) ' ');
        int int50 = aVLTree0.height();
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node53 = aVLTree51.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree51.find((int) 'a');
        aVLTree51.insert((int) (short) -1);
        avltree.AVLTree aVLTree58 = new avltree.AVLTree();
        avltree.AVLTree.Node node60 = aVLTree58.find((int) '4');
        aVLTree58.insert((int) (short) 0);
        avltree.AVLTree.Node node64 = aVLTree58.find(100);
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node67 = aVLTree65.find((int) '4');
        avltree.AVLTree.Node node68 = aVLTree65.getRoot();
        aVLTree65.delete(100);
        aVLTree65.insert((int) (byte) 10);
        avltree.AVLTree.Node node73 = aVLTree65.getRoot();
        int int74 = aVLTree58.getBalance(node73);
        int int75 = aVLTree51.getBalance(node73);
        avltree.AVLTree.Node node76 = aVLTree51.getRoot();
        int int77 = aVLTree0.getBalance(node76);
        java.lang.Class<?> wildcardClass78 = node76.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 1 + "'", int50 == 1);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test1614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1614");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert(1);
        avltree.AVLTree.Node node7 = aVLTree0.find((int) (byte) 10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node7);
    }

    @Test
    public void test1615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1615");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        int int14 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1616");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        aVLTree0.insert((-1));
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        aVLTree8.delete((int) (byte) -1);
        aVLTree8.delete((int) (byte) 0);
        avltree.AVLTree.Node node13 = aVLTree8.getRoot();
        avltree.AVLTree.Node node15 = aVLTree8.find(1);
        avltree.AVLTree.Node node17 = aVLTree8.find(10);
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = null;
        int int20 = aVLTree18.getBalance(node19);
        aVLTree18.delete((int) (byte) -1);
        int int23 = aVLTree18.height();
        int int24 = aVLTree18.height();
        avltree.AVLTree.Node node26 = aVLTree18.find((int) '#');
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree27.find((int) 'a');
        aVLTree27.delete((int) (short) 10);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree34.getBalance(node35);
        aVLTree34.insert((int) (byte) 100);
        aVLTree34.insert((int) 'a');
        avltree.AVLTree.Node node42 = aVLTree34.find((int) (byte) 100);
        int int43 = aVLTree27.getBalance(node42);
        int int44 = aVLTree18.getBalance(node42);
        int int45 = aVLTree8.getBalance(node42);
        int int46 = aVLTree0.getBalance(node42);
        int int47 = aVLTree0.height();
        avltree.AVLTree.Node node49 = aVLTree0.find((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node49);
    }

    @Test
    public void test1617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1617");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        aVLTree12.delete((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        aVLTree12.insert((int) (short) 1);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((-1));
        int int23 = aVLTree20.height();
        avltree.AVLTree.Node node24 = aVLTree20.getRoot();
        aVLTree20.insert((int) (byte) 100);
        aVLTree20.delete(100);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        aVLTree29.delete((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree29.getRoot();
        aVLTree29.delete(0);
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree29.getBalance(node37);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree29.getBalance(node39);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.delete((int) 'a');
        avltree.AVLTree.Node node46 = aVLTree41.getRoot();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree41.getBalance(node47);
        avltree.AVLTree.Node node50 = aVLTree41.find((int) ' ');
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node53 = aVLTree51.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree51.find((int) 'a');
        aVLTree51.delete((int) (short) 10);
        avltree.AVLTree aVLTree58 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = null;
        int int60 = aVLTree58.getBalance(node59);
        aVLTree58.insert((int) (byte) 100);
        aVLTree58.insert((int) 'a');
        avltree.AVLTree.Node node66 = aVLTree58.find((int) (byte) 100);
        int int67 = aVLTree51.getBalance(node66);
        int int68 = aVLTree41.getBalance(node66);
        int int69 = aVLTree29.getBalance(node66);
        int int70 = aVLTree20.getBalance(node66);
        int int71 = aVLTree12.getBalance(node66);
        avltree.AVLTree aVLTree72 = new avltree.AVLTree();
        avltree.AVLTree.Node node74 = aVLTree72.find((int) '4');
        aVLTree72.delete((int) 'a');
        avltree.AVLTree.Node node77 = aVLTree72.getRoot();
        aVLTree72.delete(0);
        avltree.AVLTree.Node node80 = null;
        int int81 = aVLTree72.getBalance(node80);
        int int82 = aVLTree72.height();
        avltree.AVLTree aVLTree83 = new avltree.AVLTree();
        avltree.AVLTree.Node node85 = aVLTree83.find((int) '4');
        avltree.AVLTree.Node node86 = aVLTree83.getRoot();
        aVLTree83.delete(100);
        aVLTree83.insert((int) (byte) 10);
        avltree.AVLTree.Node node91 = aVLTree83.getRoot();
        int int92 = aVLTree72.getBalance(node91);
        int int93 = aVLTree12.getBalance(node91);
        aVLTree12.delete(10);
        avltree.AVLTree.Node node96 = aVLTree12.getRoot();
        int int97 = aVLTree0.getBalance(node96);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNull(node86);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 0 + "'", int93 == 0);
        org.junit.Assert.assertNotNull(node96);
        org.junit.Assert.assertTrue("'" + int97 + "' != '" + 0 + "'", int97 == 0);
    }

    @Test
    public void test1618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1618");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) (short) 100);
        avltree.AVLTree.Node node19 = aVLTree11.find((int) ' ');
        int int20 = aVLTree11.height();
        avltree.AVLTree.Node node21 = aVLTree11.getRoot();
        int int22 = aVLTree5.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        int int24 = aVLTree0.height();
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) 'a');
        aVLTree0.delete((-1));
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node35 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass36 = node35.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test1619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1619");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree7.getRoot();
        int int15 = aVLTree0.getBalance(node14);
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 100);
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node21 = aVLTree0.find(0);
        avltree.AVLTree.Node node22 = aVLTree0.getRoot();
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node22);
    }

    @Test
    public void test1620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1620");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find(10);
        aVLTree0.delete(10);
        java.lang.Class<?> wildcardClass11 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1621");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) -1);
        int int8 = aVLTree0.height();
        java.lang.Class<?> wildcardClass9 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test1622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1622");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 10);
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.insert(0);
        java.lang.Class<?> wildcardClass15 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test1623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1623");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = aVLTree3.getRoot();
        aVLTree3.insert((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node17 = aVLTree9.find((int) ' ');
        int int18 = aVLTree9.height();
        avltree.AVLTree.Node node19 = aVLTree9.getRoot();
        int int20 = aVLTree3.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        avltree.AVLTree.Node node23 = aVLTree0.find((int) 'a');
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree24.getBalance(node25);
        aVLTree24.insert((int) (byte) 100);
        aVLTree24.insert((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree24.find((int) (byte) 100);
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        aVLTree33.delete((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree33.getRoot();
        aVLTree33.delete(0);
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree33.getBalance(node41);
        int int43 = aVLTree33.height();
        avltree.AVLTree aVLTree44 = new avltree.AVLTree();
        avltree.AVLTree.Node node46 = aVLTree44.find((int) '4');
        avltree.AVLTree.Node node47 = aVLTree44.getRoot();
        aVLTree44.delete(100);
        aVLTree44.insert((int) (byte) 10);
        avltree.AVLTree.Node node52 = aVLTree44.getRoot();
        int int53 = aVLTree33.getBalance(node52);
        int int54 = aVLTree24.getBalance(node52);
        avltree.AVLTree.Node node55 = aVLTree24.getRoot();
        int int56 = aVLTree0.getBalance(node55);
        avltree.AVLTree aVLTree57 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = aVLTree57.find((int) '4');
        aVLTree57.delete((int) 'a');
        avltree.AVLTree.Node node62 = aVLTree57.getRoot();
        aVLTree57.delete(0);
        avltree.AVLTree.Node node65 = null;
        int int66 = aVLTree57.getBalance(node65);
        int int67 = aVLTree57.height();
        avltree.AVLTree aVLTree68 = new avltree.AVLTree();
        avltree.AVLTree.Node node70 = aVLTree68.find((int) '4');
        avltree.AVLTree.Node node71 = aVLTree68.getRoot();
        aVLTree68.delete(100);
        aVLTree68.insert((int) (byte) 10);
        avltree.AVLTree.Node node76 = aVLTree68.getRoot();
        int int77 = aVLTree57.getBalance(node76);
        int int78 = aVLTree0.getBalance(node76);
        int int79 = aVLTree0.height();
        avltree.AVLTree.Node node81 = aVLTree0.find((-1));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass82 = node81.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(node81);
    }

    @Test
    public void test1624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1624");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        int int7 = aVLTree0.height();
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree8.getRoot();
        aVLTree8.delete(100);
        aVLTree8.insert((int) (byte) 10);
        avltree.AVLTree.Node node16 = aVLTree8.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        aVLTree0.delete((int) (short) 100);
        aVLTree0.delete((int) (byte) 100);
        avltree.AVLTree.Node node23 = aVLTree0.find((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node23);
    }

    @Test
    public void test1625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1625");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree7.getRoot();
        int int15 = aVLTree0.getBalance(node14);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        aVLTree16.delete((int) (byte) -1);
        aVLTree16.delete((int) (byte) 0);
        avltree.AVLTree.Node node21 = aVLTree16.getRoot();
        avltree.AVLTree.Node node23 = aVLTree16.find(1);
        avltree.AVLTree.Node node25 = aVLTree16.find(10);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree26.getBalance(node27);
        aVLTree26.delete((int) (byte) -1);
        int int31 = aVLTree26.height();
        int int32 = aVLTree26.height();
        avltree.AVLTree.Node node34 = aVLTree26.find((int) '#');
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node39 = aVLTree35.find((int) 'a');
        aVLTree35.delete((int) (short) 10);
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree42.getBalance(node43);
        aVLTree42.insert((int) (byte) 100);
        aVLTree42.insert((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree42.find((int) (byte) 100);
        int int51 = aVLTree35.getBalance(node50);
        int int52 = aVLTree26.getBalance(node50);
        int int53 = aVLTree16.getBalance(node50);
        int int54 = aVLTree0.getBalance(node50);
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node58 = aVLTree55.getRoot();
        aVLTree55.delete(100);
        aVLTree55.insert((int) (byte) 10);
        avltree.AVLTree.Node node63 = aVLTree55.getRoot();
        aVLTree55.insert((int) (byte) 100);
        int int66 = aVLTree55.height();
        avltree.AVLTree.Node node68 = aVLTree55.find((int) (byte) -1);
        aVLTree55.insert((-1));
        int int71 = aVLTree55.height();
        avltree.AVLTree aVLTree72 = new avltree.AVLTree();
        avltree.AVLTree.Node node74 = aVLTree72.find((int) '4');
        avltree.AVLTree.Node node75 = aVLTree72.getRoot();
        aVLTree72.insert((int) (byte) 100);
        int int78 = aVLTree72.height();
        aVLTree72.insert(1);
        aVLTree72.insert(0);
        avltree.AVLTree.Node node83 = aVLTree72.getRoot();
        int int84 = aVLTree55.getBalance(node83);
        int int85 = aVLTree0.getBalance(node83);
        avltree.AVLTree.Node node86 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 1 + "'", int71 == 1);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNotNull(node86);
    }

    @Test
    public void test1626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1626");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.delete((int) (byte) 1);
        aVLTree0.delete((int) ' ');
        aVLTree0.insert((int) (short) 10);
        int int15 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
    }

    @Test
    public void test1627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1627");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        aVLTree0.insert(1);
        int int44 = aVLTree0.height();
        java.lang.Class<?> wildcardClass45 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test1628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1628");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node10 = aVLTree0.find((-1));
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) ' ');
        aVLTree0.delete((int) (short) 100);
        int int19 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test1629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1629");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        int int4 = aVLTree0.height();
        int int5 = aVLTree0.height();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test1630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1630");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) -1);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1631");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree10.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        aVLTree0.delete(1);
        avltree.AVLTree.Node node22 = aVLTree0.find(0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(node22);
    }

    @Test
    public void test1632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1632");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) (byte) 1);
        aVLTree0.delete(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1633");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.insert(1);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 1);
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1634");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = aVLTree12.getRoot();
        aVLTree12.delete(100);
        aVLTree12.insert((int) (byte) 10);
        avltree.AVLTree.Node node20 = aVLTree12.getRoot();
        avltree.AVLTree.Node node22 = aVLTree12.find((int) (byte) 0);
        avltree.AVLTree.Node node24 = aVLTree12.find((int) (short) 1);
        aVLTree12.insert(0);
        avltree.AVLTree.Node node27 = aVLTree12.getRoot();
        avltree.AVLTree.Node node28 = aVLTree12.getRoot();
        int int29 = aVLTree0.getBalance(node28);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test1635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1635");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node47);
    }

    @Test
    public void test1636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1636");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 10);
        aVLTree0.insert(10);
        aVLTree0.delete((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test1637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1637");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        avltree.AVLTree.Node node20 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree0.find((int) ' ');
        aVLTree0.insert(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node24);
    }

    @Test
    public void test1638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1638");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        aVLTree0.insert(1);
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        aVLTree18.delete((int) 'a');
        aVLTree18.delete(1);
        aVLTree18.delete((int) '#');
        aVLTree18.delete((int) (short) -1);
        avltree.AVLTree.Node node29 = aVLTree18.getRoot();
        aVLTree18.insert(10);
        aVLTree18.delete(1);
        avltree.AVLTree.Node node34 = aVLTree18.getRoot();
        int int35 = aVLTree0.getBalance(node34);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test1639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1639");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        java.lang.Class<?> wildcardClass54 = node50.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test1640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1640");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        int int5 = aVLTree0.height();
        java.lang.Class<?> wildcardClass6 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test1641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1641");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.insert((int) (short) 0);
        avltree.AVLTree.Node node16 = aVLTree10.find(100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree17.getRoot();
        aVLTree17.delete(100);
        aVLTree17.insert((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree17.getRoot();
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        aVLTree0.delete((int) (byte) 10);
        java.lang.Class<?> wildcardClass30 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test1642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1642");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1643");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node10 = aVLTree0.find((-1));
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        int int13 = aVLTree0.height();
        int int14 = aVLTree0.height();
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        aVLTree15.delete((int) 'a');
        avltree.AVLTree.Node node20 = aVLTree15.getRoot();
        aVLTree15.delete(0);
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree15.getBalance(node23);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree15.getBalance(node25);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree27.find((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        aVLTree27.delete((int) (short) 10);
        avltree.AVLTree.Node node35 = aVLTree27.getRoot();
        avltree.AVLTree.Node node36 = aVLTree27.getRoot();
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        aVLTree37.insert((int) (byte) 100);
        aVLTree37.insert((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree37.find((int) (byte) 100);
        int int46 = aVLTree27.getBalance(node45);
        int int47 = aVLTree15.getBalance(node45);
        aVLTree15.delete((int) (short) 10);
        avltree.AVLTree aVLTree50 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree50.getBalance(node51);
        aVLTree50.insert((int) (byte) 100);
        aVLTree50.insert((int) 'a');
        avltree.AVLTree.Node node58 = aVLTree50.find((int) (byte) 100);
        avltree.AVLTree.Node node59 = aVLTree50.getRoot();
        avltree.AVLTree.Node node60 = aVLTree50.getRoot();
        int int61 = aVLTree15.getBalance(node60);
        int int62 = aVLTree0.getBalance(node60);
        aVLTree0.delete((int) ' ');
        aVLTree0.delete((int) (byte) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test1644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1644");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int12 = aVLTree0.height();
        aVLTree0.delete((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1645");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete(0);
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree9.getBalance(node17);
        int int19 = aVLTree9.height();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree20.getRoot();
        aVLTree20.delete(100);
        aVLTree20.insert((int) (byte) 10);
        avltree.AVLTree.Node node28 = aVLTree20.getRoot();
        int int29 = aVLTree9.getBalance(node28);
        int int30 = aVLTree0.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree0.getRoot();
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        aVLTree33.delete((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree33.getRoot();
        aVLTree33.delete(0);
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree33.getBalance(node41);
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree33.getBalance(node43);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree45.getBalance(node51);
        avltree.AVLTree.Node node54 = aVLTree45.find((int) ' ');
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree55.find((int) 'a');
        aVLTree55.delete((int) (short) 10);
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree62.getBalance(node63);
        aVLTree62.insert((int) (byte) 100);
        aVLTree62.insert((int) 'a');
        avltree.AVLTree.Node node70 = aVLTree62.find((int) (byte) 100);
        int int71 = aVLTree55.getBalance(node70);
        int int72 = aVLTree45.getBalance(node70);
        int int73 = aVLTree33.getBalance(node70);
        int int74 = aVLTree0.getBalance(node70);
        int int75 = aVLTree0.height();
        avltree.AVLTree.Node node77 = aVLTree0.find(10);
        avltree.AVLTree.Node node79 = aVLTree0.find((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNull(node79);
    }

    @Test
    public void test1646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1646");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        int int11 = aVLTree0.height();
        aVLTree0.insert(0);
        int int14 = aVLTree0.height();
        int int15 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1647");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find((-1));
        aVLTree0.insert((int) (short) 0);
        aVLTree0.insert((int) (byte) -1);
        int int18 = aVLTree0.height();
        java.lang.Class<?> wildcardClass19 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2 + "'", int18 == 2);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test1648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1648");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree0.find((int) (short) 0);
        aVLTree0.delete((int) (short) 0);
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node29);
    }

    @Test
    public void test1649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1649");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree0.getBalance(node13);
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        int int18 = aVLTree0.height();
        avltree.AVLTree.Node node20 = aVLTree0.find((int) (byte) 1);
        aVLTree0.delete((int) (byte) 100);
        aVLTree0.insert((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(node20);
    }

    @Test
    public void test1650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1650");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = aVLTree3.getRoot();
        aVLTree3.insert((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node17 = aVLTree9.find((int) ' ');
        int int18 = aVLTree9.height();
        avltree.AVLTree.Node node19 = aVLTree9.getRoot();
        int int20 = aVLTree3.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.insert((int) (short) 0);
        avltree.AVLTree.Node node30 = aVLTree24.find(100);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        aVLTree52.delete((int) 'a');
        avltree.AVLTree.Node node57 = aVLTree52.getRoot();
        aVLTree52.delete(0);
        avltree.AVLTree.Node node60 = null;
        int int61 = aVLTree52.getBalance(node60);
        int int62 = aVLTree52.height();
        avltree.AVLTree aVLTree63 = new avltree.AVLTree();
        avltree.AVLTree.Node node65 = aVLTree63.find((int) '4');
        avltree.AVLTree.Node node66 = aVLTree63.getRoot();
        aVLTree63.delete(100);
        aVLTree63.insert((int) (byte) 10);
        avltree.AVLTree.Node node71 = aVLTree63.getRoot();
        int int72 = aVLTree52.getBalance(node71);
        int int73 = aVLTree31.getBalance(node71);
        int int74 = aVLTree24.getBalance(node71);
        int int75 = aVLTree0.getBalance(node71);
        java.lang.Class<?> wildcardClass76 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1651");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test1652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1652");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete(0);
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree9.getBalance(node17);
        int int19 = aVLTree9.height();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree20.getRoot();
        aVLTree20.delete(100);
        aVLTree20.insert((int) (byte) 10);
        avltree.AVLTree.Node node28 = aVLTree20.getRoot();
        int int29 = aVLTree9.getBalance(node28);
        int int30 = aVLTree0.getBalance(node28);
        java.lang.Class<?> wildcardClass31 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test1653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1653");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree8.getRoot();
        aVLTree8.delete(100);
        int int14 = aVLTree8.height();
        avltree.AVLTree.Node node16 = aVLTree8.find((int) (short) -1);
        avltree.AVLTree.Node node17 = aVLTree8.getRoot();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree18.getBalance(node21);
        aVLTree18.insert(0);
        aVLTree18.insert((int) (short) 10);
        int int27 = aVLTree18.height();
        aVLTree18.delete((-1));
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = null;
        int int32 = aVLTree30.getBalance(node31);
        aVLTree30.delete((int) (byte) -1);
        int int35 = aVLTree30.height();
        int int36 = aVLTree30.height();
        avltree.AVLTree.Node node38 = aVLTree30.find((int) '#');
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree39.find((int) 'a');
        aVLTree39.delete((int) (short) 10);
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        aVLTree46.insert((int) (byte) 100);
        aVLTree46.insert((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree46.find((int) (byte) 100);
        int int55 = aVLTree39.getBalance(node54);
        int int56 = aVLTree30.getBalance(node54);
        int int57 = aVLTree18.getBalance(node54);
        int int58 = aVLTree8.getBalance(node54);
        int int59 = aVLTree0.getBalance(node54);
        avltree.AVLTree.Node node60 = aVLTree0.getRoot();
        avltree.AVLTree.Node node62 = aVLTree0.find(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertNull(node62);
    }

    @Test
    public void test1654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1654");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete(0);
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree9.getBalance(node17);
        int int19 = aVLTree9.height();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree20.getRoot();
        aVLTree20.delete(100);
        aVLTree20.insert((int) (byte) 10);
        avltree.AVLTree.Node node28 = aVLTree20.getRoot();
        int int29 = aVLTree9.getBalance(node28);
        int int30 = aVLTree0.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree0.getRoot();
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        aVLTree33.delete((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree33.getRoot();
        aVLTree33.delete(0);
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree33.getBalance(node41);
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree33.getBalance(node43);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree45.getBalance(node51);
        avltree.AVLTree.Node node54 = aVLTree45.find((int) ' ');
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree55.find((int) 'a');
        aVLTree55.delete((int) (short) 10);
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree62.getBalance(node63);
        aVLTree62.insert((int) (byte) 100);
        aVLTree62.insert((int) 'a');
        avltree.AVLTree.Node node70 = aVLTree62.find((int) (byte) 100);
        int int71 = aVLTree55.getBalance(node70);
        int int72 = aVLTree45.getBalance(node70);
        int int73 = aVLTree33.getBalance(node70);
        int int74 = aVLTree0.getBalance(node70);
        int int75 = aVLTree0.height();
        avltree.AVLTree.Node node77 = aVLTree0.find(10);
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.delete((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNull(node77);
    }

    @Test
    public void test1655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1655");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) 'a');
        int int7 = aVLTree0.height();
        aVLTree0.delete(0);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        aVLTree11.delete((int) 'a');
        avltree.AVLTree.Node node16 = aVLTree11.getRoot();
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree11.getBalance(node17);
        avltree.AVLTree.Node node20 = aVLTree11.find((int) ' ');
        aVLTree11.insert((-1));
        avltree.AVLTree.Node node23 = aVLTree11.getRoot();
        aVLTree11.delete((int) (byte) -1);
        aVLTree11.insert(0);
        aVLTree11.delete((int) (byte) -1);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        aVLTree30.delete((int) 'a');
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree35.getRoot();
        aVLTree35.insert((int) (byte) 100);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        avltree.AVLTree.Node node44 = null;
        int int45 = aVLTree41.getBalance(node44);
        aVLTree41.insert((int) (short) 100);
        avltree.AVLTree.Node node49 = aVLTree41.find((int) ' ');
        int int50 = aVLTree41.height();
        avltree.AVLTree.Node node51 = aVLTree41.getRoot();
        int int52 = aVLTree35.getBalance(node51);
        int int53 = aVLTree30.getBalance(node51);
        int int54 = aVLTree11.getBalance(node51);
        int int55 = aVLTree0.getBalance(node51);
        int int56 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test1656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1656");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        int int7 = aVLTree0.height();
        aVLTree0.insert(0);
        int int10 = aVLTree0.height();
        java.lang.Class<?> wildcardClass11 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1657");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node10 = aVLTree0.find(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test1658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1658");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        int int7 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.find(10);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        int int14 = aVLTree11.height();
        int int15 = aVLTree11.height();
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree16.getBalance(node17);
        aVLTree16.insert((int) (byte) 100);
        aVLTree16.insert((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree16.find((int) (byte) 100);
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        aVLTree25.delete((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree25.getRoot();
        aVLTree25.delete(0);
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree25.getBalance(node33);
        int int35 = aVLTree25.height();
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        avltree.AVLTree.Node node39 = aVLTree36.getRoot();
        aVLTree36.delete(100);
        aVLTree36.insert((int) (byte) 10);
        avltree.AVLTree.Node node44 = aVLTree36.getRoot();
        int int45 = aVLTree25.getBalance(node44);
        int int46 = aVLTree16.getBalance(node44);
        int int47 = aVLTree11.getBalance(node44);
        int int48 = aVLTree0.getBalance(node44);
        aVLTree0.insert((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test1659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1659");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        int int7 = aVLTree0.height();
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (byte) 1);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node15 = aVLTree0.find(2);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1660");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete(100);
        aVLTree0.delete(100);
    }

    @Test
    public void test1661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1661");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree23.getBalance(node24);
        aVLTree23.insert((int) (byte) 100);
        aVLTree23.insert((int) 'a');
        avltree.AVLTree.Node node31 = aVLTree23.find((int) (byte) 100);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        aVLTree32.delete((int) 'a');
        avltree.AVLTree.Node node37 = aVLTree32.getRoot();
        aVLTree32.delete(0);
        avltree.AVLTree.Node node40 = null;
        int int41 = aVLTree32.getBalance(node40);
        int int42 = aVLTree32.height();
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        avltree.AVLTree.Node node46 = aVLTree43.getRoot();
        aVLTree43.delete(100);
        aVLTree43.insert((int) (byte) 10);
        avltree.AVLTree.Node node51 = aVLTree43.getRoot();
        int int52 = aVLTree32.getBalance(node51);
        int int53 = aVLTree23.getBalance(node51);
        avltree.AVLTree.Node node54 = aVLTree23.getRoot();
        int int55 = aVLTree0.getBalance(node54);
        aVLTree0.delete((int) (byte) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1662");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree7.getRoot();
        int int15 = aVLTree0.getBalance(node14);
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 100);
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert(10);
        aVLTree0.insert(1);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node28 = aVLTree24.find((int) 'a');
        aVLTree24.delete((int) (short) 10);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree31.getBalance(node32);
        aVLTree31.insert((int) (byte) 100);
        aVLTree31.insert((int) 'a');
        avltree.AVLTree.Node node39 = aVLTree31.find((int) (byte) 100);
        int int40 = aVLTree24.getBalance(node39);
        avltree.AVLTree.Node node41 = aVLTree24.getRoot();
        avltree.AVLTree.Node node42 = aVLTree24.getRoot();
        aVLTree24.insert((int) (short) 100);
        aVLTree24.insert((int) (byte) 0);
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node50 = null;
        int int51 = aVLTree47.getBalance(node50);
        aVLTree47.insert(0);
        avltree.AVLTree.Node node54 = aVLTree47.getRoot();
        int int55 = aVLTree24.getBalance(node54);
        int int56 = aVLTree0.getBalance(node54);
        int int57 = aVLTree0.height();
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
    }

    @Test
    public void test1663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1663");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) -1);
        aVLTree0.delete((int) (short) 10);
        int int8 = aVLTree0.height();
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1664");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete((int) ' ');
        int int7 = aVLTree0.height();
        aVLTree0.insert(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test1665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1665");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree7.getBalance(node10);
        aVLTree7.insert((int) (short) 100);
        avltree.AVLTree.Node node15 = aVLTree7.find((int) ' ');
        int int16 = aVLTree7.height();
        avltree.AVLTree.Node node17 = aVLTree7.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((int) (short) 10);
        java.lang.Class<?> wildcardClass23 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1666");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        int int23 = aVLTree0.height();
        int int24 = aVLTree0.height();
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        aVLTree25.delete((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree25.getRoot();
        avltree.AVLTree.Node node31 = null;
        int int32 = aVLTree25.getBalance(node31);
        avltree.AVLTree.Node node34 = aVLTree25.find((int) ' ');
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node39 = aVLTree35.find((int) 'a');
        aVLTree35.delete((int) (short) 10);
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree42.getBalance(node43);
        aVLTree42.insert((int) (byte) 100);
        aVLTree42.insert((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree42.find((int) (byte) 100);
        int int51 = aVLTree35.getBalance(node50);
        int int52 = aVLTree25.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        aVLTree0.insert(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test1667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1667");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree.Node node9 = aVLTree0.find((int) (byte) 10);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1668");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) 10);
        int int13 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1669");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) (byte) 1);
        aVLTree0.delete((int) (short) -1);
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test1670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1670");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((int) (byte) 100);
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        avltree.AVLTree.Node node17 = aVLTree0.find((int) '4');
        int int18 = aVLTree0.height();
        aVLTree0.insert(1);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.insert((int) (short) 0);
        avltree.AVLTree.Node node27 = aVLTree21.find(100);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.insert((int) (short) 0);
        avltree.AVLTree.Node node34 = aVLTree28.find(100);
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        aVLTree35.delete((int) 'a');
        avltree.AVLTree.Node node40 = aVLTree35.getRoot();
        aVLTree35.delete(0);
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree35.getBalance(node43);
        int int45 = aVLTree35.height();
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node48 = aVLTree46.find((int) '4');
        avltree.AVLTree.Node node49 = aVLTree46.getRoot();
        aVLTree46.delete(100);
        aVLTree46.insert((int) (byte) 10);
        avltree.AVLTree.Node node54 = aVLTree46.getRoot();
        int int55 = aVLTree35.getBalance(node54);
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        aVLTree56.delete((int) 'a');
        avltree.AVLTree.Node node61 = aVLTree56.getRoot();
        aVLTree56.delete(0);
        avltree.AVLTree.Node node64 = null;
        int int65 = aVLTree56.getBalance(node64);
        int int66 = aVLTree56.height();
        avltree.AVLTree aVLTree67 = new avltree.AVLTree();
        avltree.AVLTree.Node node69 = aVLTree67.find((int) '4');
        avltree.AVLTree.Node node70 = aVLTree67.getRoot();
        aVLTree67.delete(100);
        aVLTree67.insert((int) (byte) 10);
        avltree.AVLTree.Node node75 = aVLTree67.getRoot();
        int int76 = aVLTree56.getBalance(node75);
        int int77 = aVLTree35.getBalance(node75);
        int int78 = aVLTree28.getBalance(node75);
        int int79 = aVLTree21.getBalance(node75);
        int int80 = aVLTree0.getBalance(node75);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1671");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        aVLTree7.delete(0);
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree7.getBalance(node15);
        int int17 = aVLTree7.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        int int27 = aVLTree7.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        int int49 = aVLTree7.getBalance(node47);
        int int50 = aVLTree0.getBalance(node47);
        aVLTree0.delete((-1));
        int int53 = aVLTree0.height();
        aVLTree0.insert((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
    }

    @Test
    public void test1672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1672");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        aVLTree0.delete(100);
        int int11 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test1673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1673");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree6.getBalance(node9);
        aVLTree6.insert((int) (short) 100);
        avltree.AVLTree.Node node14 = aVLTree6.find((int) ' ');
        int int15 = aVLTree6.height();
        avltree.AVLTree.Node node16 = aVLTree6.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        avltree.AVLTree.Node node19 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node24 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass25 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1674");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
    }

    @Test
    public void test1675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1675");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        int int7 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        aVLTree0.insert((int) (short) 10);
        int int12 = aVLTree0.height();
        aVLTree0.insert(100);
        int int15 = aVLTree0.height();
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        avltree.AVLTree.Node node19 = aVLTree16.getRoot();
        aVLTree16.insert((int) (byte) 100);
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = aVLTree22.find((int) '4');
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree22.getBalance(node25);
        aVLTree22.insert((int) (short) 100);
        avltree.AVLTree.Node node30 = aVLTree22.find((int) ' ');
        int int31 = aVLTree22.height();
        avltree.AVLTree.Node node32 = aVLTree22.getRoot();
        int int33 = aVLTree16.getBalance(node32);
        aVLTree16.insert((int) (byte) 0);
        avltree.AVLTree.Node node37 = aVLTree16.find(0);
        int int38 = aVLTree0.getBalance(node37);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test1676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1676");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find(10);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        aVLTree15.delete((int) 'a');
        aVLTree15.delete(1);
        avltree.AVLTree.Node node22 = aVLTree15.getRoot();
        avltree.AVLTree.Node node24 = aVLTree15.find((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree15.getRoot();
        aVLTree15.delete(0);
        aVLTree15.insert((int) (short) 1);
        avltree.AVLTree.Node node30 = aVLTree15.getRoot();
        avltree.AVLTree.Node node31 = aVLTree15.getRoot();
        int int32 = aVLTree0.getBalance(node31);
        aVLTree0.delete((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
    }

    @Test
    public void test1677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1677");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.delete((int) (short) 10);
        int int11 = aVLTree0.height();
        aVLTree0.insert((int) (short) 0);
        int int14 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1678");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.insert(0);
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test1679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1679");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) (byte) -1);
        int int5 = aVLTree0.height();
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node13 = aVLTree9.find((int) 'a');
        aVLTree9.delete((int) (short) 10);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree16.getBalance(node17);
        aVLTree16.insert((int) (byte) 100);
        aVLTree16.insert((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree16.find((int) (byte) 100);
        int int25 = aVLTree9.getBalance(node24);
        int int26 = aVLTree0.getBalance(node24);
        aVLTree0.insert((int) (byte) 0);
        aVLTree0.insert((int) '#');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test1680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1680");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (short) 0);
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) (byte) 10);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        aVLTree16.delete((int) 'a');
        aVLTree16.delete(1);
        aVLTree16.delete((int) '#');
        aVLTree16.delete((int) (short) -1);
        avltree.AVLTree.Node node27 = aVLTree16.getRoot();
        avltree.AVLTree.Node node29 = aVLTree16.find((int) (byte) 100);
        int int30 = aVLTree16.height();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree31.getRoot();
        aVLTree31.insert((int) (byte) 100);
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node39 = aVLTree37.find((int) '4');
        avltree.AVLTree.Node node41 = aVLTree37.find((int) 'a');
        aVLTree37.delete((int) (short) 10);
        avltree.AVLTree aVLTree44 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = null;
        int int46 = aVLTree44.getBalance(node45);
        aVLTree44.insert((int) (byte) 100);
        aVLTree44.insert((int) 'a');
        avltree.AVLTree.Node node52 = aVLTree44.find((int) (byte) 100);
        int int53 = aVLTree37.getBalance(node52);
        int int54 = aVLTree31.getBalance(node52);
        int int55 = aVLTree16.getBalance(node52);
        int int56 = aVLTree0.getBalance(node52);
        int int57 = aVLTree0.height();
        avltree.AVLTree aVLTree58 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = null;
        int int60 = aVLTree58.getBalance(node59);
        avltree.AVLTree.Node node61 = aVLTree58.getRoot();
        aVLTree58.insert((int) (byte) 100);
        aVLTree58.insert((int) (byte) -1);
        avltree.AVLTree.Node node66 = aVLTree58.getRoot();
        int int67 = aVLTree0.getBalance(node66);
        avltree.AVLTree.Node node68 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(node68);
    }

    @Test
    public void test1681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1681");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        aVLTree14.delete((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree14.getRoot();
        aVLTree14.insert((int) (short) 1);
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = aVLTree22.find((-1));
        int int25 = aVLTree22.height();
        avltree.AVLTree.Node node26 = aVLTree22.getRoot();
        aVLTree22.insert((int) (byte) 100);
        aVLTree22.delete(100);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree31.getBalance(node41);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        avltree.AVLTree.Node node49 = null;
        int int50 = aVLTree43.getBalance(node49);
        avltree.AVLTree.Node node52 = aVLTree43.find((int) ' ');
        avltree.AVLTree aVLTree53 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = aVLTree53.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree53.find((int) 'a');
        aVLTree53.delete((int) (short) 10);
        avltree.AVLTree aVLTree60 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = null;
        int int62 = aVLTree60.getBalance(node61);
        aVLTree60.insert((int) (byte) 100);
        aVLTree60.insert((int) 'a');
        avltree.AVLTree.Node node68 = aVLTree60.find((int) (byte) 100);
        int int69 = aVLTree53.getBalance(node68);
        int int70 = aVLTree43.getBalance(node68);
        int int71 = aVLTree31.getBalance(node68);
        int int72 = aVLTree22.getBalance(node68);
        int int73 = aVLTree14.getBalance(node68);
        avltree.AVLTree aVLTree74 = new avltree.AVLTree();
        avltree.AVLTree.Node node76 = aVLTree74.find((int) '4');
        avltree.AVLTree.Node node77 = aVLTree74.getRoot();
        aVLTree74.delete(100);
        aVLTree74.insert((int) (byte) 10);
        avltree.AVLTree.Node node82 = aVLTree74.getRoot();
        aVLTree74.insert((int) (byte) 100);
        int int85 = aVLTree74.height();
        aVLTree74.delete((int) (byte) 0);
        avltree.AVLTree.Node node89 = aVLTree74.find(0);
        int int90 = aVLTree74.height();
        avltree.AVLTree.Node node91 = aVLTree74.getRoot();
        int int92 = aVLTree14.getBalance(node91);
        int int93 = aVLTree0.getBalance(node91);
        int int94 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 1 + "'", int85 == 1);
        org.junit.Assert.assertNull(node89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 1 + "'", int92 == 1);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 1 + "'", int93 == 1);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
    }

    @Test
    public void test1682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1682");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        aVLTree0.insert((-1));
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node9 = aVLTree6.getRoot();
        aVLTree6.delete(100);
        aVLTree6.insert((int) (byte) 10);
        avltree.AVLTree.Node node14 = aVLTree6.getRoot();
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        aVLTree15.delete((int) 'a');
        avltree.AVLTree.Node node20 = aVLTree15.getRoot();
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree15.getBalance(node21);
        avltree.AVLTree.Node node24 = aVLTree15.find((int) ' ');
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        avltree.AVLTree.Node node29 = aVLTree25.find((int) 'a');
        aVLTree25.delete((int) (short) 10);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree32.getBalance(node33);
        aVLTree32.insert((int) (byte) 100);
        aVLTree32.insert((int) 'a');
        avltree.AVLTree.Node node40 = aVLTree32.find((int) (byte) 100);
        int int41 = aVLTree25.getBalance(node40);
        int int42 = aVLTree15.getBalance(node40);
        int int43 = aVLTree6.getBalance(node40);
        int int44 = aVLTree0.getBalance(node40);
        avltree.AVLTree.Node node45 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(node45);
    }

    @Test
    public void test1683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1683");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree12.getBalance(node15);
        aVLTree12.insert(0);
        aVLTree12.insert((int) (short) 10);
        avltree.AVLTree.Node node21 = aVLTree12.getRoot();
        aVLTree12.delete(0);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete(0);
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree24.getBalance(node32);
        avltree.AVLTree.Node node34 = null;
        int int35 = aVLTree24.getBalance(node34);
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        avltree.AVLTree.Node node40 = aVLTree36.find((int) 'a');
        avltree.AVLTree.Node node41 = aVLTree36.getRoot();
        aVLTree36.delete((int) (short) 10);
        avltree.AVLTree.Node node44 = aVLTree36.getRoot();
        avltree.AVLTree.Node node45 = aVLTree36.getRoot();
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        aVLTree46.insert((int) (byte) 100);
        aVLTree46.insert((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree46.find((int) (byte) 100);
        int int55 = aVLTree36.getBalance(node54);
        int int56 = aVLTree24.getBalance(node54);
        int int57 = aVLTree12.getBalance(node54);
        int int58 = aVLTree0.getBalance(node54);
        avltree.AVLTree.Node node60 = aVLTree0.find((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node60);
    }

    @Test
    public void test1684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1684");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node6 = aVLTree0.find(100);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        aVLTree7.delete(0);
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree7.getBalance(node15);
        int int17 = aVLTree7.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        int int27 = aVLTree7.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        int int49 = aVLTree7.getBalance(node47);
        int int50 = aVLTree0.getBalance(node47);
        avltree.AVLTree.Node node51 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.insert((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node51);
    }

    @Test
    public void test1685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1685");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.delete((int) '4');
        aVLTree0.insert((int) (short) -1);
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test1686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1686");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1687");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        avltree.AVLTree.Node node55 = aVLTree0.find(100);
        aVLTree0.delete((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node55);
    }

    @Test
    public void test1688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1688");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree28.find((int) 'a');
        int int33 = aVLTree28.height();
        aVLTree28.delete(1);
        aVLTree28.insert((int) 'a');
        aVLTree28.insert((int) '#');
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        int int43 = aVLTree40.height();
        int int44 = aVLTree40.height();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node46 = null;
        int int47 = aVLTree45.getBalance(node46);
        aVLTree45.insert((int) (byte) 100);
        aVLTree45.insert((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree45.find((int) (byte) 100);
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        aVLTree54.delete((int) 'a');
        avltree.AVLTree.Node node59 = aVLTree54.getRoot();
        aVLTree54.delete(0);
        avltree.AVLTree.Node node62 = null;
        int int63 = aVLTree54.getBalance(node62);
        int int64 = aVLTree54.height();
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node67 = aVLTree65.find((int) '4');
        avltree.AVLTree.Node node68 = aVLTree65.getRoot();
        aVLTree65.delete(100);
        aVLTree65.insert((int) (byte) 10);
        avltree.AVLTree.Node node73 = aVLTree65.getRoot();
        int int74 = aVLTree54.getBalance(node73);
        int int75 = aVLTree45.getBalance(node73);
        int int76 = aVLTree40.getBalance(node73);
        int int77 = aVLTree28.getBalance(node73);
        int int78 = aVLTree0.getBalance(node73);
        aVLTree0.insert(0);
        avltree.AVLTree.Node node81 = aVLTree0.getRoot();
        avltree.AVLTree.Node node82 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(node81);
        org.junit.Assert.assertNotNull(node82);
    }

    @Test
    public void test1689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1689");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 1);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        avltree.AVLTree.Node node16 = aVLTree0.find(10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.delete((int) '4');
        int int24 = aVLTree17.height();
        int int25 = aVLTree17.height();
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        avltree.AVLTree.Node node30 = aVLTree26.find((int) 'a');
        int int31 = aVLTree26.height();
        aVLTree26.delete(1);
        aVLTree26.insert((int) 'a');
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        avltree.AVLTree.Node node39 = aVLTree36.getRoot();
        aVLTree36.delete(100);
        int int42 = aVLTree36.height();
        avltree.AVLTree.Node node44 = aVLTree36.find((int) (short) -1);
        avltree.AVLTree.Node node45 = aVLTree36.getRoot();
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        aVLTree46.insert((int) (byte) 100);
        aVLTree46.insert((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree46.find((int) (byte) 100);
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        aVLTree55.delete((int) 'a');
        avltree.AVLTree.Node node60 = aVLTree55.getRoot();
        aVLTree55.delete(0);
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree55.getBalance(node63);
        int int65 = aVLTree55.height();
        avltree.AVLTree aVLTree66 = new avltree.AVLTree();
        avltree.AVLTree.Node node68 = aVLTree66.find((int) '4');
        avltree.AVLTree.Node node69 = aVLTree66.getRoot();
        aVLTree66.delete(100);
        aVLTree66.insert((int) (byte) 10);
        avltree.AVLTree.Node node74 = aVLTree66.getRoot();
        int int75 = aVLTree55.getBalance(node74);
        int int76 = aVLTree46.getBalance(node74);
        int int77 = aVLTree36.getBalance(node74);
        int int78 = aVLTree26.getBalance(node74);
        int int79 = aVLTree17.getBalance(node74);
        int int80 = aVLTree0.getBalance(node74);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
    }

    @Test
    public void test1690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1690");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.insert(10);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree9.find((int) (short) 0);
        aVLTree9.insert((int) (short) 1);
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        aVLTree27.delete((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree27.getBalance(node33);
        avltree.AVLTree.Node node36 = aVLTree27.find((int) ' ');
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node39 = aVLTree37.find((int) '4');
        avltree.AVLTree.Node node41 = aVLTree37.find((int) 'a');
        aVLTree37.delete((int) (short) 10);
        avltree.AVLTree aVLTree44 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = null;
        int int46 = aVLTree44.getBalance(node45);
        aVLTree44.insert((int) (byte) 100);
        aVLTree44.insert((int) 'a');
        avltree.AVLTree.Node node52 = aVLTree44.find((int) (byte) 100);
        int int53 = aVLTree37.getBalance(node52);
        int int54 = aVLTree27.getBalance(node52);
        int int55 = aVLTree18.getBalance(node52);
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        avltree.AVLTree.Node node60 = aVLTree56.find((int) 'a');
        avltree.AVLTree.Node node61 = aVLTree56.getRoot();
        avltree.AVLTree.Node node62 = aVLTree56.getRoot();
        avltree.AVLTree.Node node63 = aVLTree56.getRoot();
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node65 = null;
        int int66 = aVLTree64.getBalance(node65);
        avltree.AVLTree aVLTree67 = new avltree.AVLTree();
        avltree.AVLTree.Node node69 = aVLTree67.find((int) '4');
        avltree.AVLTree.Node node70 = aVLTree67.getRoot();
        aVLTree67.insert((int) (byte) 100);
        avltree.AVLTree aVLTree73 = new avltree.AVLTree();
        avltree.AVLTree.Node node75 = aVLTree73.find((int) '4');
        avltree.AVLTree.Node node76 = null;
        int int77 = aVLTree73.getBalance(node76);
        aVLTree73.insert((int) (short) 100);
        avltree.AVLTree.Node node81 = aVLTree73.find((int) ' ');
        int int82 = aVLTree73.height();
        avltree.AVLTree.Node node83 = aVLTree73.getRoot();
        int int84 = aVLTree67.getBalance(node83);
        int int85 = aVLTree64.getBalance(node83);
        int int86 = aVLTree56.getBalance(node83);
        int int87 = aVLTree18.getBalance(node83);
        avltree.AVLTree.Node node88 = aVLTree18.getRoot();
        int int89 = aVLTree9.getBalance(node88);
        int int90 = aVLTree0.getBalance(node88);
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
    }

    @Test
    public void test1691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1691");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree5.getBalance(node6);
        aVLTree5.insert((int) (byte) 100);
        aVLTree5.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree5.find((int) (byte) 100);
        int int14 = aVLTree0.getBalance(node13);
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree0.getBalance(node15);
        aVLTree0.delete((int) (byte) 1);
        int int19 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test1692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1692");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((-1));
        int int11 = aVLTree8.height();
        avltree.AVLTree.Node node12 = aVLTree8.getRoot();
        aVLTree8.insert((int) (byte) 100);
        aVLTree8.delete(100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree17.getBalance(node27);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        aVLTree29.delete((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree29.getRoot();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree29.getBalance(node35);
        avltree.AVLTree.Node node38 = aVLTree29.find((int) ' ');
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree39.find((int) 'a');
        aVLTree39.delete((int) (short) 10);
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        aVLTree46.insert((int) (byte) 100);
        aVLTree46.insert((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree46.find((int) (byte) 100);
        int int55 = aVLTree39.getBalance(node54);
        int int56 = aVLTree29.getBalance(node54);
        int int57 = aVLTree17.getBalance(node54);
        int int58 = aVLTree8.getBalance(node54);
        int int59 = aVLTree0.getBalance(node54);
        avltree.AVLTree.Node node60 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node60);
    }

    @Test
    public void test1693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1693");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node10 = aVLTree6.find((int) 'a');
        aVLTree6.delete((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree13.getBalance(node14);
        aVLTree13.insert((int) (byte) 100);
        aVLTree13.insert((int) 'a');
        avltree.AVLTree.Node node21 = aVLTree13.find((int) (byte) 100);
        int int22 = aVLTree6.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        avltree.AVLTree.Node node24 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = null;
        int int27 = aVLTree25.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree28.getRoot();
        aVLTree28.insert((int) (byte) 100);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree34.getBalance(node37);
        aVLTree34.insert((int) (short) 100);
        avltree.AVLTree.Node node42 = aVLTree34.find((int) ' ');
        int int43 = aVLTree34.height();
        avltree.AVLTree.Node node44 = aVLTree34.getRoot();
        int int45 = aVLTree28.getBalance(node44);
        int int46 = aVLTree25.getBalance(node44);
        avltree.AVLTree.Node node48 = aVLTree25.find((int) 'a');
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        aVLTree49.delete((int) 'a');
        aVLTree49.delete(1);
        aVLTree49.delete((int) '#');
        aVLTree49.delete((int) (short) -1);
        avltree.AVLTree.Node node60 = aVLTree49.getRoot();
        aVLTree49.insert(10);
        aVLTree49.delete(1);
        avltree.AVLTree.Node node65 = aVLTree49.getRoot();
        int int66 = aVLTree49.height();
        aVLTree49.delete((int) 'a');
        avltree.AVLTree.Node node69 = aVLTree49.getRoot();
        int int70 = aVLTree25.getBalance(node69);
        int int71 = aVLTree0.getBalance(node69);
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node75 = aVLTree0.find((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(node75);
    }

    @Test
    public void test1694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1694");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        aVLTree0.insert(100);
        avltree.AVLTree.Node node56 = aVLTree0.getRoot();
        avltree.AVLTree.Node node57 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node57);
    }

    @Test
    public void test1695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1695");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        avltree.AVLTree.Node node43 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node45 = aVLTree0.find((int) (byte) -1);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert(0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
    }

    @Test
    public void test1696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1696");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree12.getBalance(node13);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        avltree.AVLTree.Node node18 = aVLTree15.getRoot();
        aVLTree15.insert((int) (byte) 100);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree21.getBalance(node24);
        aVLTree21.insert((int) (short) 100);
        avltree.AVLTree.Node node29 = aVLTree21.find((int) ' ');
        int int30 = aVLTree21.height();
        avltree.AVLTree.Node node31 = aVLTree21.getRoot();
        int int32 = aVLTree15.getBalance(node31);
        int int33 = aVLTree12.getBalance(node31);
        avltree.AVLTree.Node node35 = aVLTree12.find((int) 'a');
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree36.getBalance(node37);
        aVLTree36.insert((int) (byte) 100);
        aVLTree36.insert((int) 'a');
        avltree.AVLTree.Node node44 = aVLTree36.find((int) (byte) 100);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        aVLTree45.delete(0);
        avltree.AVLTree.Node node53 = null;
        int int54 = aVLTree45.getBalance(node53);
        int int55 = aVLTree45.height();
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree56.getRoot();
        aVLTree56.delete(100);
        aVLTree56.insert((int) (byte) 10);
        avltree.AVLTree.Node node64 = aVLTree56.getRoot();
        int int65 = aVLTree45.getBalance(node64);
        int int66 = aVLTree36.getBalance(node64);
        avltree.AVLTree.Node node67 = aVLTree36.getRoot();
        int int68 = aVLTree12.getBalance(node67);
        int int69 = aVLTree0.getBalance(node67);
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node74 = aVLTree0.getRoot();
        avltree.AVLTree.Node node76 = aVLTree0.find(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(node76);
    }

    @Test
    public void test1697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1697");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (short) 100);
        java.lang.Class<?> wildcardClass14 = node13.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1698");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 1);
        aVLTree0.insert((int) ' ');
        aVLTree0.insert(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test1699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1699");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        aVLTree0.delete((int) (byte) 100);
        aVLTree0.insert((int) ' ');
        avltree.AVLTree.Node node48 = aVLTree0.find((int) (short) 1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node51 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(node51);
    }

    @Test
    public void test1700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1700");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree0.getBalance(node13);
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        int int18 = aVLTree0.height();
        aVLTree0.delete((int) (short) 0);
        aVLTree0.insert(2);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
    }

    @Test
    public void test1701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1701");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        int int5 = aVLTree0.height();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        aVLTree0.delete((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test1702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1702");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree12.getBalance(node15);
        aVLTree12.insert(0);
        aVLTree12.insert((int) (short) 10);
        avltree.AVLTree.Node node21 = aVLTree12.getRoot();
        aVLTree12.delete(0);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete(0);
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree24.getBalance(node32);
        avltree.AVLTree.Node node34 = null;
        int int35 = aVLTree24.getBalance(node34);
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        avltree.AVLTree.Node node40 = aVLTree36.find((int) 'a');
        avltree.AVLTree.Node node41 = aVLTree36.getRoot();
        aVLTree36.delete((int) (short) 10);
        avltree.AVLTree.Node node44 = aVLTree36.getRoot();
        avltree.AVLTree.Node node45 = aVLTree36.getRoot();
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        aVLTree46.insert((int) (byte) 100);
        aVLTree46.insert((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree46.find((int) (byte) 100);
        int int55 = aVLTree36.getBalance(node54);
        int int56 = aVLTree24.getBalance(node54);
        int int57 = aVLTree12.getBalance(node54);
        int int58 = aVLTree0.getBalance(node54);
        aVLTree0.delete((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
    }

    @Test
    public void test1703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1703");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete(0);
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree9.getBalance(node17);
        int int19 = aVLTree9.height();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree20.getRoot();
        aVLTree20.delete(100);
        aVLTree20.insert((int) (byte) 10);
        avltree.AVLTree.Node node28 = aVLTree20.getRoot();
        int int29 = aVLTree9.getBalance(node28);
        int int30 = aVLTree0.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree0.getRoot();
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        aVLTree33.delete((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree33.getRoot();
        aVLTree33.delete(0);
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree33.getBalance(node41);
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree33.getBalance(node43);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree45.getBalance(node51);
        avltree.AVLTree.Node node54 = aVLTree45.find((int) ' ');
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree55.find((int) 'a');
        aVLTree55.delete((int) (short) 10);
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree62.getBalance(node63);
        aVLTree62.insert((int) (byte) 100);
        aVLTree62.insert((int) 'a');
        avltree.AVLTree.Node node70 = aVLTree62.find((int) (byte) 100);
        int int71 = aVLTree55.getBalance(node70);
        int int72 = aVLTree45.getBalance(node70);
        int int73 = aVLTree33.getBalance(node70);
        int int74 = aVLTree0.getBalance(node70);
        int int75 = aVLTree0.height();
        avltree.AVLTree.Node node77 = aVLTree0.find((-1));
        avltree.AVLTree.Node node78 = aVLTree0.getRoot();
        avltree.AVLTree.Node node80 = aVLTree0.find((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 1 + "'", int75 == 1);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNull(node80);
    }

    @Test
    public void test1704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1704");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        aVLTree0.delete((int) (short) 0);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test1705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1705");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test1706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1706");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        int int5 = aVLTree0.height();
        aVLTree0.insert((int) (short) 1);
        aVLTree0.delete((int) (short) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
    }

    @Test
    public void test1707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1707");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        aVLTree7.delete(0);
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree7.getBalance(node15);
        int int17 = aVLTree7.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        int int27 = aVLTree7.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        int int49 = aVLTree7.getBalance(node47);
        int int50 = aVLTree0.getBalance(node47);
        int int51 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree.Node node54 = aVLTree0.getRoot();
        avltree.AVLTree.Node node55 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node59 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node59);
    }

    @Test
    public void test1708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1708");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        aVLTree0.insert(100);
        avltree.AVLTree.Node node56 = aVLTree0.getRoot();
        aVLTree0.insert((int) 'a');
        aVLTree0.delete((int) (short) 10);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node63 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = aVLTree64.find((int) '4');
        avltree.AVLTree.Node node67 = aVLTree64.getRoot();
        aVLTree64.insert((int) (byte) 100);
        int int70 = aVLTree64.height();
        aVLTree64.insert(10);
        avltree.AVLTree.Node node74 = aVLTree64.find((int) (byte) 10);
        int int75 = aVLTree0.getBalance(node74);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test1709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1709");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        int int5 = aVLTree0.height();
        int int6 = aVLTree0.height();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node10 = aVLTree7.getRoot();
        avltree.AVLTree.Node node12 = aVLTree7.find((int) (short) -1);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.delete((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree13.getRoot();
        aVLTree13.delete(0);
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree13.getBalance(node21);
        int int23 = aVLTree13.height();
        aVLTree13.delete(100);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        avltree.AVLTree.Node node29 = aVLTree26.getRoot();
        aVLTree26.delete(100);
        aVLTree26.insert((int) (byte) 10);
        avltree.AVLTree.Node node34 = aVLTree26.getRoot();
        int int35 = aVLTree13.getBalance(node34);
        int int36 = aVLTree7.getBalance(node34);
        avltree.AVLTree.Node node37 = aVLTree7.getRoot();
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((-1));
        int int41 = aVLTree38.height();
        avltree.AVLTree.Node node42 = aVLTree38.getRoot();
        aVLTree38.insert((int) (byte) 100);
        aVLTree38.delete(100);
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        aVLTree47.delete((int) 'a');
        avltree.AVLTree.Node node52 = aVLTree47.getRoot();
        aVLTree47.delete(0);
        avltree.AVLTree.Node node55 = null;
        int int56 = aVLTree47.getBalance(node55);
        avltree.AVLTree.Node node57 = null;
        int int58 = aVLTree47.getBalance(node57);
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = aVLTree59.find((int) '4');
        aVLTree59.delete((int) 'a');
        avltree.AVLTree.Node node64 = aVLTree59.getRoot();
        avltree.AVLTree.Node node65 = null;
        int int66 = aVLTree59.getBalance(node65);
        avltree.AVLTree.Node node68 = aVLTree59.find((int) ' ');
        avltree.AVLTree aVLTree69 = new avltree.AVLTree();
        avltree.AVLTree.Node node71 = aVLTree69.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree69.find((int) 'a');
        aVLTree69.delete((int) (short) 10);
        avltree.AVLTree aVLTree76 = new avltree.AVLTree();
        avltree.AVLTree.Node node77 = null;
        int int78 = aVLTree76.getBalance(node77);
        aVLTree76.insert((int) (byte) 100);
        aVLTree76.insert((int) 'a');
        avltree.AVLTree.Node node84 = aVLTree76.find((int) (byte) 100);
        int int85 = aVLTree69.getBalance(node84);
        int int86 = aVLTree59.getBalance(node84);
        int int87 = aVLTree47.getBalance(node84);
        int int88 = aVLTree38.getBalance(node84);
        int int89 = aVLTree7.getBalance(node84);
        int int90 = aVLTree0.getBalance(node84);
        int int91 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + (-1) + "'", int91 == (-1));
    }

    @Test
    public void test1710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1710");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        aVLTree0.insert((int) (byte) 1);
        aVLTree0.delete(10);
        avltree.AVLTree.Node node13 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1711");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.delete((int) '4');
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node15 = aVLTree11.find((int) 'a');
        avltree.AVLTree.Node node16 = aVLTree11.getRoot();
        aVLTree11.insert((int) '4');
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1712");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree12.getBalance(node13);
        aVLTree12.insert((int) (byte) 100);
        aVLTree12.insert((int) 'a');
        avltree.AVLTree.Node node20 = aVLTree12.find((int) (byte) 100);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree12.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree12.getRoot();
        avltree.AVLTree.Node node44 = aVLTree12.getRoot();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        aVLTree45.delete(0);
        avltree.AVLTree.Node node53 = null;
        int int54 = aVLTree45.getBalance(node53);
        avltree.AVLTree.Node node55 = null;
        int int56 = aVLTree45.getBalance(node55);
        avltree.AVLTree aVLTree57 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = aVLTree57.find((int) '4');
        aVLTree57.delete((int) 'a');
        avltree.AVLTree.Node node62 = aVLTree57.getRoot();
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree57.getBalance(node63);
        avltree.AVLTree.Node node66 = aVLTree57.find((int) ' ');
        avltree.AVLTree aVLTree67 = new avltree.AVLTree();
        avltree.AVLTree.Node node69 = aVLTree67.find((int) '4');
        avltree.AVLTree.Node node71 = aVLTree67.find((int) 'a');
        aVLTree67.delete((int) (short) 10);
        avltree.AVLTree aVLTree74 = new avltree.AVLTree();
        avltree.AVLTree.Node node75 = null;
        int int76 = aVLTree74.getBalance(node75);
        aVLTree74.insert((int) (byte) 100);
        aVLTree74.insert((int) 'a');
        avltree.AVLTree.Node node82 = aVLTree74.find((int) (byte) 100);
        int int83 = aVLTree67.getBalance(node82);
        int int84 = aVLTree57.getBalance(node82);
        int int85 = aVLTree45.getBalance(node82);
        int int86 = aVLTree12.getBalance(node82);
        int int87 = aVLTree0.getBalance(node82);
        avltree.AVLTree.Node node88 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(node88);
    }

    @Test
    public void test1713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1713");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree12.find((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        aVLTree12.delete((int) (short) 10);
        avltree.AVLTree.Node node20 = aVLTree12.getRoot();
        avltree.AVLTree.Node node21 = aVLTree12.getRoot();
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree22.getBalance(node23);
        aVLTree22.insert((int) (byte) 100);
        aVLTree22.insert((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree22.find((int) (byte) 100);
        int int31 = aVLTree12.getBalance(node30);
        int int32 = aVLTree0.getBalance(node30);
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        aVLTree33.delete((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree33.getRoot();
        aVLTree33.delete((int) (byte) 1);
        aVLTree33.delete((int) '#');
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        avltree.AVLTree.Node node47 = aVLTree43.find((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        avltree.AVLTree.Node node49 = aVLTree43.getRoot();
        avltree.AVLTree.Node node50 = aVLTree43.getRoot();
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node52 = null;
        int int53 = aVLTree51.getBalance(node52);
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.insert((int) (byte) 100);
        avltree.AVLTree aVLTree60 = new avltree.AVLTree();
        avltree.AVLTree.Node node62 = aVLTree60.find((int) '4');
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree60.getBalance(node63);
        aVLTree60.insert((int) (short) 100);
        avltree.AVLTree.Node node68 = aVLTree60.find((int) ' ');
        int int69 = aVLTree60.height();
        avltree.AVLTree.Node node70 = aVLTree60.getRoot();
        int int71 = aVLTree54.getBalance(node70);
        int int72 = aVLTree51.getBalance(node70);
        int int73 = aVLTree43.getBalance(node70);
        int int74 = aVLTree33.getBalance(node70);
        int int75 = aVLTree0.getBalance(node70);
        aVLTree0.insert(100);
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test1714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1714");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(node5);
    }

    @Test
    public void test1715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1715");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert(1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) '#');
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree12.find((int) 'a');
        aVLTree12.insert((int) (short) -1);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.insert((int) (short) 0);
        avltree.AVLTree.Node node25 = aVLTree19.find(100);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        avltree.AVLTree.Node node29 = aVLTree26.getRoot();
        aVLTree26.delete(100);
        aVLTree26.insert((int) (byte) 10);
        avltree.AVLTree.Node node34 = aVLTree26.getRoot();
        int int35 = aVLTree19.getBalance(node34);
        int int36 = aVLTree12.getBalance(node34);
        int int37 = aVLTree12.height();
        avltree.AVLTree.Node node39 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node40 = aVLTree12.getRoot();
        int int41 = aVLTree0.getBalance(node40);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test1716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1716");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) ' ');
        java.lang.Class<?> wildcardClass12 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test1717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1717");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        int int30 = aVLTree0.height();
        int int31 = aVLTree0.height();
        aVLTree0.insert(100);
        avltree.AVLTree.Node node34 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(node34);
    }

    @Test
    public void test1718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1718");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert(0);
        aVLTree0.delete((int) 'a');
        aVLTree0.insert((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test1719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1719");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree10.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree19.find((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        avltree.AVLTree.Node node25 = aVLTree19.getRoot();
        avltree.AVLTree.Node node26 = aVLTree19.getRoot();
        aVLTree19.delete((int) (byte) 10);
        int int29 = aVLTree19.height();
        avltree.AVLTree.Node node31 = aVLTree19.find((int) (short) 10);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree19.getBalance(node40);
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree42.getBalance(node43);
        aVLTree42.insert((int) (byte) 100);
        aVLTree42.insert((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree42.find((int) (byte) 100);
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node53 = aVLTree51.find((int) '4');
        aVLTree51.delete((int) 'a');
        avltree.AVLTree.Node node56 = aVLTree51.getRoot();
        aVLTree51.delete(0);
        avltree.AVLTree.Node node59 = null;
        int int60 = aVLTree51.getBalance(node59);
        int int61 = aVLTree51.height();
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node64 = aVLTree62.find((int) '4');
        avltree.AVLTree.Node node65 = aVLTree62.getRoot();
        aVLTree62.delete(100);
        aVLTree62.insert((int) (byte) 10);
        avltree.AVLTree.Node node70 = aVLTree62.getRoot();
        int int71 = aVLTree51.getBalance(node70);
        int int72 = aVLTree42.getBalance(node70);
        avltree.AVLTree.Node node73 = aVLTree42.getRoot();
        int int74 = aVLTree19.getBalance(node73);
        int int75 = aVLTree0.getBalance(node73);
        int int76 = aVLTree0.height();
        avltree.AVLTree.Node node77 = aVLTree0.getRoot();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 1 + "'", int76 == 1);
        org.junit.Assert.assertNotNull(node77);
    }

    @Test
    public void test1720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1720");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node13 = aVLTree10.getRoot();
        avltree.AVLTree.Node node15 = aVLTree10.find((int) (byte) 1);
        int int16 = aVLTree10.height();
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree17.getBalance(node23);
        avltree.AVLTree.Node node26 = aVLTree17.find((int) ' ');
        aVLTree17.insert((-1));
        avltree.AVLTree.Node node29 = aVLTree17.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        int int31 = aVLTree0.getBalance(node29);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1721");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (byte) 10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree12.getBalance(node15);
        aVLTree12.insert(0);
        avltree.AVLTree.Node node19 = aVLTree12.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        java.lang.Class<?> wildcardClass21 = node19.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1722");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree3.getBalance(node6);
        aVLTree3.insert((int) (short) 100);
        avltree.AVLTree.Node node11 = aVLTree3.find((int) ' ');
        int int12 = aVLTree3.height();
        avltree.AVLTree.Node node13 = aVLTree3.getRoot();
        int int14 = aVLTree0.getBalance(node13);
        avltree.AVLTree.Node node16 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert(1);
        avltree.AVLTree.Node node19 = aVLTree0.getRoot();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node19);
    }

    @Test
    public void test1723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1723");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        aVLTree0.insert((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test1724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1724");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        int int12 = aVLTree0.height();
        aVLTree0.insert(1);
        aVLTree0.insert((int) ' ');
        aVLTree0.delete((int) (byte) -1);
        avltree.AVLTree.Node node20 = aVLTree0.find((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node20);
    }

    @Test
    public void test1725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1725");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree0.find((int) (short) 0);
        aVLTree0.delete((int) (short) 0);
        avltree.AVLTree.Node node33 = aVLTree0.find(0);
        avltree.AVLTree.Node node34 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 10);
        aVLTree0.insert(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node34);
    }

    @Test
    public void test1726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1726");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 1);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        avltree.AVLTree.Node node16 = aVLTree0.find(10);
        aVLTree0.insert((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test1727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1727");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree0.getRoot();
        avltree.AVLTree.Node node44 = aVLTree0.getRoot();
        avltree.AVLTree.Node node46 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.delete(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
    }

    @Test
    public void test1728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1728");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node13 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node13);
    }

    @Test
    public void test1729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1729");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        aVLTree12.delete((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        aVLTree12.delete(0);
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree12.getBalance(node20);
        avltree.AVLTree.Node node22 = null;
        int int23 = aVLTree12.getBalance(node22);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node28 = aVLTree24.find((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete((int) (short) 10);
        avltree.AVLTree.Node node32 = aVLTree24.getRoot();
        avltree.AVLTree.Node node33 = aVLTree24.getRoot();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree34.getBalance(node35);
        aVLTree34.insert((int) (byte) 100);
        aVLTree34.insert((int) 'a');
        avltree.AVLTree.Node node42 = aVLTree34.find((int) (byte) 100);
        int int43 = aVLTree24.getBalance(node42);
        int int44 = aVLTree12.getBalance(node42);
        int int45 = aVLTree0.getBalance(node42);
        aVLTree0.insert((int) '#');
        avltree.AVLTree.Node node48 = aVLTree0.getRoot();
        avltree.AVLTree.Node node50 = aVLTree0.find(100);
        avltree.AVLTree.Node node52 = aVLTree0.find(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node52);
    }

    @Test
    public void test1730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1730");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        int int12 = aVLTree0.height();
        aVLTree0.insert(1);
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        avltree.AVLTree.Node node26 = aVLTree17.getRoot();
        avltree.AVLTree.Node node28 = aVLTree17.find(10);
        avltree.AVLTree.Node node29 = aVLTree17.getRoot();
        avltree.AVLTree.Node node30 = aVLTree17.getRoot();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree31.getBalance(node32);
        aVLTree31.insert((int) (byte) 100);
        aVLTree31.insert((int) 'a');
        avltree.AVLTree.Node node39 = aVLTree31.find((int) (byte) 100);
        avltree.AVLTree.Node node40 = aVLTree31.getRoot();
        int int41 = aVLTree17.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        aVLTree0.delete(2);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test1731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1731");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.delete(10);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) '4');
        avltree.AVLTree.Node node17 = aVLTree9.find((int) (short) 0);
        avltree.AVLTree.Node node19 = aVLTree9.find((int) ' ');
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node23 = aVLTree9.find((int) (short) 100);
        avltree.AVLTree.Node node24 = aVLTree9.getRoot();
        avltree.AVLTree.Node node25 = aVLTree9.getRoot();
        int int26 = aVLTree0.getBalance(node25);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
    }

    @Test
    public void test1732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1732");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        aVLTree0.delete((int) '4');
        java.lang.Class<?> wildcardClass47 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test1733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1733");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete((int) '4');
        aVLTree0.insert((int) ' ');
        avltree.AVLTree.Node node15 = aVLTree0.find((int) '4');
        int int16 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test1734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1734");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        avltree.AVLTree.Node node10 = aVLTree5.find((int) (short) -1);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree11.getBalance(node12);
        aVLTree11.insert((int) (byte) 100);
        aVLTree11.insert((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree11.find((int) (byte) 100);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        aVLTree20.delete((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree20.getRoot();
        aVLTree20.delete(0);
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree20.getBalance(node28);
        int int30 = aVLTree20.height();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree31.getRoot();
        aVLTree31.delete(100);
        aVLTree31.insert((int) (byte) 10);
        avltree.AVLTree.Node node39 = aVLTree31.getRoot();
        int int40 = aVLTree20.getBalance(node39);
        int int41 = aVLTree11.getBalance(node39);
        avltree.AVLTree.Node node42 = aVLTree11.getRoot();
        int int43 = aVLTree5.getBalance(node42);
        int int44 = aVLTree0.getBalance(node42);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
    }

    @Test
    public void test1735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1735");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1736");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1737");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        int int5 = aVLTree0.height();
        aVLTree0.delete(1);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node13 = aVLTree10.getRoot();
        aVLTree10.delete(100);
        int int16 = aVLTree10.height();
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (short) -1);
        avltree.AVLTree.Node node19 = aVLTree10.getRoot();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree20.getBalance(node21);
        aVLTree20.insert((int) (byte) 100);
        aVLTree20.insert((int) 'a');
        avltree.AVLTree.Node node28 = aVLTree20.find((int) (byte) 100);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        aVLTree29.delete((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree29.getRoot();
        aVLTree29.delete(0);
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree29.getBalance(node37);
        int int39 = aVLTree29.height();
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree40.getRoot();
        aVLTree40.delete(100);
        aVLTree40.insert((int) (byte) 10);
        avltree.AVLTree.Node node48 = aVLTree40.getRoot();
        int int49 = aVLTree29.getBalance(node48);
        int int50 = aVLTree20.getBalance(node48);
        int int51 = aVLTree10.getBalance(node48);
        int int52 = aVLTree0.getBalance(node48);
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node56 = aVLTree0.find((-1));
        aVLTree0.delete((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node56);
    }

    @Test
    public void test1738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1738");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.insert((int) (short) 0);
        avltree.AVLTree.Node node12 = aVLTree6.find(100);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.delete((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree13.getRoot();
        aVLTree13.delete(0);
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree13.getBalance(node21);
        int int23 = aVLTree13.height();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        aVLTree24.delete(100);
        aVLTree24.insert((int) (byte) 10);
        avltree.AVLTree.Node node32 = aVLTree24.getRoot();
        int int33 = aVLTree13.getBalance(node32);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        aVLTree34.delete((int) 'a');
        avltree.AVLTree.Node node39 = aVLTree34.getRoot();
        aVLTree34.delete(0);
        avltree.AVLTree.Node node42 = null;
        int int43 = aVLTree34.getBalance(node42);
        int int44 = aVLTree34.height();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        avltree.AVLTree.Node node48 = aVLTree45.getRoot();
        aVLTree45.delete(100);
        aVLTree45.insert((int) (byte) 10);
        avltree.AVLTree.Node node53 = aVLTree45.getRoot();
        int int54 = aVLTree34.getBalance(node53);
        int int55 = aVLTree13.getBalance(node53);
        int int56 = aVLTree6.getBalance(node53);
        int int57 = aVLTree0.getBalance(node53);
        int int58 = aVLTree0.height();
        aVLTree0.insert((int) (byte) 0);
        int int61 = aVLTree0.height();
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test1739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1739");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        aVLTree16.delete((int) 'a');
        avltree.AVLTree.Node node21 = aVLTree16.getRoot();
        aVLTree16.delete(0);
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree16.getBalance(node24);
        int int26 = aVLTree16.height();
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        avltree.AVLTree.Node node30 = aVLTree27.getRoot();
        aVLTree27.delete(100);
        aVLTree27.insert((int) (byte) 10);
        avltree.AVLTree.Node node35 = aVLTree27.getRoot();
        int int36 = aVLTree16.getBalance(node35);
        int int37 = aVLTree7.getBalance(node35);
        avltree.AVLTree.Node node38 = aVLTree7.getRoot();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree39.find((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree39.find((int) ' ');
        avltree.AVLTree.Node node47 = aVLTree39.find(0);
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        aVLTree48.delete((int) 'a');
        aVLTree48.delete(1);
        aVLTree48.delete((int) '#');
        aVLTree48.delete((int) (short) -1);
        avltree.AVLTree.Node node59 = aVLTree48.getRoot();
        avltree.AVLTree.Node node61 = aVLTree48.find((int) (byte) 100);
        int int62 = aVLTree48.height();
        avltree.AVLTree aVLTree63 = new avltree.AVLTree();
        avltree.AVLTree.Node node65 = aVLTree63.find((int) '4');
        avltree.AVLTree.Node node66 = aVLTree63.getRoot();
        aVLTree63.insert((int) (byte) 100);
        avltree.AVLTree aVLTree69 = new avltree.AVLTree();
        avltree.AVLTree.Node node71 = aVLTree69.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree69.find((int) 'a');
        aVLTree69.delete((int) (short) 10);
        avltree.AVLTree aVLTree76 = new avltree.AVLTree();
        avltree.AVLTree.Node node77 = null;
        int int78 = aVLTree76.getBalance(node77);
        aVLTree76.insert((int) (byte) 100);
        aVLTree76.insert((int) 'a');
        avltree.AVLTree.Node node84 = aVLTree76.find((int) (byte) 100);
        int int85 = aVLTree69.getBalance(node84);
        int int86 = aVLTree63.getBalance(node84);
        int int87 = aVLTree48.getBalance(node84);
        int int88 = aVLTree39.getBalance(node84);
        int int89 = aVLTree7.getBalance(node84);
        int int90 = aVLTree0.getBalance(node84);
        aVLTree0.delete(10);
        aVLTree0.delete(2);
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node97 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(node97);
    }

    @Test
    public void test1740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1740");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        aVLTree0.delete((int) 'a');
        int int14 = aVLTree0.height();
        avltree.AVLTree.Node node16 = aVLTree0.find(0);
        aVLTree0.delete((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test1741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1741");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.find(1);
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test1742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1742");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node15 = aVLTree0.find(10);
        avltree.AVLTree.Node node17 = aVLTree0.find((int) '4');
        int int18 = aVLTree0.height();
        aVLTree0.delete((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1743");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        int int15 = aVLTree0.height();
        avltree.AVLTree.Node node16 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNotNull(node16);
    }

    @Test
    public void test1744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1744");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree3.getBalance(node6);
        aVLTree3.insert((int) (short) 100);
        avltree.AVLTree.Node node11 = aVLTree3.find((int) ' ');
        int int12 = aVLTree3.height();
        avltree.AVLTree.Node node13 = aVLTree3.getRoot();
        int int14 = aVLTree0.getBalance(node13);
        int int15 = aVLTree0.height();
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree16.getBalance(node17);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.insert((int) (byte) 100);
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree25.getBalance(node28);
        aVLTree25.insert((int) (short) 100);
        avltree.AVLTree.Node node33 = aVLTree25.find((int) ' ');
        int int34 = aVLTree25.height();
        avltree.AVLTree.Node node35 = aVLTree25.getRoot();
        int int36 = aVLTree19.getBalance(node35);
        int int37 = aVLTree16.getBalance(node35);
        avltree.AVLTree.Node node39 = aVLTree16.find((int) 'a');
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree40.getRoot();
        aVLTree40.delete(100);
        int int46 = aVLTree40.height();
        avltree.AVLTree.Node node48 = aVLTree40.find((int) (short) -1);
        avltree.AVLTree.Node node49 = aVLTree40.getRoot();
        avltree.AVLTree aVLTree50 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree50.getBalance(node51);
        aVLTree50.insert((int) (byte) 100);
        aVLTree50.insert((int) 'a');
        avltree.AVLTree.Node node58 = aVLTree50.find((int) (byte) 100);
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = aVLTree59.find((int) '4');
        aVLTree59.delete((int) 'a');
        avltree.AVLTree.Node node64 = aVLTree59.getRoot();
        aVLTree59.delete(0);
        avltree.AVLTree.Node node67 = null;
        int int68 = aVLTree59.getBalance(node67);
        int int69 = aVLTree59.height();
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node72 = aVLTree70.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree70.getRoot();
        aVLTree70.delete(100);
        aVLTree70.insert((int) (byte) 10);
        avltree.AVLTree.Node node78 = aVLTree70.getRoot();
        int int79 = aVLTree59.getBalance(node78);
        int int80 = aVLTree50.getBalance(node78);
        int int81 = aVLTree40.getBalance(node78);
        int int82 = aVLTree16.getBalance(node78);
        int int83 = aVLTree0.getBalance(node78);
        aVLTree0.insert(100);
        int int86 = aVLTree0.height();
        aVLTree0.delete((int) (short) 10);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
    }

    @Test
    public void test1745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1745");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree.Node node10 = aVLTree0.find(0);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = node10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test1746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1746");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node9 = aVLTree6.getRoot();
        aVLTree6.delete(100);
        aVLTree6.insert((int) (byte) 10);
        avltree.AVLTree.Node node14 = aVLTree6.getRoot();
        avltree.AVLTree.Node node16 = aVLTree6.find((int) (byte) 0);
        aVLTree6.delete((int) (byte) 10);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.insert((int) (byte) 100);
        int int25 = aVLTree19.height();
        aVLTree19.insert(1);
        aVLTree19.insert((int) (short) 10);
        avltree.AVLTree.Node node31 = aVLTree19.find((int) (short) 1);
        int int32 = aVLTree6.getBalance(node31);
        int int33 = aVLTree0.getBalance(node31);
        avltree.AVLTree.Node node34 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(node34);
    }

    @Test
    public void test1747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1747");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree.Node node9 = aVLTree0.find((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test1748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1748");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree8.getBalance(node9);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree17.getBalance(node20);
        aVLTree17.insert((int) (short) 100);
        avltree.AVLTree.Node node25 = aVLTree17.find((int) ' ');
        int int26 = aVLTree17.height();
        avltree.AVLTree.Node node27 = aVLTree17.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree8.getBalance(node27);
        int int30 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node32 = aVLTree0.find((int) (short) 100);
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((-1));
        aVLTree33.delete(100);
        avltree.AVLTree.Node node39 = aVLTree33.find((int) '#');
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        aVLTree40.delete((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree40.getRoot();
        avltree.AVLTree.Node node46 = null;
        int int47 = aVLTree40.getBalance(node46);
        avltree.AVLTree.Node node49 = aVLTree40.find((int) ' ');
        aVLTree40.insert((-1));
        avltree.AVLTree.Node node52 = aVLTree40.getRoot();
        int int53 = aVLTree40.height();
        avltree.AVLTree.Node node55 = aVLTree40.find((int) (short) -1);
        aVLTree40.insert((int) ' ');
        avltree.AVLTree.Node node58 = aVLTree40.getRoot();
        int int59 = aVLTree33.getBalance(node58);
        int int60 = aVLTree0.getBalance(node58);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 1 + "'", int60 == 1);
    }

    @Test
    public void test1749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1749");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree12.getBalance(node13);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        avltree.AVLTree.Node node18 = aVLTree15.getRoot();
        aVLTree15.insert((int) (byte) 100);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree21.getBalance(node24);
        aVLTree21.insert((int) (short) 100);
        avltree.AVLTree.Node node29 = aVLTree21.find((int) ' ');
        int int30 = aVLTree21.height();
        avltree.AVLTree.Node node31 = aVLTree21.getRoot();
        int int32 = aVLTree15.getBalance(node31);
        int int33 = aVLTree12.getBalance(node31);
        avltree.AVLTree.Node node35 = aVLTree12.find((int) 'a');
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree36.getBalance(node37);
        aVLTree36.insert((int) (byte) 100);
        aVLTree36.insert((int) 'a');
        avltree.AVLTree.Node node44 = aVLTree36.find((int) (byte) 100);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        aVLTree45.delete(0);
        avltree.AVLTree.Node node53 = null;
        int int54 = aVLTree45.getBalance(node53);
        int int55 = aVLTree45.height();
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree56.getRoot();
        aVLTree56.delete(100);
        aVLTree56.insert((int) (byte) 10);
        avltree.AVLTree.Node node64 = aVLTree56.getRoot();
        int int65 = aVLTree45.getBalance(node64);
        int int66 = aVLTree36.getBalance(node64);
        avltree.AVLTree.Node node67 = aVLTree36.getRoot();
        int int68 = aVLTree12.getBalance(node67);
        int int69 = aVLTree0.getBalance(node67);
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node75 = aVLTree0.find((int) (byte) -1);
        aVLTree0.insert((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(node75);
    }

    @Test
    public void test1750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1750");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 1);
        int int12 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test1751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1751");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete((int) (byte) 0);
        int int5 = aVLTree0.height();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        aVLTree0.delete((-1));
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test1752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1752");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        java.lang.Class<?> wildcardClass23 = node21.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1753");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.delete((int) (byte) 1);
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node14 = aVLTree0.find((int) (byte) 10);
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        int int16 = aVLTree0.height();
        java.lang.Class<?> wildcardClass17 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test1754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1754");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert(0);
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert(0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node29);
    }

    @Test
    public void test1755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1755");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree17.getBalance(node20);
        aVLTree17.insert((int) (short) 100);
        avltree.AVLTree.Node node25 = aVLTree17.find((int) ' ');
        int int26 = aVLTree17.height();
        avltree.AVLTree.Node node27 = aVLTree17.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node31 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        avltree.AVLTree.Node node33 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
    }

    @Test
    public void test1756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1756");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = node8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test1757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1757");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree8.getBalance(node9);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree17.getBalance(node20);
        aVLTree17.insert((int) (short) 100);
        avltree.AVLTree.Node node25 = aVLTree17.find((int) ' ');
        int int26 = aVLTree17.height();
        avltree.AVLTree.Node node27 = aVLTree17.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree8.getBalance(node27);
        int int30 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node32 = aVLTree0.find((int) (short) 100);
        avltree.AVLTree.Node node33 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
    }

    @Test
    public void test1758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1758");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) ' ');
        int int9 = aVLTree0.height();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        avltree.AVLTree.Node node13 = aVLTree10.getRoot();
        aVLTree10.insert((int) (byte) 100);
        avltree.AVLTree.Node node16 = aVLTree10.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        aVLTree0.insert((int) '#');
        avltree.AVLTree.Node node20 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(node20);
    }

    @Test
    public void test1759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1759");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node10 = aVLTree6.find((int) 'a');
        aVLTree6.delete((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree13.getBalance(node14);
        aVLTree13.insert((int) (byte) 100);
        aVLTree13.insert((int) 'a');
        avltree.AVLTree.Node node21 = aVLTree13.find((int) (byte) 100);
        int int22 = aVLTree6.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        int int24 = aVLTree0.height();
        avltree.AVLTree.Node node26 = aVLTree0.find((int) (byte) 100);
        int int27 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test1760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1760");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 1);
        int int6 = aVLTree0.height();
        aVLTree0.insert((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
    }

    @Test
    public void test1761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1761");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        avltree.AVLTree.Node node46 = aVLTree0.find(100);
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        avltree.AVLTree.Node node48 = aVLTree0.getRoot();
        avltree.AVLTree.Node node49 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree50 = new avltree.AVLTree();
        avltree.AVLTree.Node node52 = aVLTree50.find((-1));
        aVLTree50.delete(100);
        avltree.AVLTree.Node node56 = aVLTree50.find((int) '#');
        int int57 = aVLTree50.height();
        avltree.AVLTree.Node node59 = aVLTree50.find(10);
        aVLTree50.insert(0);
        avltree.AVLTree.Node node62 = aVLTree50.getRoot();
        avltree.AVLTree.Node node63 = aVLTree50.getRoot();
        int int64 = aVLTree0.getBalance(node63);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
    }

    @Test
    public void test1762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1762");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert(0);
        avltree.AVLTree.Node node16 = aVLTree9.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        aVLTree0.delete((int) (byte) 1);
        java.lang.Class<?> wildcardClass20 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test1763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1763");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 1);
        int int13 = aVLTree0.height();
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree14.getBalance(node17);
        aVLTree14.insert((int) '4');
        avltree.AVLTree.Node node22 = aVLTree14.find(100);
        avltree.AVLTree.Node node23 = aVLTree14.getRoot();
        int int24 = aVLTree0.getBalance(node23);
        aVLTree0.insert((-1));
        aVLTree0.delete((int) (short) 0);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree29.getRoot();
        aVLTree29.insert((int) (byte) 100);
        int int35 = aVLTree29.height();
        aVLTree29.delete((int) (byte) 10);
        aVLTree29.delete((int) (byte) 1);
        avltree.AVLTree.Node node40 = aVLTree29.getRoot();
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        int int44 = aVLTree41.height();
        aVLTree41.insert((-1));
        avltree.AVLTree.Node node47 = aVLTree41.getRoot();
        avltree.AVLTree.Node node48 = aVLTree41.getRoot();
        avltree.AVLTree.Node node49 = aVLTree41.getRoot();
        int int50 = aVLTree29.getBalance(node49);
        int int51 = aVLTree0.getBalance(node49);
        aVLTree0.insert((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test1764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1764");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find(1);
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 1);
        int int15 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
    }

    @Test
    public void test1765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1765");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        int int7 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.find(10);
        aVLTree0.insert(0);
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1766");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree17.getBalance(node20);
        aVLTree17.insert((int) (short) 100);
        avltree.AVLTree.Node node25 = aVLTree17.find((int) ' ');
        int int26 = aVLTree17.height();
        avltree.AVLTree.Node node27 = aVLTree17.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node31 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass33 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test1767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1767");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        aVLTree0.delete((int) '4');
        int int13 = aVLTree0.height();
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((-1));
        aVLTree14.delete(100);
        aVLTree14.insert((int) (short) 1);
        avltree.AVLTree.Node node21 = aVLTree14.getRoot();
        avltree.AVLTree.Node node22 = aVLTree14.getRoot();
        int int23 = aVLTree0.getBalance(node22);
        avltree.AVLTree.Node node25 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node25);
    }

    @Test
    public void test1768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1768");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        int int8 = aVLTree0.height();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert(0);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree16.getBalance(node17);
        aVLTree16.insert((int) (byte) 100);
        aVLTree16.insert((int) 'a');
        avltree.AVLTree.Node node23 = aVLTree16.getRoot();
        int int24 = aVLTree9.getBalance(node23);
        avltree.AVLTree.Node node26 = aVLTree9.find((int) (short) 100);
        aVLTree9.delete((int) (short) -1);
        avltree.AVLTree.Node node30 = aVLTree9.find(0);
        int int31 = aVLTree0.getBalance(node30);
        java.lang.Class<?> wildcardClass32 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test1769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1769");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete(100);
        java.lang.Class<?> wildcardClass5 = aVLTree0.getClass();
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test1770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1770");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) (short) 100);
        avltree.AVLTree.Node node19 = aVLTree11.find((int) ' ');
        int int20 = aVLTree11.height();
        avltree.AVLTree.Node node21 = aVLTree11.getRoot();
        int int22 = aVLTree5.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        int int24 = aVLTree0.height();
        avltree.AVLTree.Node node26 = aVLTree0.find((-1));
        avltree.AVLTree.Node node28 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node29 = aVLTree0.getRoot();
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node30);
    }

    @Test
    public void test1771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1771");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find(10);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        aVLTree15.delete((int) 'a');
        aVLTree15.delete(1);
        avltree.AVLTree.Node node22 = aVLTree15.getRoot();
        avltree.AVLTree.Node node24 = aVLTree15.find((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree15.getRoot();
        aVLTree15.delete(0);
        aVLTree15.insert((int) (short) 1);
        avltree.AVLTree.Node node30 = aVLTree15.getRoot();
        avltree.AVLTree.Node node31 = aVLTree15.getRoot();
        int int32 = aVLTree0.getBalance(node31);
        avltree.AVLTree.Node node33 = aVLTree0.getRoot();
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert(0);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(node33);
    }

    @Test
    public void test1772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1772");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.find(10);
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node16 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node18 = aVLTree0.find(0);
        int int19 = aVLTree0.height();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
    }

    @Test
    public void test1773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1773");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test1774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1774");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert(1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node9 = aVLTree6.getRoot();
        aVLTree6.insert((int) (byte) 100);
        int int12 = aVLTree6.height();
        aVLTree6.insert(1);
        aVLTree6.insert(0);
        avltree.AVLTree.Node node17 = aVLTree6.getRoot();
        avltree.AVLTree.Node node18 = aVLTree6.getRoot();
        int int19 = aVLTree0.getBalance(node18);
        int int20 = aVLTree0.height();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1775");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find(0);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1776");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        aVLTree12.delete((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree12.getBalance(node18);
        avltree.AVLTree.Node node21 = aVLTree12.find((int) ' ');
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = aVLTree22.find((int) '4');
        avltree.AVLTree.Node node26 = aVLTree22.find((int) 'a');
        aVLTree22.delete((int) (short) 10);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = null;
        int int31 = aVLTree29.getBalance(node30);
        aVLTree29.insert((int) (byte) 100);
        aVLTree29.insert((int) 'a');
        avltree.AVLTree.Node node37 = aVLTree29.find((int) (byte) 100);
        int int38 = aVLTree22.getBalance(node37);
        int int39 = aVLTree12.getBalance(node37);
        int int40 = aVLTree0.getBalance(node37);
        java.lang.Class<?> wildcardClass41 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test1777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1777");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        int int4 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.insert(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + (-1) + "'", int4 == (-1));
        org.junit.Assert.assertNull(node7);
    }

    @Test
    public void test1778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1778");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.delete((int) '4');
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((-1));
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test1779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1779");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        aVLTree0.insert(10);
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNotNull(node15);
    }

    @Test
    public void test1780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1780");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.insert((int) '#');
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (short) 100);
        int int14 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test1781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1781");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) (short) 10);
        aVLTree0.delete(0);
        int int13 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test1782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1782");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.insert(1);
        aVLTree0.insert(0);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        int int12 = aVLTree0.height();
        avltree.AVLTree.Node node14 = aVLTree0.find(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test1783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1783");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree11.getBalance(node12);
        aVLTree11.insert((int) (byte) 100);
        aVLTree11.insert((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree11.find((int) (byte) 100);
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree.Node node22 = aVLTree0.find((int) (byte) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node22);
    }

    @Test
    public void test1784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1784");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) (short) -1);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.delete((int) 'a');
        aVLTree13.insert((int) (short) 1);
        avltree.AVLTree.Node node21 = aVLTree13.find((int) ' ');
        aVLTree13.insert((int) (short) 10);
        aVLTree13.insert(0);
        avltree.AVLTree.Node node26 = aVLTree13.getRoot();
        int int27 = aVLTree13.height();
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree28.find((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree28.find((int) ' ');
        aVLTree28.delete((int) '4');
        aVLTree28.delete((int) (short) 100);
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree39.find((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree39.find((int) ' ');
        avltree.AVLTree.Node node47 = aVLTree39.find((int) '#');
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree48.getBalance(node51);
        aVLTree48.insert((int) (short) 100);
        avltree.AVLTree.Node node56 = aVLTree48.find((int) ' ');
        int int57 = aVLTree48.height();
        avltree.AVLTree.Node node58 = aVLTree48.getRoot();
        int int59 = aVLTree39.getBalance(node58);
        int int60 = aVLTree28.getBalance(node58);
        int int61 = aVLTree13.getBalance(node58);
        int int62 = aVLTree0.getBalance(node58);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test1785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1785");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int6 = aVLTree0.height();
        aVLTree0.insert(1);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1786");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        aVLTree42.insert((int) (byte) 100);
        int int53 = aVLTree42.height();
        aVLTree42.delete((int) (byte) 0);
        avltree.AVLTree.Node node57 = aVLTree42.find(0);
        avltree.AVLTree.Node node58 = aVLTree42.getRoot();
        int int59 = aVLTree0.getBalance(node58);
        int int60 = aVLTree0.height();
        avltree.AVLTree.Node node62 = aVLTree0.find((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 1 + "'", int53 == 1);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNull(node62);
    }

    @Test
    public void test1787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1787");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        int int8 = aVLTree0.height();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        aVLTree9.delete(1);
        aVLTree9.delete((int) '#');
        aVLTree9.delete((int) (short) -1);
        avltree.AVLTree.Node node20 = aVLTree9.getRoot();
        avltree.AVLTree.Node node22 = aVLTree9.find((int) (byte) 100);
        int int23 = aVLTree9.height();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        aVLTree24.insert((int) (byte) 100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree30.find((int) 'a');
        aVLTree30.delete((int) (short) 10);
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        aVLTree37.insert((int) (byte) 100);
        aVLTree37.insert((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree37.find((int) (byte) 100);
        int int46 = aVLTree30.getBalance(node45);
        int int47 = aVLTree24.getBalance(node45);
        int int48 = aVLTree9.getBalance(node45);
        int int49 = aVLTree0.getBalance(node45);
        java.lang.Class<?> wildcardClass50 = node45.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test1788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1788");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        aVLTree8.delete((int) 'a');
        aVLTree8.delete(1);
        aVLTree8.delete((int) '#');
        aVLTree8.delete((int) (short) -1);
        avltree.AVLTree.Node node19 = aVLTree8.getRoot();
        aVLTree8.insert(10);
        aVLTree8.delete(1);
        avltree.AVLTree.Node node24 = aVLTree8.getRoot();
        int int25 = aVLTree8.height();
        aVLTree8.delete((int) 'a');
        avltree.AVLTree.Node node28 = aVLTree8.getRoot();
        int int29 = aVLTree0.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree0.find((int) '#');
        aVLTree0.delete(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node31);
    }

    @Test
    public void test1789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1789");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node12 = aVLTree0.find(0);
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1790");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test1791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1791");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        int int17 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 100);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = aVLTree22.find((int) '4');
        aVLTree22.delete((int) 'a');
        avltree.AVLTree.Node node27 = aVLTree22.getRoot();
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree22.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree22.find((int) ' ');
        avltree.AVLTree.Node node32 = aVLTree22.getRoot();
        avltree.AVLTree.Node node33 = aVLTree22.getRoot();
        aVLTree22.insert((int) (byte) 10);
        avltree.AVLTree.Node node36 = aVLTree22.getRoot();
        int int37 = aVLTree0.getBalance(node36);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test1792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1792");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) (short) 100);
        avltree.AVLTree.Node node19 = aVLTree11.find((int) ' ');
        int int20 = aVLTree11.height();
        avltree.AVLTree.Node node21 = aVLTree11.getRoot();
        int int22 = aVLTree5.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        int int24 = aVLTree0.height();
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) 'a');
        aVLTree0.delete((-1));
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node35 = aVLTree0.getRoot();
        avltree.AVLTree.Node node37 = aVLTree0.find(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertNull(node37);
    }

    @Test
    public void test1793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1793");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.insert(0);
        aVLTree0.insert((int) '#');
        aVLTree0.insert((int) (byte) -1);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        avltree.AVLTree.Node node18 = aVLTree15.getRoot();
        aVLTree15.delete(100);
        int int21 = aVLTree15.height();
        avltree.AVLTree.Node node23 = aVLTree15.find((int) (short) -1);
        avltree.AVLTree.Node node24 = aVLTree15.getRoot();
        avltree.AVLTree.Node node26 = aVLTree15.find(1);
        aVLTree15.delete(10);
        int int29 = aVLTree15.height();
        aVLTree15.insert((int) ' ');
        avltree.AVLTree.Node node32 = aVLTree15.getRoot();
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        avltree.AVLTree.Node node36 = aVLTree33.getRoot();
        aVLTree33.insert((int) (byte) 100);
        int int39 = aVLTree33.height();
        aVLTree33.insert(1);
        avltree.AVLTree.Node node43 = aVLTree33.find(100);
        int int44 = aVLTree15.getBalance(node43);
        int int45 = aVLTree0.getBalance(node43);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
    }

    @Test
    public void test1794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1794");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.delete((int) 'a');
        java.lang.Class<?> wildcardClass8 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test1795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1795");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert(0);
        avltree.AVLTree.Node node16 = aVLTree9.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        aVLTree0.delete((int) (byte) 1);
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node22 = null;
        int int23 = aVLTree0.getBalance(node22);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree24.getBalance(node27);
        aVLTree24.insert(0);
        aVLTree24.insert((int) (short) 10);
        avltree.AVLTree.Node node33 = aVLTree24.getRoot();
        aVLTree24.delete(0);
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        aVLTree36.delete((int) 'a');
        aVLTree36.delete(1);
        avltree.AVLTree.Node node43 = aVLTree36.getRoot();
        avltree.AVLTree.Node node45 = aVLTree36.find((int) (byte) 10);
        avltree.AVLTree.Node node46 = aVLTree36.getRoot();
        aVLTree36.delete(0);
        aVLTree36.insert((int) (short) 1);
        avltree.AVLTree.Node node51 = aVLTree36.getRoot();
        int int52 = aVLTree24.getBalance(node51);
        int int53 = aVLTree0.getBalance(node51);
        aVLTree0.insert((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
    }

    @Test
    public void test1796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1796");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree7.getRoot();
        int int15 = aVLTree0.getBalance(node14);
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 100);
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert(10);
        avltree.AVLTree.Node node23 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        avltree.AVLTree.Node node29 = aVLTree24.find((int) (short) -1);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        aVLTree30.delete((int) 'a');
        avltree.AVLTree.Node node35 = aVLTree30.getRoot();
        aVLTree30.delete(0);
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree30.getBalance(node38);
        int int40 = aVLTree30.height();
        aVLTree30.delete(100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        avltree.AVLTree.Node node46 = aVLTree43.getRoot();
        aVLTree43.delete(100);
        aVLTree43.insert((int) (byte) 10);
        avltree.AVLTree.Node node51 = aVLTree43.getRoot();
        int int52 = aVLTree30.getBalance(node51);
        int int53 = aVLTree24.getBalance(node51);
        avltree.AVLTree.Node node54 = aVLTree24.getRoot();
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree55.find((int) 'a');
        int int60 = aVLTree55.height();
        avltree.AVLTree aVLTree61 = new avltree.AVLTree();
        avltree.AVLTree.Node node62 = null;
        int int63 = aVLTree61.getBalance(node62);
        avltree.AVLTree.Node node64 = aVLTree61.getRoot();
        aVLTree61.insert((int) (byte) 100);
        avltree.AVLTree aVLTree67 = new avltree.AVLTree();
        avltree.AVLTree.Node node69 = aVLTree67.find((int) '4');
        aVLTree67.delete((int) 'a');
        avltree.AVLTree.Node node72 = aVLTree67.getRoot();
        aVLTree67.delete(0);
        avltree.AVLTree.Node node75 = null;
        int int76 = aVLTree67.getBalance(node75);
        int int77 = aVLTree67.height();
        avltree.AVLTree aVLTree78 = new avltree.AVLTree();
        avltree.AVLTree.Node node80 = aVLTree78.find((int) '4');
        avltree.AVLTree.Node node81 = aVLTree78.getRoot();
        aVLTree78.delete(100);
        aVLTree78.insert((int) (byte) 10);
        avltree.AVLTree.Node node86 = aVLTree78.getRoot();
        int int87 = aVLTree67.getBalance(node86);
        int int88 = aVLTree61.getBalance(node86);
        int int89 = aVLTree55.getBalance(node86);
        int int90 = aVLTree24.getBalance(node86);
        int int91 = aVLTree0.getBalance(node86);
        avltree.AVLTree.Node node92 = aVLTree0.getRoot();
        aVLTree0.delete((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertNotNull(node86);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(node92);
    }

    @Test
    public void test1797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1797");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        int int42 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
    }

    @Test
    public void test1798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1798");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test1799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1799");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree3.getBalance(node6);
        aVLTree3.insert((int) (short) 100);
        avltree.AVLTree.Node node11 = aVLTree3.find((int) ' ');
        int int12 = aVLTree3.height();
        avltree.AVLTree.Node node13 = aVLTree3.getRoot();
        int int14 = aVLTree0.getBalance(node13);
        int int15 = aVLTree0.height();
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 0);
        aVLTree0.delete(100);
        int int20 = aVLTree0.height();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test1800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1800");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) (short) -1);
        int int7 = aVLTree0.height();
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node11 = aVLTree0.find(0);
        int int12 = aVLTree0.height();
        aVLTree0.insert(2);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test1801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1801");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        int int5 = aVLTree0.height();
        aVLTree0.delete(1);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node13 = aVLTree10.getRoot();
        aVLTree10.delete(100);
        int int16 = aVLTree10.height();
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (short) -1);
        avltree.AVLTree.Node node19 = aVLTree10.getRoot();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree20.getBalance(node21);
        aVLTree20.insert((int) (byte) 100);
        aVLTree20.insert((int) 'a');
        avltree.AVLTree.Node node28 = aVLTree20.find((int) (byte) 100);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        aVLTree29.delete((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree29.getRoot();
        aVLTree29.delete(0);
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree29.getBalance(node37);
        int int39 = aVLTree29.height();
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree40.getRoot();
        aVLTree40.delete(100);
        aVLTree40.insert((int) (byte) 10);
        avltree.AVLTree.Node node48 = aVLTree40.getRoot();
        int int49 = aVLTree29.getBalance(node48);
        int int50 = aVLTree20.getBalance(node48);
        int int51 = aVLTree10.getBalance(node48);
        int int52 = aVLTree0.getBalance(node48);
        aVLTree0.delete(10);
        avltree.AVLTree.Node node55 = aVLTree0.getRoot();
        int int56 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test1802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1802");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        avltree.AVLTree.Node node14 = aVLTree0.find(100);
        aVLTree0.delete((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1803");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 1);
        aVLTree0.delete((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test1804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1804");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node28 = aVLTree0.getRoot();
        int int29 = aVLTree0.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.insert((int) (byte) 100);
        int int36 = aVLTree30.height();
        aVLTree30.delete((int) (byte) 10);
        aVLTree30.delete((int) (byte) 1);
        avltree.AVLTree.Node node41 = aVLTree30.getRoot();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        int int45 = aVLTree42.height();
        aVLTree42.insert((-1));
        avltree.AVLTree.Node node48 = aVLTree42.getRoot();
        avltree.AVLTree.Node node49 = aVLTree42.getRoot();
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree30.getBalance(node50);
        int int52 = aVLTree0.getBalance(node50);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1805");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        int int42 = aVLTree0.height();
        avltree.AVLTree.Node node43 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass44 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 1 + "'", int42 == 1);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(wildcardClass44);
    }

    @Test
    public void test1806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1806");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node13 = aVLTree9.find((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete((int) (short) 10);
        avltree.AVLTree.Node node17 = aVLTree9.getRoot();
        avltree.AVLTree.Node node18 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree19.getBalance(node20);
        aVLTree19.insert((int) (byte) 100);
        aVLTree19.insert((int) 'a');
        avltree.AVLTree.Node node27 = aVLTree19.find((int) (byte) 100);
        int int28 = aVLTree9.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        aVLTree0.insert((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test1807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1807");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        aVLTree31.delete(1);
        avltree.AVLTree.Node node38 = aVLTree31.getRoot();
        avltree.AVLTree.Node node40 = aVLTree31.find((int) (byte) 10);
        avltree.AVLTree.Node node41 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        aVLTree31.insert((int) (short) 1);
        avltree.AVLTree.Node node46 = aVLTree31.getRoot();
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node50 = aVLTree47.getRoot();
        aVLTree47.delete(100);
        int int53 = aVLTree47.height();
        avltree.AVLTree.Node node55 = aVLTree47.find((int) (short) -1);
        avltree.AVLTree.Node node56 = aVLTree47.getRoot();
        avltree.AVLTree.Node node58 = aVLTree47.find(1);
        avltree.AVLTree.Node node59 = aVLTree47.getRoot();
        avltree.AVLTree aVLTree60 = new avltree.AVLTree();
        avltree.AVLTree.Node node62 = aVLTree60.find((-1));
        aVLTree60.delete(100);
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = null;
        int int67 = aVLTree65.getBalance(node66);
        aVLTree65.insert((int) (byte) 100);
        aVLTree65.insert((int) 'a');
        avltree.AVLTree.Node node73 = aVLTree65.find((int) (byte) 100);
        int int74 = aVLTree60.getBalance(node73);
        int int75 = aVLTree47.getBalance(node73);
        int int76 = aVLTree31.getBalance(node73);
        int int77 = aVLTree0.getBalance(node73);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + (-1) + "'", int76 == (-1));
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
    }

    @Test
    public void test1808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1808");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) -1);
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        avltree.AVLTree.Node node19 = null;
        int int20 = aVLTree16.getBalance(node19);
        aVLTree16.insert(0);
        aVLTree16.insert((int) (short) 10);
        avltree.AVLTree.Node node25 = aVLTree16.getRoot();
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree26.getBalance(node27);
        aVLTree26.insert((int) (byte) 100);
        aVLTree26.insert((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree26.find((int) (byte) 100);
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        aVLTree35.delete((int) 'a');
        avltree.AVLTree.Node node40 = aVLTree35.getRoot();
        aVLTree35.delete(0);
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree35.getBalance(node43);
        int int45 = aVLTree35.height();
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node48 = aVLTree46.find((int) '4');
        avltree.AVLTree.Node node49 = aVLTree46.getRoot();
        aVLTree46.delete(100);
        aVLTree46.insert((int) (byte) 10);
        avltree.AVLTree.Node node54 = aVLTree46.getRoot();
        int int55 = aVLTree35.getBalance(node54);
        int int56 = aVLTree26.getBalance(node54);
        int int57 = aVLTree16.getBalance(node54);
        avltree.AVLTree.Node node59 = aVLTree16.find((int) (byte) -1);
        avltree.AVLTree.Node node61 = aVLTree16.find((int) (byte) -1);
        aVLTree16.insert((int) (short) -1);
        aVLTree16.delete((int) ' ');
        int int66 = aVLTree16.height();
        avltree.AVLTree.Node node68 = aVLTree16.find(10);
        int int69 = aVLTree0.getBalance(node68);
        aVLTree0.delete((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 1 + "'", int66 == 1);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test1809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1809");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.find(10);
        int int9 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test1810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1810");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree31.find((int) 'a');
        int int36 = aVLTree31.height();
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        avltree.AVLTree.Node node40 = aVLTree37.getRoot();
        aVLTree37.insert((int) (byte) 100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        int int53 = aVLTree43.height();
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.delete(100);
        aVLTree54.insert((int) (byte) 10);
        avltree.AVLTree.Node node62 = aVLTree54.getRoot();
        int int63 = aVLTree43.getBalance(node62);
        int int64 = aVLTree37.getBalance(node62);
        int int65 = aVLTree31.getBalance(node62);
        int int66 = aVLTree0.getBalance(node62);
        int int67 = aVLTree0.height();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node72 = aVLTree70.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree70.getRoot();
        aVLTree70.delete(100);
        aVLTree70.insert((int) (byte) 10);
        avltree.AVLTree.Node node78 = aVLTree70.getRoot();
        aVLTree70.insert((int) (byte) 100);
        int int81 = aVLTree70.height();
        aVLTree70.delete((int) (byte) 0);
        avltree.AVLTree.Node node85 = aVLTree70.find(0);
        int int86 = aVLTree70.height();
        avltree.AVLTree.Node node88 = aVLTree70.find(0);
        avltree.AVLTree.Node node89 = aVLTree70.getRoot();
        int int90 = aVLTree0.getBalance(node89);
        avltree.AVLTree.Node node92 = aVLTree0.find((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(node88);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNull(node92);
    }

    @Test
    public void test1811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1811");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        int int9 = aVLTree0.height();
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) '#');
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1812");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        int int9 = aVLTree0.height();
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = null;
        int int17 = aVLTree13.getBalance(node16);
        aVLTree13.insert((int) '4');
        avltree.AVLTree.Node node21 = aVLTree13.find((int) '#');
        avltree.AVLTree.Node node23 = aVLTree13.find((int) (byte) 0);
        avltree.AVLTree.Node node25 = aVLTree13.find((int) '#');
        avltree.AVLTree.Node node27 = aVLTree13.find(0);
        aVLTree13.insert(100);
        avltree.AVLTree.Node node30 = aVLTree13.getRoot();
        int int31 = aVLTree0.getBalance(node30);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
    }

    @Test
    public void test1813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1813");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        aVLTree12.delete((int) 'a');
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree17.getRoot();
        aVLTree17.insert((int) (byte) 100);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((int) '4');
        avltree.AVLTree.Node node26 = null;
        int int27 = aVLTree23.getBalance(node26);
        aVLTree23.insert((int) (short) 100);
        avltree.AVLTree.Node node31 = aVLTree23.find((int) ' ');
        int int32 = aVLTree23.height();
        avltree.AVLTree.Node node33 = aVLTree23.getRoot();
        int int34 = aVLTree17.getBalance(node33);
        int int35 = aVLTree12.getBalance(node33);
        int int36 = aVLTree12.height();
        aVLTree12.delete((int) (short) -1);
        aVLTree12.insert((int) 'a');
        aVLTree12.delete((-1));
        aVLTree12.delete((int) (byte) 0);
        aVLTree12.delete(0);
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node51 = aVLTree47.find((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree47.find((int) ' ');
        aVLTree47.delete((int) '4');
        aVLTree47.delete((int) (short) 100);
        avltree.AVLTree aVLTree58 = new avltree.AVLTree();
        avltree.AVLTree.Node node60 = aVLTree58.find((int) '4');
        avltree.AVLTree.Node node62 = aVLTree58.find((int) 'a');
        avltree.AVLTree.Node node64 = aVLTree58.find((int) ' ');
        avltree.AVLTree.Node node66 = aVLTree58.find((int) '#');
        avltree.AVLTree aVLTree67 = new avltree.AVLTree();
        avltree.AVLTree.Node node69 = aVLTree67.find((int) '4');
        avltree.AVLTree.Node node70 = null;
        int int71 = aVLTree67.getBalance(node70);
        aVLTree67.insert((int) (short) 100);
        avltree.AVLTree.Node node75 = aVLTree67.find((int) ' ');
        int int76 = aVLTree67.height();
        avltree.AVLTree.Node node77 = aVLTree67.getRoot();
        int int78 = aVLTree58.getBalance(node77);
        int int79 = aVLTree47.getBalance(node77);
        int int80 = aVLTree12.getBalance(node77);
        int int81 = aVLTree0.getBalance(node77);
        aVLTree0.insert(1);
        int int84 = aVLTree0.height();
        java.lang.Class<?> wildcardClass85 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test1814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1814");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.insert(0);
        aVLTree0.insert((int) '#');
        aVLTree0.insert(1);
        avltree.AVLTree.Node node16 = aVLTree0.find(1);
        avltree.AVLTree.Node node18 = aVLTree0.find((int) (byte) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node18);
    }

    @Test
    public void test1815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1815");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        int int16 = aVLTree0.height();
        avltree.AVLTree.Node node18 = aVLTree0.find((int) (short) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = null;
        int int23 = aVLTree19.getBalance(node22);
        aVLTree19.insert((int) '4');
        avltree.AVLTree.Node node27 = aVLTree19.find((int) (short) 0);
        avltree.AVLTree.Node node29 = aVLTree19.find((int) ' ');
        int int30 = aVLTree19.height();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree31.find((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete((int) (short) 10);
        avltree.AVLTree.Node node39 = aVLTree31.getRoot();
        int int40 = aVLTree31.height();
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.insert((int) (short) 0);
        avltree.AVLTree.Node node47 = aVLTree41.find(100);
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        avltree.AVLTree.Node node51 = aVLTree48.getRoot();
        aVLTree48.delete(100);
        aVLTree48.insert((int) (byte) 10);
        avltree.AVLTree.Node node56 = aVLTree48.getRoot();
        int int57 = aVLTree41.getBalance(node56);
        int int58 = aVLTree31.getBalance(node56);
        int int59 = aVLTree19.getBalance(node56);
        avltree.AVLTree.Node node60 = aVLTree19.getRoot();
        int int61 = aVLTree0.getBalance(node60);
        int int62 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNotNull(node56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
    }

    @Test
    public void test1816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1816");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 1);
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test1817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1817");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        avltree.AVLTree.Node node5 = null;
        int int6 = aVLTree0.getBalance(node5);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test1818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1818");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) (byte) -1);
        int int5 = aVLTree0.height();
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.insert(0);
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 0);
        java.lang.Class<?> wildcardClass14 = node13.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test1819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1819");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) (short) -1);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.insert((int) (short) 0);
        avltree.AVLTree.Node node13 = aVLTree7.find(100);
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree14.getRoot();
        aVLTree14.delete(100);
        aVLTree14.insert((int) (byte) 10);
        avltree.AVLTree.Node node22 = aVLTree14.getRoot();
        int int23 = aVLTree7.getBalance(node22);
        int int24 = aVLTree0.getBalance(node22);
        int int25 = aVLTree0.height();
        avltree.AVLTree.Node node27 = aVLTree0.find((int) '4');
        int int28 = aVLTree0.height();
        aVLTree0.insert((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1820");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 0);
        aVLTree0.insert(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1821");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find(0);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test1822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1822");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        aVLTree0.insert((-1));
        aVLTree0.insert(100);
        aVLTree0.delete((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            aVLTree0.insert((int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.RuntimeException; message: duplicate Key!");
        } catch (java.lang.RuntimeException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
    }

    @Test
    public void test1823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1823");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find((-1));
        int int14 = aVLTree0.height();
        int int15 = aVLTree0.height();
        int int16 = aVLTree0.height();
        aVLTree0.delete((int) (short) 10);
        aVLTree0.delete((int) '4');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node23 = aVLTree0.getRoot();
        avltree.AVLTree.Node node25 = aVLTree0.find((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(node23);
        org.junit.Assert.assertNull(node25);
    }

    @Test
    public void test1824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1824");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree25.getBalance(node28);
        avltree.AVLTree.Node node30 = aVLTree25.getRoot();
        aVLTree25.delete((int) (byte) -1);
        int int33 = aVLTree25.height();
        avltree.AVLTree.Node node34 = aVLTree25.getRoot();
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree35.getBalance(node38);
        aVLTree35.insert((int) '4');
        avltree.AVLTree.Node node43 = aVLTree35.find((int) (short) 0);
        aVLTree35.insert((int) (byte) 1);
        aVLTree35.delete((int) (short) -1);
        int int48 = aVLTree35.height();
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        aVLTree49.delete((int) (byte) -1);
        aVLTree49.delete((int) (byte) 0);
        avltree.AVLTree.Node node54 = aVLTree49.getRoot();
        avltree.AVLTree.Node node56 = aVLTree49.find(1);
        avltree.AVLTree.Node node58 = aVLTree49.find(10);
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node60 = null;
        int int61 = aVLTree59.getBalance(node60);
        aVLTree59.delete((int) (byte) -1);
        int int64 = aVLTree59.height();
        int int65 = aVLTree59.height();
        avltree.AVLTree.Node node67 = aVLTree59.find((int) '#');
        avltree.AVLTree aVLTree68 = new avltree.AVLTree();
        avltree.AVLTree.Node node70 = aVLTree68.find((int) '4');
        avltree.AVLTree.Node node72 = aVLTree68.find((int) 'a');
        aVLTree68.delete((int) (short) 10);
        avltree.AVLTree aVLTree75 = new avltree.AVLTree();
        avltree.AVLTree.Node node76 = null;
        int int77 = aVLTree75.getBalance(node76);
        aVLTree75.insert((int) (byte) 100);
        aVLTree75.insert((int) 'a');
        avltree.AVLTree.Node node83 = aVLTree75.find((int) (byte) 100);
        int int84 = aVLTree68.getBalance(node83);
        int int85 = aVLTree59.getBalance(node83);
        int int86 = aVLTree49.getBalance(node83);
        int int87 = aVLTree35.getBalance(node83);
        int int88 = aVLTree25.getBalance(node83);
        int int89 = aVLTree0.getBalance(node83);
        int int90 = aVLTree0.height();
        avltree.AVLTree.Node node91 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(node91);
    }

    @Test
    public void test1825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1825");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        aVLTree0.delete((int) (short) 0);
        aVLTree0.delete((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1826");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) (short) 1);
        int int9 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1827");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((-1));
        int int11 = aVLTree8.height();
        avltree.AVLTree.Node node12 = aVLTree8.getRoot();
        aVLTree8.insert((int) (byte) 100);
        aVLTree8.delete(100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree17.getBalance(node27);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        aVLTree29.delete((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree29.getRoot();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree29.getBalance(node35);
        avltree.AVLTree.Node node38 = aVLTree29.find((int) ' ');
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree39.find((int) 'a');
        aVLTree39.delete((int) (short) 10);
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        aVLTree46.insert((int) (byte) 100);
        aVLTree46.insert((int) 'a');
        avltree.AVLTree.Node node54 = aVLTree46.find((int) (byte) 100);
        int int55 = aVLTree39.getBalance(node54);
        int int56 = aVLTree29.getBalance(node54);
        int int57 = aVLTree17.getBalance(node54);
        int int58 = aVLTree8.getBalance(node54);
        int int59 = aVLTree0.getBalance(node54);
        aVLTree0.insert((int) 'a');
        int int62 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
    }

    @Test
    public void test1828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1828");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 100);
        int int14 = aVLTree0.height();
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        avltree.AVLTree.Node node18 = aVLTree15.getRoot();
        aVLTree15.insert((int) (byte) 100);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node25 = aVLTree21.find((int) 'a');
        aVLTree21.delete((int) (short) 10);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree28.getBalance(node29);
        aVLTree28.insert((int) (byte) 100);
        aVLTree28.insert((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree28.find((int) (byte) 100);
        int int37 = aVLTree21.getBalance(node36);
        int int38 = aVLTree15.getBalance(node36);
        int int39 = aVLTree0.getBalance(node36);
        java.lang.Class<?> wildcardClass40 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test1829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1829");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        aVLTree0.delete((int) (short) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        avltree.AVLTree.Node node17 = aVLTree0.find(0);
        aVLTree0.insert((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test1830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1830");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        int int12 = aVLTree0.height();
        aVLTree0.insert(1);
        avltree.AVLTree.Node node16 = aVLTree0.find((int) 'a');
        int int17 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test1831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1831");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.find((int) (byte) 0);
        aVLTree0.delete((int) (short) -1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node7);
    }

    @Test
    public void test1832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1832");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) 'a');
        aVLTree0.insert((int) 'a');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node22 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNotNull(node22);
    }

    @Test
    public void test1833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1833");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree0.getBalance(node9);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree12.find((int) 'a');
        int int17 = aVLTree12.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = null;
        int int20 = aVLTree18.getBalance(node19);
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.insert((int) (byte) 100);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete(0);
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree24.getBalance(node32);
        int int34 = aVLTree24.height();
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree35.getRoot();
        aVLTree35.delete(100);
        aVLTree35.insert((int) (byte) 10);
        avltree.AVLTree.Node node43 = aVLTree35.getRoot();
        int int44 = aVLTree24.getBalance(node43);
        int int45 = aVLTree18.getBalance(node43);
        int int46 = aVLTree12.getBalance(node43);
        int int47 = aVLTree0.getBalance(node43);
        aVLTree0.insert((int) (short) -1);
        avltree.AVLTree.Node node51 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node52 = aVLTree0.getRoot();
        int int53 = aVLTree0.height();
        avltree.AVLTree.Node node55 = aVLTree0.find((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node55);
    }

    @Test
    public void test1834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1834");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        aVLTree12.delete((int) (byte) -1);
        aVLTree12.delete((int) (byte) 0);
        aVLTree12.insert(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree19.find((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree19.find((int) ' ');
        avltree.AVLTree.Node node27 = aVLTree19.find((int) '#');
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node31 = null;
        int int32 = aVLTree28.getBalance(node31);
        aVLTree28.insert((int) (short) 100);
        avltree.AVLTree.Node node36 = aVLTree28.find((int) ' ');
        int int37 = aVLTree28.height();
        avltree.AVLTree.Node node38 = aVLTree28.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree12.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        avltree.AVLTree.Node node42 = aVLTree0.getRoot();
        avltree.AVLTree.Node node44 = aVLTree0.find(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node44);
    }

    @Test
    public void test1835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1835");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree0.getRoot();
        avltree.AVLTree.Node node44 = aVLTree0.getRoot();
        avltree.AVLTree.Node node46 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        avltree.AVLTree.Node node48 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node52 = aVLTree0.find((int) '#');
        avltree.AVLTree aVLTree53 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = aVLTree53.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree53.find((int) 'a');
        avltree.AVLTree.Node node59 = aVLTree53.find((int) ' ');
        int int60 = aVLTree53.height();
        aVLTree53.insert(0);
        int int63 = aVLTree53.height();
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = aVLTree64.find((int) '4');
        aVLTree64.delete((int) 'a');
        avltree.AVLTree.Node node69 = aVLTree64.getRoot();
        aVLTree64.insert((int) (short) 1);
        avltree.AVLTree.Node node73 = aVLTree64.find((int) (byte) 1);
        int int74 = aVLTree53.getBalance(node73);
        int int75 = aVLTree0.getBalance(node73);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test1836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1836");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node15 = aVLTree0.find(10);
        aVLTree0.insert((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1837");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find(0);
        avltree.AVLTree.Node node15 = aVLTree0.find(1);
        int int16 = aVLTree0.height();
        aVLTree0.insert((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1838");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        int int7 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        aVLTree0.insert((int) (short) 100);
        int int12 = aVLTree0.height();
        aVLTree0.delete((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test1839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1839");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        aVLTree0.delete((int) (byte) 100);
        avltree.AVLTree.Node node45 = aVLTree0.getRoot();
        avltree.AVLTree.Node node46 = aVLTree0.getRoot();
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
    }

    @Test
    public void test1840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1840");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        aVLTree9.delete(0);
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree9.getBalance(node17);
        int int19 = aVLTree9.height();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree20.getRoot();
        aVLTree20.delete(100);
        aVLTree20.insert((int) (byte) 10);
        avltree.AVLTree.Node node28 = aVLTree20.getRoot();
        int int29 = aVLTree9.getBalance(node28);
        int int30 = aVLTree0.getBalance(node28);
        avltree.AVLTree.Node node31 = aVLTree0.getRoot();
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree33 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = aVLTree33.find((int) '4');
        aVLTree33.delete((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree33.getRoot();
        aVLTree33.delete(0);
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree33.getBalance(node41);
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree33.getBalance(node43);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree45.getBalance(node51);
        avltree.AVLTree.Node node54 = aVLTree45.find((int) ' ');
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree55.find((int) 'a');
        aVLTree55.delete((int) (short) 10);
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree62.getBalance(node63);
        aVLTree62.insert((int) (byte) 100);
        aVLTree62.insert((int) 'a');
        avltree.AVLTree.Node node70 = aVLTree62.find((int) (byte) 100);
        int int71 = aVLTree55.getBalance(node70);
        int int72 = aVLTree45.getBalance(node70);
        int int73 = aVLTree33.getBalance(node70);
        int int74 = aVLTree0.getBalance(node70);
        avltree.AVLTree.Node node76 = aVLTree0.find((int) (short) 1);
        int int77 = aVLTree0.height();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + (-1) + "'", int71 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + (-1) + "'", int73 == (-1));
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 1 + "'", int77 == 1);
    }

    @Test
    public void test1841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1841");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.delete((int) '4');
        aVLTree0.delete((int) (byte) 0);
        int int9 = aVLTree0.height();
        java.lang.Class<?> wildcardClass10 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1842");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        avltree.AVLTree.Node node12 = aVLTree0.find((int) '#');
        avltree.AVLTree.Node node14 = aVLTree0.find(0);
        aVLTree0.insert(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1843");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        aVLTree15.delete((int) 'a');
        avltree.AVLTree.Node node20 = aVLTree15.getRoot();
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree15.getBalance(node21);
        avltree.AVLTree.Node node24 = aVLTree15.find((int) ' ');
        int int25 = aVLTree15.height();
        avltree.AVLTree.Node node27 = aVLTree15.find((int) (short) 1);
        int int28 = aVLTree15.height();
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree29.getBalance(node32);
        aVLTree29.insert((int) '4');
        avltree.AVLTree.Node node37 = aVLTree29.find(100);
        avltree.AVLTree.Node node38 = aVLTree29.getRoot();
        int int39 = aVLTree15.getBalance(node38);
        aVLTree15.insert((-1));
        aVLTree15.delete((int) (short) 0);
        avltree.AVLTree aVLTree44 = new avltree.AVLTree();
        avltree.AVLTree.Node node46 = aVLTree44.find((int) '4');
        avltree.AVLTree.Node node47 = aVLTree44.getRoot();
        aVLTree44.insert((int) (byte) 100);
        int int50 = aVLTree44.height();
        aVLTree44.delete((int) (byte) 10);
        aVLTree44.delete((int) (byte) 1);
        avltree.AVLTree.Node node55 = aVLTree44.getRoot();
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        int int59 = aVLTree56.height();
        aVLTree56.insert((-1));
        avltree.AVLTree.Node node62 = aVLTree56.getRoot();
        avltree.AVLTree.Node node63 = aVLTree56.getRoot();
        avltree.AVLTree.Node node64 = aVLTree56.getRoot();
        int int65 = aVLTree44.getBalance(node64);
        int int66 = aVLTree15.getBalance(node64);
        int int67 = aVLTree0.getBalance(node64);
        int int68 = aVLTree0.height();
        aVLTree0.delete((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 1 + "'", int68 == 1);
    }

    @Test
    public void test1844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1844");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.delete((int) (byte) -1);
        int int12 = aVLTree7.height();
        int int13 = aVLTree7.height();
        avltree.AVLTree.Node node15 = aVLTree7.find((int) '#');
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree16.find((int) 'a');
        aVLTree16.delete((int) (short) 10);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree23.getBalance(node24);
        aVLTree23.insert((int) (byte) 100);
        aVLTree23.insert((int) 'a');
        avltree.AVLTree.Node node31 = aVLTree23.find((int) (byte) 100);
        int int32 = aVLTree16.getBalance(node31);
        int int33 = aVLTree7.getBalance(node31);
        int int34 = aVLTree0.getBalance(node31);
        aVLTree0.delete((int) (short) 0);
        java.lang.Class<?> wildcardClass37 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test1845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1845");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node45 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node45);
    }

    @Test
    public void test1846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1846");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        avltree.AVLTree.Node node19 = aVLTree0.getRoot();
        avltree.AVLTree.Node node21 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node21);
    }

    @Test
    public void test1847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1847");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree.Node node9 = aVLTree0.find((int) (byte) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test1848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1848");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert(0);
        aVLTree0.delete((int) 'a');
        aVLTree0.insert((int) (byte) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test1849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1849");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 1);
        aVLTree0.insert(0);
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        int int16 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
    }

    @Test
    public void test1850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1850");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node10 = aVLTree6.find((int) 'a');
        aVLTree6.delete((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree13.getBalance(node14);
        aVLTree13.insert((int) (byte) 100);
        aVLTree13.insert((int) 'a');
        avltree.AVLTree.Node node21 = aVLTree13.find((int) (byte) 100);
        int int22 = aVLTree6.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        avltree.AVLTree.Node node24 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = null;
        int int27 = aVLTree25.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree28.getRoot();
        aVLTree28.insert((int) (byte) 100);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree34.getBalance(node37);
        aVLTree34.insert((int) (short) 100);
        avltree.AVLTree.Node node42 = aVLTree34.find((int) ' ');
        int int43 = aVLTree34.height();
        avltree.AVLTree.Node node44 = aVLTree34.getRoot();
        int int45 = aVLTree28.getBalance(node44);
        int int46 = aVLTree25.getBalance(node44);
        avltree.AVLTree.Node node48 = aVLTree25.find((int) 'a');
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        aVLTree49.delete((int) 'a');
        aVLTree49.delete(1);
        aVLTree49.delete((int) '#');
        aVLTree49.delete((int) (short) -1);
        avltree.AVLTree.Node node60 = aVLTree49.getRoot();
        aVLTree49.insert(10);
        aVLTree49.delete(1);
        avltree.AVLTree.Node node65 = aVLTree49.getRoot();
        int int66 = aVLTree49.height();
        aVLTree49.delete((int) 'a');
        avltree.AVLTree.Node node69 = aVLTree49.getRoot();
        int int70 = aVLTree25.getBalance(node69);
        int int71 = aVLTree0.getBalance(node69);
        avltree.AVLTree.Node node72 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(node72);
    }

    @Test
    public void test1851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1851");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        int int7 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.find(10);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) -1);
        avltree.AVLTree.Node node13 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree14.getBalance(node17);
        aVLTree14.insert((int) '4');
        avltree.AVLTree.Node node22 = aVLTree14.find((int) (short) 0);
        aVLTree14.insert((int) (byte) 1);
        aVLTree14.delete((int) (short) -1);
        int int27 = aVLTree14.height();
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        aVLTree28.delete((int) (byte) -1);
        aVLTree28.delete((int) (byte) 0);
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        avltree.AVLTree.Node node35 = aVLTree28.find(1);
        avltree.AVLTree.Node node37 = aVLTree28.find(10);
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree38.getBalance(node39);
        aVLTree38.delete((int) (byte) -1);
        int int43 = aVLTree38.height();
        int int44 = aVLTree38.height();
        avltree.AVLTree.Node node46 = aVLTree38.find((int) '#');
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node51 = aVLTree47.find((int) 'a');
        aVLTree47.delete((int) (short) 10);
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = null;
        int int56 = aVLTree54.getBalance(node55);
        aVLTree54.insert((int) (byte) 100);
        aVLTree54.insert((int) 'a');
        avltree.AVLTree.Node node62 = aVLTree54.find((int) (byte) 100);
        int int63 = aVLTree47.getBalance(node62);
        int int64 = aVLTree38.getBalance(node62);
        int int65 = aVLTree28.getBalance(node62);
        int int66 = aVLTree14.getBalance(node62);
        int int67 = aVLTree0.getBalance(node62);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test1852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1852");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) (byte) 1);
        int int11 = aVLTree0.height();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = aVLTree12.getRoot();
        aVLTree12.delete(100);
        aVLTree12.delete((int) (short) -1);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        aVLTree20.insert((int) (short) 0);
        avltree.AVLTree.Node node26 = aVLTree20.find(100);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        aVLTree27.delete((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        aVLTree27.delete(0);
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree27.getBalance(node35);
        int int37 = aVLTree27.height();
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        avltree.AVLTree.Node node41 = aVLTree38.getRoot();
        aVLTree38.delete(100);
        aVLTree38.insert((int) (byte) 10);
        avltree.AVLTree.Node node46 = aVLTree38.getRoot();
        int int47 = aVLTree27.getBalance(node46);
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        aVLTree48.delete((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree48.getRoot();
        aVLTree48.delete(0);
        avltree.AVLTree.Node node56 = null;
        int int57 = aVLTree48.getBalance(node56);
        int int58 = aVLTree48.height();
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = aVLTree59.find((int) '4');
        avltree.AVLTree.Node node62 = aVLTree59.getRoot();
        aVLTree59.delete(100);
        aVLTree59.insert((int) (byte) 10);
        avltree.AVLTree.Node node67 = aVLTree59.getRoot();
        int int68 = aVLTree48.getBalance(node67);
        int int69 = aVLTree27.getBalance(node67);
        int int70 = aVLTree20.getBalance(node67);
        int int71 = aVLTree12.getBalance(node67);
        aVLTree12.insert(1);
        int int74 = aVLTree12.height();
        avltree.AVLTree.Node node75 = aVLTree12.getRoot();
        int int76 = aVLTree0.getBalance(node75);
        aVLTree0.insert((int) (short) 100);
        int int79 = aVLTree0.height();
        avltree.AVLTree.Node node80 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
        org.junit.Assert.assertNotNull(node80);
    }

    @Test
    public void test1853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1853");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        aVLTree0.delete((int) (short) 100);
        aVLTree0.insert((int) '#');
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = null;
        int int17 = aVLTree13.getBalance(node16);
        aVLTree13.insert((int) 'a');
        int int20 = aVLTree13.height();
        aVLTree13.delete(0);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree23.find((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree23.find((int) ' ');
        avltree.AVLTree.Node node31 = aVLTree23.find((int) (byte) 100);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree32.getRoot();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node37 = aVLTree34.getRoot();
        avltree.AVLTree.Node node39 = aVLTree34.find((int) (short) -1);
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        aVLTree40.delete((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree40.getRoot();
        aVLTree40.delete(0);
        avltree.AVLTree.Node node48 = null;
        int int49 = aVLTree40.getBalance(node48);
        int int50 = aVLTree40.height();
        aVLTree40.delete(100);
        avltree.AVLTree aVLTree53 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = aVLTree53.find((int) '4');
        avltree.AVLTree.Node node56 = aVLTree53.getRoot();
        aVLTree53.delete(100);
        aVLTree53.insert((int) (byte) 10);
        avltree.AVLTree.Node node61 = aVLTree53.getRoot();
        int int62 = aVLTree40.getBalance(node61);
        int int63 = aVLTree34.getBalance(node61);
        int int64 = aVLTree32.getBalance(node61);
        int int65 = aVLTree23.getBalance(node61);
        int int66 = aVLTree13.getBalance(node61);
        int int67 = aVLTree0.getBalance(node61);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test1854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1854");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree0.getRoot();
        avltree.AVLTree.Node node44 = aVLTree0.getRoot();
        avltree.AVLTree.Node node46 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node48 = aVLTree0.find(100);
        aVLTree0.delete((int) '#');
        aVLTree0.delete(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node48);
    }

    @Test
    public void test1855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1855");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree3.getBalance(node6);
        aVLTree3.insert((int) (short) 100);
        avltree.AVLTree.Node node11 = aVLTree3.find((int) ' ');
        int int12 = aVLTree3.height();
        avltree.AVLTree.Node node13 = aVLTree3.getRoot();
        int int14 = aVLTree0.getBalance(node13);
        int int15 = aVLTree0.height();
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
    }

    @Test
    public void test1856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1856");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree7.getBalance(node13);
        avltree.AVLTree.Node node16 = aVLTree7.find((int) ' ');
        aVLTree7.insert((-1));
        avltree.AVLTree.Node node19 = aVLTree7.getRoot();
        int int20 = aVLTree7.height();
        avltree.AVLTree.Node node22 = aVLTree7.find((int) (short) -1);
        aVLTree7.insert((int) ' ');
        avltree.AVLTree.Node node25 = aVLTree7.getRoot();
        int int26 = aVLTree0.getBalance(node25);
        int int27 = aVLTree0.height();
        java.lang.Class<?> wildcardClass28 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test1857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1857");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        int int7 = aVLTree0.height();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.insert((int) (short) 1);
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((-1));
        int int21 = aVLTree18.height();
        avltree.AVLTree.Node node22 = aVLTree18.getRoot();
        aVLTree18.insert((int) (byte) 100);
        aVLTree18.delete(100);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        aVLTree27.delete((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        aVLTree27.delete(0);
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree27.getBalance(node35);
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree27.getBalance(node37);
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        aVLTree39.delete((int) 'a');
        avltree.AVLTree.Node node44 = aVLTree39.getRoot();
        avltree.AVLTree.Node node45 = null;
        int int46 = aVLTree39.getBalance(node45);
        avltree.AVLTree.Node node48 = aVLTree39.find((int) ' ');
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        avltree.AVLTree.Node node53 = aVLTree49.find((int) 'a');
        aVLTree49.delete((int) (short) 10);
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = null;
        int int58 = aVLTree56.getBalance(node57);
        aVLTree56.insert((int) (byte) 100);
        aVLTree56.insert((int) 'a');
        avltree.AVLTree.Node node64 = aVLTree56.find((int) (byte) 100);
        int int65 = aVLTree49.getBalance(node64);
        int int66 = aVLTree39.getBalance(node64);
        int int67 = aVLTree27.getBalance(node64);
        int int68 = aVLTree18.getBalance(node64);
        int int69 = aVLTree10.getBalance(node64);
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node72 = aVLTree70.find((int) '4');
        aVLTree70.delete((int) 'a');
        avltree.AVLTree.Node node75 = aVLTree70.getRoot();
        aVLTree70.delete(0);
        avltree.AVLTree.Node node78 = null;
        int int79 = aVLTree70.getBalance(node78);
        int int80 = aVLTree70.height();
        avltree.AVLTree aVLTree81 = new avltree.AVLTree();
        avltree.AVLTree.Node node83 = aVLTree81.find((int) '4');
        avltree.AVLTree.Node node84 = aVLTree81.getRoot();
        aVLTree81.delete(100);
        aVLTree81.insert((int) (byte) 10);
        avltree.AVLTree.Node node89 = aVLTree81.getRoot();
        int int90 = aVLTree70.getBalance(node89);
        int int91 = aVLTree10.getBalance(node89);
        aVLTree10.delete(10);
        avltree.AVLTree.Node node94 = aVLTree10.getRoot();
        int int95 = aVLTree0.getBalance(node94);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + (-1) + "'", int68 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNull(node84);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 0 + "'", int91 == 0);
        org.junit.Assert.assertNotNull(node94);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 0 + "'", int95 == 0);
    }

    @Test
    public void test1858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1858");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        avltree.AVLTree.Node node46 = aVLTree0.find(100);
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        avltree.AVLTree.Node node49 = aVLTree0.find((int) (byte) 100);
        aVLTree0.insert((int) ' ');
        avltree.AVLTree.Node node52 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNotNull(node52);
    }

    @Test
    public void test1859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1859");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.delete((int) '4');
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        java.lang.Class<?> wildcardClass10 = node9.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test1860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1860");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((-1));
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1861");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree0.getRoot();
        avltree.AVLTree.Node node44 = aVLTree0.getRoot();
        avltree.AVLTree.Node node46 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        avltree.AVLTree.Node node51 = aVLTree0.find((-1));
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass52 = node51.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node51);
    }

    @Test
    public void test1862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1862");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree7.getBalance(node10);
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.insert((int) (short) 0);
        avltree.AVLTree.Node node19 = aVLTree13.find(100);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        aVLTree20.delete((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree20.getRoot();
        aVLTree20.delete(0);
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree20.getBalance(node28);
        int int30 = aVLTree20.height();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree31.getRoot();
        aVLTree31.delete(100);
        aVLTree31.insert((int) (byte) 10);
        avltree.AVLTree.Node node39 = aVLTree31.getRoot();
        int int40 = aVLTree20.getBalance(node39);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.delete((int) 'a');
        avltree.AVLTree.Node node46 = aVLTree41.getRoot();
        aVLTree41.delete(0);
        avltree.AVLTree.Node node49 = null;
        int int50 = aVLTree41.getBalance(node49);
        int int51 = aVLTree41.height();
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree52.getRoot();
        aVLTree52.delete(100);
        aVLTree52.insert((int) (byte) 10);
        avltree.AVLTree.Node node60 = aVLTree52.getRoot();
        int int61 = aVLTree41.getBalance(node60);
        int int62 = aVLTree20.getBalance(node60);
        int int63 = aVLTree13.getBalance(node60);
        int int64 = aVLTree7.getBalance(node60);
        int int65 = aVLTree7.height();
        aVLTree7.insert((int) (byte) 0);
        int int68 = aVLTree7.height();
        avltree.AVLTree.Node node70 = aVLTree7.find((int) (short) 0);
        int int71 = aVLTree0.getBalance(node70);
        avltree.AVLTree.Node node73 = aVLTree0.find(100);
        aVLTree0.insert((int) (byte) 10);
        int int76 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
    }

    @Test
    public void test1863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1863");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        avltree.AVLTree.Node node4 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        int int11 = aVLTree5.height();
        aVLTree5.insert(10);
        avltree.AVLTree.Node node15 = aVLTree5.find((int) (byte) 10);
        int int16 = aVLTree0.getBalance(node15);
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.insert((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test1864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1864");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        int int16 = aVLTree0.height();
        int int17 = aVLTree0.height();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
        org.junit.Assert.assertNotNull(node18);
    }

    @Test
    public void test1865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1865");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find(10);
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (short) -1);
        int int11 = aVLTree0.height();
        int int12 = aVLTree0.height();
        int int13 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1866");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 100);
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1867");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (short) 1);
        avltree.AVLTree.Node node12 = aVLTree0.find(1);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1868");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        int int3 = aVLTree0.height();
        aVLTree0.insert((-1));
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        aVLTree8.delete((int) (byte) -1);
        aVLTree8.delete((int) (byte) 0);
        avltree.AVLTree.Node node13 = aVLTree8.getRoot();
        avltree.AVLTree.Node node15 = aVLTree8.find(1);
        avltree.AVLTree.Node node17 = aVLTree8.find(10);
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = null;
        int int20 = aVLTree18.getBalance(node19);
        aVLTree18.delete((int) (byte) -1);
        int int23 = aVLTree18.height();
        int int24 = aVLTree18.height();
        avltree.AVLTree.Node node26 = aVLTree18.find((int) '#');
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree27.find((int) 'a');
        aVLTree27.delete((int) (short) 10);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree34.getBalance(node35);
        aVLTree34.insert((int) (byte) 100);
        aVLTree34.insert((int) 'a');
        avltree.AVLTree.Node node42 = aVLTree34.find((int) (byte) 100);
        int int43 = aVLTree27.getBalance(node42);
        int int44 = aVLTree18.getBalance(node42);
        int int45 = aVLTree8.getBalance(node42);
        int int46 = aVLTree0.getBalance(node42);
        aVLTree0.delete((int) (byte) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test1869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1869");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 1);
        int int6 = aVLTree0.height();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree7.getBalance(node13);
        avltree.AVLTree.Node node16 = aVLTree7.find((int) ' ');
        aVLTree7.insert((-1));
        avltree.AVLTree.Node node19 = aVLTree7.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        aVLTree0.delete((int) (short) 100);
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.insert((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1870");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node28 = aVLTree0.getRoot();
        int int29 = aVLTree0.height();
        int int30 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test1871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1871");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert(1);
        avltree.AVLTree.Node node10 = aVLTree0.find(100);
        aVLTree0.insert(10);
        aVLTree0.delete((int) (byte) 1);
        aVLTree0.delete((int) (byte) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNotNull(node10);
    }

    @Test
    public void test1872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1872");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree7.getRoot();
        int int15 = aVLTree0.getBalance(node14);
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (short) 100);
        aVLTree0.delete((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + (-1) + "'", int15 == (-1));
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test1873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1873");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        aVLTree0.delete((int) (short) 0);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass15 = node14.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1874");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree10.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        aVLTree0.insert((-1));
        java.lang.Class<?> wildcardClass21 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test1875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1875");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find(0);
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree10.getBalance(node13);
        aVLTree10.insert(0);
        aVLTree10.insert((int) (short) 10);
        avltree.AVLTree.Node node19 = aVLTree10.getRoot();
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree20.getBalance(node21);
        aVLTree20.insert((int) (byte) 100);
        aVLTree20.insert((int) 'a');
        avltree.AVLTree.Node node28 = aVLTree20.find((int) (byte) 100);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        aVLTree29.delete((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree29.getRoot();
        aVLTree29.delete(0);
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree29.getBalance(node37);
        int int39 = aVLTree29.height();
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree40.getRoot();
        aVLTree40.delete(100);
        aVLTree40.insert((int) (byte) 10);
        avltree.AVLTree.Node node48 = aVLTree40.getRoot();
        int int49 = aVLTree29.getBalance(node48);
        int int50 = aVLTree20.getBalance(node48);
        int int51 = aVLTree10.getBalance(node48);
        int int52 = aVLTree0.getBalance(node48);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(node28);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test1876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1876");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        aVLTree12.delete((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        aVLTree12.delete(0);
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree12.getBalance(node20);
        avltree.AVLTree.Node node22 = null;
        int int23 = aVLTree12.getBalance(node22);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node28 = aVLTree24.find((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete((int) (short) 10);
        avltree.AVLTree.Node node32 = aVLTree24.getRoot();
        avltree.AVLTree.Node node33 = aVLTree24.getRoot();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree34.getBalance(node35);
        aVLTree34.insert((int) (byte) 100);
        aVLTree34.insert((int) 'a');
        avltree.AVLTree.Node node42 = aVLTree34.find((int) (byte) 100);
        int int43 = aVLTree24.getBalance(node42);
        int int44 = aVLTree12.getBalance(node42);
        int int45 = aVLTree0.getBalance(node42);
        aVLTree0.delete(0);
        avltree.AVLTree.Node node48 = aVLTree0.getRoot();
        aVLTree0.delete((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(node48);
    }

    @Test
    public void test1877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1877");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree10.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree19.find((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        avltree.AVLTree.Node node25 = aVLTree19.getRoot();
        avltree.AVLTree.Node node26 = aVLTree19.getRoot();
        aVLTree19.delete((int) (byte) 10);
        int int29 = aVLTree19.height();
        avltree.AVLTree.Node node31 = aVLTree19.find((int) (short) 10);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree19.getBalance(node40);
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree42.getBalance(node43);
        aVLTree42.insert((int) (byte) 100);
        aVLTree42.insert((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree42.find((int) (byte) 100);
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node53 = aVLTree51.find((int) '4');
        aVLTree51.delete((int) 'a');
        avltree.AVLTree.Node node56 = aVLTree51.getRoot();
        aVLTree51.delete(0);
        avltree.AVLTree.Node node59 = null;
        int int60 = aVLTree51.getBalance(node59);
        int int61 = aVLTree51.height();
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node64 = aVLTree62.find((int) '4');
        avltree.AVLTree.Node node65 = aVLTree62.getRoot();
        aVLTree62.delete(100);
        aVLTree62.insert((int) (byte) 10);
        avltree.AVLTree.Node node70 = aVLTree62.getRoot();
        int int71 = aVLTree51.getBalance(node70);
        int int72 = aVLTree42.getBalance(node70);
        avltree.AVLTree.Node node73 = aVLTree42.getRoot();
        int int74 = aVLTree19.getBalance(node73);
        int int75 = aVLTree0.getBalance(node73);
        java.lang.Class<?> wildcardClass76 = node73.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + (-1) + "'", int61 == (-1));
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNotNull(node70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + (-1) + "'", int75 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass76);
    }

    @Test
    public void test1878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1878");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree31.find((int) 'a');
        int int36 = aVLTree31.height();
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        avltree.AVLTree.Node node40 = aVLTree37.getRoot();
        aVLTree37.insert((int) (byte) 100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        int int53 = aVLTree43.height();
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.delete(100);
        aVLTree54.insert((int) (byte) 10);
        avltree.AVLTree.Node node62 = aVLTree54.getRoot();
        int int63 = aVLTree43.getBalance(node62);
        int int64 = aVLTree37.getBalance(node62);
        int int65 = aVLTree31.getBalance(node62);
        int int66 = aVLTree0.getBalance(node62);
        int int67 = aVLTree0.height();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node72 = aVLTree70.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree70.getRoot();
        aVLTree70.delete(100);
        aVLTree70.insert((int) (byte) 10);
        avltree.AVLTree.Node node78 = aVLTree70.getRoot();
        aVLTree70.insert((int) (byte) 100);
        int int81 = aVLTree70.height();
        aVLTree70.delete((int) (byte) 0);
        avltree.AVLTree.Node node85 = aVLTree70.find(0);
        int int86 = aVLTree70.height();
        avltree.AVLTree.Node node88 = aVLTree70.find(0);
        avltree.AVLTree.Node node89 = aVLTree70.getRoot();
        int int90 = aVLTree0.getBalance(node89);
        avltree.AVLTree.Node node92 = aVLTree0.find((int) ' ');
        java.lang.Class<?> wildcardClass93 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 1 + "'", int81 == 1);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(node88);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 1 + "'", int90 == 1);
        org.junit.Assert.assertNull(node92);
        org.junit.Assert.assertNotNull(wildcardClass93);
    }

    @Test
    public void test1879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1879");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        aVLTree0.delete((int) '#');
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        avltree.AVLTree.Node node52 = aVLTree49.getRoot();
        aVLTree49.delete(100);
        int int55 = aVLTree49.height();
        avltree.AVLTree.Node node57 = aVLTree49.find((int) (short) -1);
        aVLTree49.insert(0);
        aVLTree49.insert((int) (byte) 1);
        avltree.AVLTree.Node node62 = aVLTree49.getRoot();
        int int63 = aVLTree0.getBalance(node62);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
    }

    @Test
    public void test1880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1880");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree3.getBalance(node6);
        aVLTree3.insert((int) (short) 100);
        avltree.AVLTree.Node node11 = aVLTree3.find((int) ' ');
        int int12 = aVLTree3.height();
        avltree.AVLTree.Node node13 = aVLTree3.getRoot();
        int int14 = aVLTree0.getBalance(node13);
        avltree.AVLTree.Node node16 = aVLTree0.find((int) (short) 0);
        int int17 = aVLTree0.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        aVLTree18.insert((int) (byte) 100);
        int int29 = aVLTree18.height();
        aVLTree18.delete((int) (byte) 0);
        avltree.AVLTree.Node node33 = aVLTree18.find(0);
        avltree.AVLTree.Node node35 = aVLTree18.find(100);
        int int36 = aVLTree0.getBalance(node35);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 1 + "'", int29 == 1);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test1881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1881");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node15 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert(0);
        aVLTree0.delete(0);
        aVLTree0.delete((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node15);
    }

    @Test
    public void test1882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1882");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) 'a');
        int int7 = aVLTree0.height();
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.insert((int) (short) 1);
        aVLTree0.delete(0);
        aVLTree0.insert(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node10);
    }

    @Test
    public void test1883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1883");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) 'a');
        aVLTree11.delete((int) (byte) 10);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree20.find((int) 'a');
        aVLTree20.insert((int) (short) -1);
        avltree.AVLTree.Node node27 = aVLTree20.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = null;
        int int31 = aVLTree0.getBalance(node30);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        avltree.AVLTree.Node node37 = aVLTree32.find((int) (short) -1);
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        aVLTree38.delete((int) 'a');
        avltree.AVLTree.Node node43 = aVLTree38.getRoot();
        aVLTree38.delete(0);
        avltree.AVLTree.Node node46 = null;
        int int47 = aVLTree38.getBalance(node46);
        int int48 = aVLTree38.height();
        aVLTree38.delete(100);
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node53 = aVLTree51.find((int) '4');
        avltree.AVLTree.Node node54 = aVLTree51.getRoot();
        aVLTree51.delete(100);
        aVLTree51.insert((int) (byte) 10);
        avltree.AVLTree.Node node59 = aVLTree51.getRoot();
        int int60 = aVLTree38.getBalance(node59);
        int int61 = aVLTree32.getBalance(node59);
        aVLTree32.delete((int) (byte) 10);
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = aVLTree64.find((int) '4');
        avltree.AVLTree.Node node67 = null;
        int int68 = aVLTree64.getBalance(node67);
        aVLTree64.insert((int) (short) 100);
        avltree.AVLTree.Node node72 = aVLTree64.find((int) ' ');
        int int73 = aVLTree64.height();
        avltree.AVLTree.Node node74 = aVLTree64.getRoot();
        avltree.AVLTree aVLTree75 = new avltree.AVLTree();
        avltree.AVLTree.Node node77 = aVLTree75.find((int) '4');
        avltree.AVLTree.Node node78 = aVLTree75.getRoot();
        aVLTree75.delete(100);
        aVLTree75.insert((int) (byte) 10);
        avltree.AVLTree.Node node83 = aVLTree75.getRoot();
        aVLTree75.insert((int) (byte) 100);
        int int86 = aVLTree75.height();
        aVLTree75.delete((int) (byte) 0);
        avltree.AVLTree.Node node90 = aVLTree75.find(0);
        int int91 = aVLTree75.height();
        avltree.AVLTree.Node node93 = aVLTree75.find((int) (short) 10);
        int int94 = aVLTree64.getBalance(node93);
        int int95 = aVLTree32.getBalance(node93);
        int int96 = aVLTree0.getBalance(node93);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(node59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(node74);
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 1 + "'", int86 == 1);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 1 + "'", int91 == 1);
        org.junit.Assert.assertNotNull(node93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertTrue("'" + int95 + "' != '" + 1 + "'", int95 == 1);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 1 + "'", int96 == 1);
    }

    @Test
    public void test1884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1884");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        avltree.AVLTree.Node node46 = aVLTree0.find(100);
        aVLTree0.delete((int) '4');
        aVLTree0.insert(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node46);
    }

    @Test
    public void test1885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1885");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.delete((int) (short) 1);
        aVLTree0.delete(0);
        aVLTree0.delete(100);
        aVLTree0.delete((int) (short) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test1886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1886");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        aVLTree0.insert((-1));
        int int13 = aVLTree0.height();
        aVLTree0.insert((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1887");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node4);
    }

    @Test
    public void test1888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1888");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree8.getRoot();
        aVLTree8.delete(100);
        aVLTree8.insert((int) (byte) 10);
        avltree.AVLTree.Node node16 = aVLTree8.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        aVLTree0.insert((int) (byte) 10);
        int int20 = aVLTree0.height();
        aVLTree0.delete(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test1889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1889");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree32.getBalance(node35);
        aVLTree32.insert((int) (short) 100);
        avltree.AVLTree.Node node40 = aVLTree32.find((int) ' ');
        int int41 = aVLTree32.height();
        avltree.AVLTree.Node node42 = aVLTree32.getRoot();
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        avltree.AVLTree.Node node46 = aVLTree43.getRoot();
        aVLTree43.delete(100);
        aVLTree43.insert((int) (byte) 10);
        avltree.AVLTree.Node node51 = aVLTree43.getRoot();
        aVLTree43.insert((int) (byte) 100);
        int int54 = aVLTree43.height();
        aVLTree43.delete((int) (byte) 0);
        avltree.AVLTree.Node node58 = aVLTree43.find(0);
        int int59 = aVLTree43.height();
        avltree.AVLTree.Node node61 = aVLTree43.find((int) (short) 10);
        int int62 = aVLTree32.getBalance(node61);
        int int63 = aVLTree0.getBalance(node61);
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node65 = null;
        int int66 = aVLTree64.getBalance(node65);
        avltree.AVLTree aVLTree67 = new avltree.AVLTree();
        avltree.AVLTree.Node node69 = aVLTree67.find((int) '4');
        avltree.AVLTree.Node node70 = null;
        int int71 = aVLTree67.getBalance(node70);
        aVLTree67.insert((int) (short) 100);
        avltree.AVLTree.Node node75 = aVLTree67.find((int) ' ');
        int int76 = aVLTree67.height();
        avltree.AVLTree.Node node77 = aVLTree67.getRoot();
        int int78 = aVLTree64.getBalance(node77);
        int int79 = aVLTree64.height();
        avltree.AVLTree.Node node80 = aVLTree64.getRoot();
        avltree.AVLTree aVLTree81 = new avltree.AVLTree();
        avltree.AVLTree.Node node83 = aVLTree81.find((int) '4');
        avltree.AVLTree.Node node85 = aVLTree81.find((int) 'a');
        aVLTree81.insert((int) (short) -1);
        avltree.AVLTree.Node node88 = aVLTree81.getRoot();
        int int89 = aVLTree64.getBalance(node88);
        int int90 = aVLTree0.getBalance(node88);
        avltree.AVLTree.Node node92 = aVLTree0.find(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 1 + "'", int54 == 1);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 1 + "'", int59 == 1);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 1 + "'", int62 == 1);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertNull(node80);
        org.junit.Assert.assertNull(node83);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertNotNull(node88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 0 + "'", int89 == 0);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNull(node92);
    }

    @Test
    public void test1890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1890");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.insert((int) (byte) -1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 10);
        java.lang.Class<?> wildcardClass11 = aVLTree0.getClass();
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test1891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1891");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node10 = aVLTree0.find((-1));
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) ' ');
        aVLTree0.delete((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1892");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        aVLTree8.delete((int) 'a');
        aVLTree8.insert((int) (short) 1);
        avltree.AVLTree.Node node16 = aVLTree8.find((int) ' ');
        aVLTree8.insert((int) (short) 10);
        aVLTree8.delete((-1));
        avltree.AVLTree.Node node21 = aVLTree8.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        java.lang.Class<?> wildcardClass23 = node21.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNotNull(node7);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test1893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1893");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node10 = aVLTree0.find((-1));
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node14 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) ' ');
        aVLTree0.delete(100);
        aVLTree0.insert(10);
        aVLTree0.delete((int) (byte) 100);
        aVLTree0.insert((int) (short) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1894");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree17.getRoot();
        aVLTree17.delete(100);
        aVLTree17.insert((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree17.getRoot();
        int int26 = aVLTree6.getBalance(node25);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((-1));
        int int30 = aVLTree27.height();
        avltree.AVLTree.Node node31 = aVLTree27.getRoot();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree32.getBalance(node33);
        aVLTree32.insert((int) (byte) 100);
        aVLTree32.insert((int) 'a');
        avltree.AVLTree.Node node40 = aVLTree32.find((int) (byte) 100);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.delete((int) 'a');
        avltree.AVLTree.Node node46 = aVLTree41.getRoot();
        aVLTree41.delete(0);
        avltree.AVLTree.Node node49 = null;
        int int50 = aVLTree41.getBalance(node49);
        int int51 = aVLTree41.height();
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree52.getRoot();
        aVLTree52.delete(100);
        aVLTree52.insert((int) (byte) 10);
        avltree.AVLTree.Node node60 = aVLTree52.getRoot();
        int int61 = aVLTree41.getBalance(node60);
        int int62 = aVLTree32.getBalance(node60);
        avltree.AVLTree.Node node63 = aVLTree32.getRoot();
        int int64 = aVLTree27.getBalance(node63);
        int int65 = aVLTree6.getBalance(node63);
        int int66 = aVLTree0.getBalance(node63);
        aVLTree0.delete((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNotNull(node60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
    }

    @Test
    public void test1895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1895");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.find((-1));
        int int7 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.find((int) 'a');
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass10 = node9.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test1896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1896");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        int int7 = aVLTree0.height();
        aVLTree0.delete((int) '#');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        avltree.AVLTree.Node node41 = aVLTree10.getRoot();
        avltree.AVLTree.Node node42 = aVLTree10.getRoot();
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        avltree.AVLTree.Node node53 = null;
        int int54 = aVLTree43.getBalance(node53);
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        aVLTree55.delete((int) 'a');
        avltree.AVLTree.Node node60 = aVLTree55.getRoot();
        avltree.AVLTree.Node node61 = null;
        int int62 = aVLTree55.getBalance(node61);
        avltree.AVLTree.Node node64 = aVLTree55.find((int) ' ');
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node67 = aVLTree65.find((int) '4');
        avltree.AVLTree.Node node69 = aVLTree65.find((int) 'a');
        aVLTree65.delete((int) (short) 10);
        avltree.AVLTree aVLTree72 = new avltree.AVLTree();
        avltree.AVLTree.Node node73 = null;
        int int74 = aVLTree72.getBalance(node73);
        aVLTree72.insert((int) (byte) 100);
        aVLTree72.insert((int) 'a');
        avltree.AVLTree.Node node80 = aVLTree72.find((int) (byte) 100);
        int int81 = aVLTree65.getBalance(node80);
        int int82 = aVLTree55.getBalance(node80);
        int int83 = aVLTree43.getBalance(node80);
        int int84 = aVLTree10.getBalance(node80);
        int int85 = aVLTree0.getBalance(node80);
        avltree.AVLTree.Node node87 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertNull(node87);
    }

    @Test
    public void test1897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1897");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree5.getBalance(node8);
        aVLTree5.insert(0);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree12.getBalance(node13);
        aVLTree12.insert((int) (byte) 100);
        aVLTree12.insert((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree12.getRoot();
        int int20 = aVLTree5.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        int int22 = aVLTree0.height();
        avltree.AVLTree.Node node24 = aVLTree0.find((int) (byte) 100);
        java.lang.Class<?> wildcardClass25 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test1898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1898");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = aVLTree3.getRoot();
        aVLTree3.insert((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node17 = aVLTree9.find((int) ' ');
        int int18 = aVLTree9.height();
        avltree.AVLTree.Node node19 = aVLTree9.getRoot();
        int int20 = aVLTree3.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.insert((int) (short) 0);
        avltree.AVLTree.Node node30 = aVLTree24.find(100);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        aVLTree52.delete((int) 'a');
        avltree.AVLTree.Node node57 = aVLTree52.getRoot();
        aVLTree52.delete(0);
        avltree.AVLTree.Node node60 = null;
        int int61 = aVLTree52.getBalance(node60);
        int int62 = aVLTree52.height();
        avltree.AVLTree aVLTree63 = new avltree.AVLTree();
        avltree.AVLTree.Node node65 = aVLTree63.find((int) '4');
        avltree.AVLTree.Node node66 = aVLTree63.getRoot();
        aVLTree63.delete(100);
        aVLTree63.insert((int) (byte) 10);
        avltree.AVLTree.Node node71 = aVLTree63.getRoot();
        int int72 = aVLTree52.getBalance(node71);
        int int73 = aVLTree31.getBalance(node71);
        int int74 = aVLTree24.getBalance(node71);
        int int75 = aVLTree0.getBalance(node71);
        avltree.AVLTree.Node node76 = aVLTree0.getRoot();
        int int77 = aVLTree0.height();
        aVLTree0.insert((-1));
        aVLTree0.delete(0);
        aVLTree0.delete((int) '#');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNotNull(node71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test1899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1899");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.insert(0);
        aVLTree0.insert((int) '#');
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.delete((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
    }

    @Test
    public void test1900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1900");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) (short) -1);
        int int7 = aVLTree0.height();
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node11 = aVLTree0.find(0);
        int int12 = aVLTree0.height();
        avltree.AVLTree.Node node14 = aVLTree0.find(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1901");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) (short) -1);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.insert((int) (short) 0);
        avltree.AVLTree.Node node13 = aVLTree7.find(100);
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree14.getRoot();
        aVLTree14.delete(100);
        aVLTree14.insert((int) (byte) 10);
        avltree.AVLTree.Node node22 = aVLTree14.getRoot();
        int int23 = aVLTree7.getBalance(node22);
        int int24 = aVLTree0.getBalance(node22);
        int int25 = aVLTree0.height();
        aVLTree0.delete(10);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        aVLTree28.insert(0);
        int int51 = aVLTree28.height();
        avltree.AVLTree.Node node52 = aVLTree28.getRoot();
        int int53 = aVLTree0.getBalance(node52);
        int int54 = aVLTree0.height();
        avltree.AVLTree.Node node55 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(node55);
    }

    @Test
    public void test1902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1902");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        int int5 = aVLTree0.height();
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node11 = aVLTree0.find(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node11);
    }

    @Test
    public void test1903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1903");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test1904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1904");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        int int23 = aVLTree0.height();
        int int24 = aVLTree0.height();
        int int25 = aVLTree0.height();
        avltree.AVLTree.Node node26 = aVLTree0.getRoot();
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree0.getBalance(node27);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
    }

    @Test
    public void test1905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1905");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        avltree.AVLTree.Node node14 = aVLTree0.find(100);
        aVLTree0.delete(10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.delete((int) (byte) -1);
        int int22 = aVLTree17.height();
        int int23 = aVLTree17.height();
        avltree.AVLTree.Node node25 = aVLTree17.find((int) '#');
        avltree.AVLTree.Node node26 = aVLTree17.getRoot();
        aVLTree17.insert(0);
        avltree.AVLTree.Node node30 = aVLTree17.find((int) (byte) 0);
        int int31 = aVLTree0.getBalance(node30);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test1906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1906");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        aVLTree11.delete((int) 'a');
        avltree.AVLTree.Node node16 = aVLTree11.getRoot();
        avltree.AVLTree.Node node17 = null;
        int int18 = aVLTree11.getBalance(node17);
        avltree.AVLTree.Node node20 = aVLTree11.find((int) ' ');
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node25 = aVLTree21.find((int) 'a');
        aVLTree21.delete((int) (short) 10);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree28.getBalance(node29);
        aVLTree28.insert((int) (byte) 100);
        aVLTree28.insert((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree28.find((int) (byte) 100);
        int int37 = aVLTree21.getBalance(node36);
        int int38 = aVLTree11.getBalance(node36);
        int int39 = aVLTree0.getBalance(node36);
        avltree.AVLTree.Node node41 = aVLTree0.find((int) ' ');
        aVLTree0.insert((int) (byte) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNull(node41);
    }

    @Test
    public void test1907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1907");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((-1));
        int int34 = aVLTree31.height();
        avltree.AVLTree.Node node35 = aVLTree31.getRoot();
        aVLTree31.insert((int) (byte) 100);
        aVLTree31.delete(100);
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        aVLTree40.delete((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree40.getRoot();
        aVLTree40.delete(0);
        avltree.AVLTree.Node node48 = null;
        int int49 = aVLTree40.getBalance(node48);
        avltree.AVLTree.Node node50 = null;
        int int51 = aVLTree40.getBalance(node50);
        avltree.AVLTree aVLTree52 = new avltree.AVLTree();
        avltree.AVLTree.Node node54 = aVLTree52.find((int) '4');
        aVLTree52.delete((int) 'a');
        avltree.AVLTree.Node node57 = aVLTree52.getRoot();
        avltree.AVLTree.Node node58 = null;
        int int59 = aVLTree52.getBalance(node58);
        avltree.AVLTree.Node node61 = aVLTree52.find((int) ' ');
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node64 = aVLTree62.find((int) '4');
        avltree.AVLTree.Node node66 = aVLTree62.find((int) 'a');
        aVLTree62.delete((int) (short) 10);
        avltree.AVLTree aVLTree69 = new avltree.AVLTree();
        avltree.AVLTree.Node node70 = null;
        int int71 = aVLTree69.getBalance(node70);
        aVLTree69.insert((int) (byte) 100);
        aVLTree69.insert((int) 'a');
        avltree.AVLTree.Node node77 = aVLTree69.find((int) (byte) 100);
        int int78 = aVLTree62.getBalance(node77);
        int int79 = aVLTree52.getBalance(node77);
        int int80 = aVLTree40.getBalance(node77);
        int int81 = aVLTree31.getBalance(node77);
        int int82 = aVLTree0.getBalance(node77);
        aVLTree0.insert((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
    }

    @Test
    public void test1908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1908");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) (byte) 1);
        int int11 = aVLTree0.height();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = aVLTree12.getRoot();
        aVLTree12.delete(100);
        aVLTree12.delete((int) (short) -1);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        aVLTree20.insert((int) (short) 0);
        avltree.AVLTree.Node node26 = aVLTree20.find(100);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        aVLTree27.delete((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        aVLTree27.delete(0);
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree27.getBalance(node35);
        int int37 = aVLTree27.height();
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        avltree.AVLTree.Node node41 = aVLTree38.getRoot();
        aVLTree38.delete(100);
        aVLTree38.insert((int) (byte) 10);
        avltree.AVLTree.Node node46 = aVLTree38.getRoot();
        int int47 = aVLTree27.getBalance(node46);
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        aVLTree48.delete((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree48.getRoot();
        aVLTree48.delete(0);
        avltree.AVLTree.Node node56 = null;
        int int57 = aVLTree48.getBalance(node56);
        int int58 = aVLTree48.height();
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = aVLTree59.find((int) '4');
        avltree.AVLTree.Node node62 = aVLTree59.getRoot();
        aVLTree59.delete(100);
        aVLTree59.insert((int) (byte) 10);
        avltree.AVLTree.Node node67 = aVLTree59.getRoot();
        int int68 = aVLTree48.getBalance(node67);
        int int69 = aVLTree27.getBalance(node67);
        int int70 = aVLTree20.getBalance(node67);
        int int71 = aVLTree12.getBalance(node67);
        aVLTree12.insert(1);
        int int74 = aVLTree12.height();
        avltree.AVLTree.Node node75 = aVLTree12.getRoot();
        int int76 = aVLTree0.getBalance(node75);
        aVLTree0.insert((int) (short) 100);
        aVLTree0.delete((int) ' ');
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node84 = aVLTree0.find((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNull(node84);
    }

    @Test
    public void test1909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1909");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree.Node node6 = aVLTree0.find(100);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        aVLTree7.delete(0);
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree7.getBalance(node15);
        int int17 = aVLTree7.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        int int27 = aVLTree7.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        int int49 = aVLTree7.getBalance(node47);
        int int50 = aVLTree0.getBalance(node47);
        aVLTree0.insert((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test1910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1910");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 10);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree0.getBalance(node14);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test1911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1911");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find((-1));
        int int14 = aVLTree0.height();
        int int15 = aVLTree0.height();
        int int16 = aVLTree0.height();
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        int int25 = aVLTree19.height();
        avltree.AVLTree.Node node27 = aVLTree19.find((int) (short) -1);
        avltree.AVLTree.Node node28 = aVLTree19.getRoot();
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = null;
        int int31 = aVLTree29.getBalance(node30);
        aVLTree29.insert((int) (byte) 100);
        aVLTree29.insert((int) 'a');
        avltree.AVLTree.Node node37 = aVLTree29.find((int) (byte) 100);
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        aVLTree38.delete((int) 'a');
        avltree.AVLTree.Node node43 = aVLTree38.getRoot();
        aVLTree38.delete(0);
        avltree.AVLTree.Node node46 = null;
        int int47 = aVLTree38.getBalance(node46);
        int int48 = aVLTree38.height();
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        avltree.AVLTree.Node node52 = aVLTree49.getRoot();
        aVLTree49.delete(100);
        aVLTree49.insert((int) (byte) 10);
        avltree.AVLTree.Node node57 = aVLTree49.getRoot();
        int int58 = aVLTree38.getBalance(node57);
        int int59 = aVLTree29.getBalance(node57);
        int int60 = aVLTree19.getBalance(node57);
        int int61 = aVLTree0.getBalance(node57);
        avltree.AVLTree.Node node63 = aVLTree0.find(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(node63);
    }

    @Test
    public void test1912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1912");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        int int9 = aVLTree0.height();
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 1 + "'", int9 == 1);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNotNull(node11);
    }

    @Test
    public void test1913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1913");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        int int8 = aVLTree0.height();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node13 = aVLTree9.find((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        avltree.AVLTree.Node node15 = aVLTree9.getRoot();
        avltree.AVLTree.Node node16 = aVLTree9.getRoot();
        aVLTree9.delete((int) (byte) 10);
        int int19 = aVLTree9.height();
        avltree.AVLTree.Node node21 = aVLTree9.find((int) (short) 10);
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = aVLTree22.find((int) '4');
        avltree.AVLTree.Node node25 = aVLTree22.getRoot();
        aVLTree22.delete(100);
        aVLTree22.insert((int) (byte) 10);
        avltree.AVLTree.Node node30 = aVLTree22.getRoot();
        int int31 = aVLTree9.getBalance(node30);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node36 = aVLTree32.find((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree32.find((int) ' ');
        avltree.AVLTree.Node node40 = aVLTree32.find(0);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        aVLTree41.delete((int) 'a');
        aVLTree41.delete(1);
        aVLTree41.delete((int) '#');
        aVLTree41.delete((int) (short) -1);
        avltree.AVLTree.Node node52 = aVLTree41.getRoot();
        avltree.AVLTree.Node node54 = aVLTree41.find((int) (byte) 100);
        int int55 = aVLTree41.height();
        avltree.AVLTree aVLTree56 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = aVLTree56.find((int) '4');
        avltree.AVLTree.Node node59 = aVLTree56.getRoot();
        aVLTree56.insert((int) (byte) 100);
        avltree.AVLTree aVLTree62 = new avltree.AVLTree();
        avltree.AVLTree.Node node64 = aVLTree62.find((int) '4');
        avltree.AVLTree.Node node66 = aVLTree62.find((int) 'a');
        aVLTree62.delete((int) (short) 10);
        avltree.AVLTree aVLTree69 = new avltree.AVLTree();
        avltree.AVLTree.Node node70 = null;
        int int71 = aVLTree69.getBalance(node70);
        aVLTree69.insert((int) (byte) 100);
        aVLTree69.insert((int) 'a');
        avltree.AVLTree.Node node77 = aVLTree69.find((int) (byte) 100);
        int int78 = aVLTree62.getBalance(node77);
        int int79 = aVLTree56.getBalance(node77);
        int int80 = aVLTree41.getBalance(node77);
        int int81 = aVLTree32.getBalance(node77);
        int int82 = aVLTree9.getBalance(node77);
        int int83 = aVLTree0.getBalance(node77);
        java.lang.Class<?> wildcardClass84 = node77.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(node77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + (-1) + "'", int79 == (-1));
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass84);
    }

    @Test
    public void test1914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1914");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node6 = aVLTree0.find((-1));
        aVLTree0.insert((int) ' ');
        aVLTree0.insert(1);
        aVLTree0.insert(0);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node6);
    }

    @Test
    public void test1915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1915");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = null;
        int int32 = aVLTree30.getBalance(node31);
        aVLTree30.insert((int) (byte) 100);
        aVLTree30.insert((int) 'a');
        avltree.AVLTree.Node node38 = aVLTree30.find((int) (byte) 100);
        avltree.AVLTree.Node node39 = aVLTree30.getRoot();
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = null;
        int int42 = aVLTree40.getBalance(node41);
        aVLTree40.insert((int) (byte) 100);
        aVLTree40.insert((int) 'a');
        avltree.AVLTree.Node node47 = aVLTree40.getRoot();
        int int48 = aVLTree30.getBalance(node47);
        int int49 = aVLTree0.getBalance(node47);
        avltree.AVLTree.Node node51 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree.Node node53 = aVLTree0.find((int) (byte) 0);
        aVLTree0.delete((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node53);
    }

    @Test
    public void test1916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1916");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        avltree.AVLTree.Node node55 = aVLTree0.find(100);
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree58 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = null;
        int int60 = aVLTree58.getBalance(node59);
        avltree.AVLTree.Node node61 = aVLTree58.getRoot();
        aVLTree58.insert((int) (byte) 100);
        aVLTree58.insert((int) (byte) -1);
        avltree.AVLTree.Node node66 = aVLTree58.getRoot();
        int int67 = aVLTree0.getBalance(node66);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
    }

    @Test
    public void test1917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1917");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree8.getRoot();
        aVLTree8.delete(100);
        aVLTree8.insert((int) (byte) 10);
        avltree.AVLTree.Node node16 = aVLTree8.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        int int19 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
    }

    @Test
    public void test1918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1918");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree13.find((int) 'a');
        int int18 = aVLTree13.height();
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree19.getBalance(node20);
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.insert((int) (byte) 100);
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        aVLTree25.delete((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree25.getRoot();
        aVLTree25.delete(0);
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree25.getBalance(node33);
        int int35 = aVLTree25.height();
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        avltree.AVLTree.Node node39 = aVLTree36.getRoot();
        aVLTree36.delete(100);
        aVLTree36.insert((int) (byte) 10);
        avltree.AVLTree.Node node44 = aVLTree36.getRoot();
        int int45 = aVLTree25.getBalance(node44);
        int int46 = aVLTree19.getBalance(node44);
        int int47 = aVLTree13.getBalance(node44);
        int int48 = aVLTree0.getBalance(node44);
        aVLTree0.delete((int) (byte) 100);
        avltree.AVLTree.Node node52 = aVLTree0.find((int) ' ');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(node52);
    }

    @Test
    public void test1919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1919");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        aVLTree0.delete((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
    }

    @Test
    public void test1920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1920");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.insert(10);
        avltree.AVLTree.Node node16 = aVLTree0.find(2);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node16);
    }

    @Test
    public void test1921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1921");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) (short) 100);
        avltree.AVLTree.Node node19 = aVLTree11.find((int) ' ');
        int int20 = aVLTree11.height();
        avltree.AVLTree.Node node21 = aVLTree11.getRoot();
        int int22 = aVLTree5.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        aVLTree0.delete((int) (byte) -1);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        aVLTree26.delete((int) 'a');
        aVLTree26.delete(1);
        avltree.AVLTree.Node node33 = aVLTree26.getRoot();
        avltree.AVLTree.Node node35 = aVLTree26.find((int) (byte) 10);
        avltree.AVLTree.Node node36 = aVLTree26.getRoot();
        aVLTree26.delete(0);
        aVLTree26.insert((int) (short) 1);
        avltree.AVLTree.Node node41 = aVLTree26.getRoot();
        int int42 = aVLTree0.getBalance(node41);
        java.lang.Class<?> wildcardClass43 = node41.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(node41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1922");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = aVLTree25.find((int) '4');
        avltree.AVLTree.Node node28 = null;
        int int29 = aVLTree25.getBalance(node28);
        avltree.AVLTree.Node node30 = aVLTree25.getRoot();
        aVLTree25.delete((int) (byte) -1);
        int int33 = aVLTree25.height();
        avltree.AVLTree.Node node34 = aVLTree25.getRoot();
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree35.getBalance(node38);
        aVLTree35.insert((int) '4');
        avltree.AVLTree.Node node43 = aVLTree35.find((int) (short) 0);
        aVLTree35.insert((int) (byte) 1);
        aVLTree35.delete((int) (short) -1);
        int int48 = aVLTree35.height();
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        aVLTree49.delete((int) (byte) -1);
        aVLTree49.delete((int) (byte) 0);
        avltree.AVLTree.Node node54 = aVLTree49.getRoot();
        avltree.AVLTree.Node node56 = aVLTree49.find(1);
        avltree.AVLTree.Node node58 = aVLTree49.find(10);
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node60 = null;
        int int61 = aVLTree59.getBalance(node60);
        aVLTree59.delete((int) (byte) -1);
        int int64 = aVLTree59.height();
        int int65 = aVLTree59.height();
        avltree.AVLTree.Node node67 = aVLTree59.find((int) '#');
        avltree.AVLTree aVLTree68 = new avltree.AVLTree();
        avltree.AVLTree.Node node70 = aVLTree68.find((int) '4');
        avltree.AVLTree.Node node72 = aVLTree68.find((int) 'a');
        aVLTree68.delete((int) (short) 10);
        avltree.AVLTree aVLTree75 = new avltree.AVLTree();
        avltree.AVLTree.Node node76 = null;
        int int77 = aVLTree75.getBalance(node76);
        aVLTree75.insert((int) (byte) 100);
        aVLTree75.insert((int) 'a');
        avltree.AVLTree.Node node83 = aVLTree75.find((int) (byte) 100);
        int int84 = aVLTree68.getBalance(node83);
        int int85 = aVLTree59.getBalance(node83);
        int int86 = aVLTree49.getBalance(node83);
        int int87 = aVLTree35.getBalance(node83);
        int int88 = aVLTree25.getBalance(node83);
        int int89 = aVLTree0.getBalance(node83);
        int int90 = aVLTree0.height();
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node93 = null;
        int int94 = aVLTree0.getBalance(node93);
        avltree.AVLTree.Node node95 = aVLTree0.getRoot();
        int int96 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 1 + "'", int48 == 1);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node70);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNotNull(node95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 0 + "'", int96 == 0);
    }

    @Test
    public void test1923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1923");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) (short) 100);
        avltree.AVLTree.Node node19 = aVLTree11.find((int) ' ');
        int int20 = aVLTree11.height();
        avltree.AVLTree.Node node21 = aVLTree11.getRoot();
        int int22 = aVLTree5.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        int int24 = aVLTree0.height();
        avltree.AVLTree.Node node26 = aVLTree0.find((-1));
        int int27 = aVLTree0.height();
        aVLTree0.delete((int) (short) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test1924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1924");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        int int3 = aVLTree0.height();
        aVLTree0.insert(1);
        int int6 = aVLTree0.height();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree14.getBalance(node15);
        aVLTree14.insert((int) (byte) 100);
        aVLTree14.insert((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree14.find((int) (byte) 100);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((int) '4');
        aVLTree23.delete((int) 'a');
        avltree.AVLTree.Node node28 = aVLTree23.getRoot();
        aVLTree23.delete(0);
        avltree.AVLTree.Node node31 = null;
        int int32 = aVLTree23.getBalance(node31);
        int int33 = aVLTree23.height();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node37 = aVLTree34.getRoot();
        aVLTree34.delete(100);
        aVLTree34.insert((int) (byte) 10);
        avltree.AVLTree.Node node42 = aVLTree34.getRoot();
        int int43 = aVLTree23.getBalance(node42);
        int int44 = aVLTree14.getBalance(node42);
        avltree.AVLTree.Node node45 = aVLTree14.getRoot();
        avltree.AVLTree.Node node46 = aVLTree14.getRoot();
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        aVLTree47.delete((int) 'a');
        avltree.AVLTree.Node node52 = aVLTree47.getRoot();
        aVLTree47.delete(0);
        avltree.AVLTree.Node node55 = null;
        int int56 = aVLTree47.getBalance(node55);
        avltree.AVLTree.Node node57 = null;
        int int58 = aVLTree47.getBalance(node57);
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = aVLTree59.find((int) '4');
        aVLTree59.delete((int) 'a');
        avltree.AVLTree.Node node64 = aVLTree59.getRoot();
        avltree.AVLTree.Node node65 = null;
        int int66 = aVLTree59.getBalance(node65);
        avltree.AVLTree.Node node68 = aVLTree59.find((int) ' ');
        avltree.AVLTree aVLTree69 = new avltree.AVLTree();
        avltree.AVLTree.Node node71 = aVLTree69.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree69.find((int) 'a');
        aVLTree69.delete((int) (short) 10);
        avltree.AVLTree aVLTree76 = new avltree.AVLTree();
        avltree.AVLTree.Node node77 = null;
        int int78 = aVLTree76.getBalance(node77);
        aVLTree76.insert((int) (byte) 100);
        aVLTree76.insert((int) 'a');
        avltree.AVLTree.Node node84 = aVLTree76.find((int) (byte) 100);
        int int85 = aVLTree69.getBalance(node84);
        int int86 = aVLTree59.getBalance(node84);
        int int87 = aVLTree47.getBalance(node84);
        int int88 = aVLTree14.getBalance(node84);
        int int89 = aVLTree7.getBalance(node84);
        int int90 = aVLTree0.getBalance(node84);
        aVLTree0.insert((int) '#');
        avltree.AVLTree.Node node94 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 100);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(node84);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + (-1) + "'", int88 == (-1));
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + (-1) + "'", int89 == (-1));
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + (-1) + "'", int90 == (-1));
        org.junit.Assert.assertNull(node94);
    }

    @Test
    public void test1925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1925");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        int int9 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (short) 100);
        avltree.AVLTree.Node node13 = aVLTree0.find(1);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree.Node node17 = aVLTree0.find((int) (byte) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node17);
    }

    @Test
    public void test1926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1926");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree.Node node14 = aVLTree9.getRoot();
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree9.getBalance(node15);
        avltree.AVLTree.Node node18 = aVLTree9.find((int) ' ');
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node23 = aVLTree19.find((int) 'a');
        aVLTree19.delete((int) (short) 10);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree26.getBalance(node27);
        aVLTree26.insert((int) (byte) 100);
        aVLTree26.insert((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree26.find((int) (byte) 100);
        int int35 = aVLTree19.getBalance(node34);
        int int36 = aVLTree9.getBalance(node34);
        int int37 = aVLTree0.getBalance(node34);
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree38.find((int) 'a');
        avltree.AVLTree.Node node43 = aVLTree38.getRoot();
        avltree.AVLTree.Node node44 = aVLTree38.getRoot();
        avltree.AVLTree.Node node45 = aVLTree38.getRoot();
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = null;
        int int48 = aVLTree46.getBalance(node47);
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        avltree.AVLTree.Node node52 = aVLTree49.getRoot();
        aVLTree49.insert((int) (byte) 100);
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node58 = null;
        int int59 = aVLTree55.getBalance(node58);
        aVLTree55.insert((int) (short) 100);
        avltree.AVLTree.Node node63 = aVLTree55.find((int) ' ');
        int int64 = aVLTree55.height();
        avltree.AVLTree.Node node65 = aVLTree55.getRoot();
        int int66 = aVLTree49.getBalance(node65);
        int int67 = aVLTree46.getBalance(node65);
        int int68 = aVLTree38.getBalance(node65);
        int int69 = aVLTree0.getBalance(node65);
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node72 = aVLTree70.find((int) '4');
        avltree.AVLTree.Node node73 = aVLTree70.getRoot();
        avltree.AVLTree.Node node75 = aVLTree70.find((int) (short) -1);
        aVLTree70.delete((int) ' ');
        int int78 = aVLTree70.height();
        aVLTree70.insert((int) (short) -1);
        avltree.AVLTree.Node node82 = aVLTree70.find((int) (byte) -1);
        int int83 = aVLTree0.getBalance(node82);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertNull(node72);
        org.junit.Assert.assertNull(node73);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test1927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1927");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree12.getBalance(node13);
        aVLTree12.insert((int) (byte) 100);
        aVLTree12.insert((int) 'a');
        avltree.AVLTree.Node node20 = aVLTree12.find((int) (byte) 100);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree12.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree12.getRoot();
        avltree.AVLTree.Node node44 = aVLTree12.getRoot();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        aVLTree45.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        aVLTree45.delete(0);
        avltree.AVLTree.Node node53 = null;
        int int54 = aVLTree45.getBalance(node53);
        avltree.AVLTree.Node node55 = null;
        int int56 = aVLTree45.getBalance(node55);
        avltree.AVLTree aVLTree57 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = aVLTree57.find((int) '4');
        aVLTree57.delete((int) 'a');
        avltree.AVLTree.Node node62 = aVLTree57.getRoot();
        avltree.AVLTree.Node node63 = null;
        int int64 = aVLTree57.getBalance(node63);
        avltree.AVLTree.Node node66 = aVLTree57.find((int) ' ');
        avltree.AVLTree aVLTree67 = new avltree.AVLTree();
        avltree.AVLTree.Node node69 = aVLTree67.find((int) '4');
        avltree.AVLTree.Node node71 = aVLTree67.find((int) 'a');
        aVLTree67.delete((int) (short) 10);
        avltree.AVLTree aVLTree74 = new avltree.AVLTree();
        avltree.AVLTree.Node node75 = null;
        int int76 = aVLTree74.getBalance(node75);
        aVLTree74.insert((int) (byte) 100);
        aVLTree74.insert((int) 'a');
        avltree.AVLTree.Node node82 = aVLTree74.find((int) (byte) 100);
        int int83 = aVLTree67.getBalance(node82);
        int int84 = aVLTree57.getBalance(node82);
        int int85 = aVLTree45.getBalance(node82);
        int int86 = aVLTree12.getBalance(node82);
        int int87 = aVLTree0.getBalance(node82);
        java.lang.Class<?> wildcardClass88 = node82.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertNull(node71);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(node82);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + (-1) + "'", int84 == (-1));
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + (-1) + "'", int85 == (-1));
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + (-1) + "'", int86 == (-1));
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + (-1) + "'", int87 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass88);
    }

    @Test
    public void test1928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1928");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree.Node node15 = aVLTree0.find(0);
        int int16 = aVLTree0.height();
        avltree.AVLTree.Node node18 = aVLTree0.find((int) (short) 10);
        aVLTree0.insert(2);
        avltree.AVLTree.Node node21 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNotNull(node21);
    }

    @Test
    public void test1929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1929");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find((-1));
        int int14 = aVLTree0.height();
        int int15 = aVLTree0.height();
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        avltree.AVLTree.Node node19 = aVLTree16.getRoot();
        aVLTree16.insert((int) (byte) 100);
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = aVLTree22.find((int) '4');
        avltree.AVLTree.Node node26 = aVLTree22.find((int) 'a');
        aVLTree22.delete((int) (short) 10);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = null;
        int int31 = aVLTree29.getBalance(node30);
        aVLTree29.insert((int) (byte) 100);
        aVLTree29.insert((int) 'a');
        avltree.AVLTree.Node node37 = aVLTree29.find((int) (byte) 100);
        int int38 = aVLTree22.getBalance(node37);
        int int39 = aVLTree16.getBalance(node37);
        int int40 = aVLTree0.getBalance(node37);
        int int41 = aVLTree0.height();
        aVLTree0.insert((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 1 + "'", int41 == 1);
    }

    @Test
    public void test1930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1930");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree17.getRoot();
        aVLTree17.delete(100);
        aVLTree17.insert((int) (byte) 10);
        avltree.AVLTree.Node node25 = aVLTree17.getRoot();
        int int26 = aVLTree6.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node28 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 100);
        aVLTree0.insert((int) (byte) -1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(node28);
    }

    @Test
    public void test1931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1931");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) (short) -1);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.insert((int) (short) 0);
        avltree.AVLTree.Node node13 = aVLTree7.find(100);
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree14.getRoot();
        aVLTree14.delete(100);
        aVLTree14.insert((int) (byte) 10);
        avltree.AVLTree.Node node22 = aVLTree14.getRoot();
        int int23 = aVLTree7.getBalance(node22);
        int int24 = aVLTree0.getBalance(node22);
        aVLTree0.delete((int) (byte) -1);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        aVLTree27.delete((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        avltree.AVLTree.Node node33 = null;
        int int34 = aVLTree27.getBalance(node33);
        avltree.AVLTree.Node node36 = aVLTree27.find((int) ' ');
        aVLTree27.insert((-1));
        avltree.AVLTree.Node node39 = aVLTree27.getRoot();
        aVLTree27.delete((int) (byte) -1);
        aVLTree27.insert(0);
        avltree.AVLTree aVLTree44 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = null;
        int int46 = aVLTree44.getBalance(node45);
        aVLTree44.insert((int) (byte) 100);
        aVLTree44.insert((int) 'a');
        avltree.AVLTree.Node node52 = aVLTree44.find((int) (byte) 100);
        avltree.AVLTree aVLTree53 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = aVLTree53.find((int) '4');
        aVLTree53.delete((int) 'a');
        avltree.AVLTree.Node node58 = aVLTree53.getRoot();
        aVLTree53.delete(0);
        avltree.AVLTree.Node node61 = null;
        int int62 = aVLTree53.getBalance(node61);
        int int63 = aVLTree53.height();
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = aVLTree64.find((int) '4');
        avltree.AVLTree.Node node67 = aVLTree64.getRoot();
        aVLTree64.delete(100);
        aVLTree64.insert((int) (byte) 10);
        avltree.AVLTree.Node node72 = aVLTree64.getRoot();
        int int73 = aVLTree53.getBalance(node72);
        int int74 = aVLTree44.getBalance(node72);
        avltree.AVLTree.Node node75 = aVLTree44.getRoot();
        avltree.AVLTree.Node node76 = aVLTree44.getRoot();
        int int77 = aVLTree27.getBalance(node76);
        int int78 = aVLTree0.getBalance(node76);
        avltree.AVLTree.Node node79 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNotNull(node39);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertNotNull(node76);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + (-1) + "'", int77 == (-1));
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(node79);
    }

    @Test
    public void test1932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1932");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        int int7 = aVLTree0.height();
        int int8 = aVLTree0.height();
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        avltree.AVLTree.Node node17 = aVLTree14.getRoot();
        aVLTree14.insert((int) (byte) 100);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree20.getBalance(node23);
        aVLTree20.insert((int) (short) 100);
        avltree.AVLTree.Node node28 = aVLTree20.find((int) ' ');
        int int29 = aVLTree20.height();
        avltree.AVLTree.Node node30 = aVLTree20.getRoot();
        int int31 = aVLTree14.getBalance(node30);
        int int32 = aVLTree9.getBalance(node30);
        aVLTree9.delete((int) (short) 1);
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        aVLTree35.delete((int) 'a');
        avltree.AVLTree.Node node40 = aVLTree35.getRoot();
        aVLTree35.delete(0);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        avltree.AVLTree.Node node46 = aVLTree43.getRoot();
        aVLTree43.delete(100);
        aVLTree43.insert((int) (byte) 10);
        avltree.AVLTree.Node node51 = aVLTree43.getRoot();
        int int52 = aVLTree35.getBalance(node51);
        int int53 = aVLTree9.getBalance(node51);
        int int54 = aVLTree0.getBalance(node51);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
    }

    @Test
    public void test1933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1933");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree9.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        avltree.AVLTree.Node node16 = aVLTree11.find((int) (short) -1);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        aVLTree17.delete((int) 'a');
        avltree.AVLTree.Node node22 = aVLTree17.getRoot();
        aVLTree17.delete(0);
        avltree.AVLTree.Node node25 = null;
        int int26 = aVLTree17.getBalance(node25);
        int int27 = aVLTree17.height();
        aVLTree17.delete(100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree17.getBalance(node38);
        int int40 = aVLTree11.getBalance(node38);
        int int41 = aVLTree9.getBalance(node38);
        int int42 = aVLTree0.getBalance(node38);
        aVLTree0.delete(10);
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        avltree.AVLTree.Node node48 = null;
        int int49 = aVLTree45.getBalance(node48);
        aVLTree45.insert(0);
        aVLTree45.insert((int) (short) 10);
        avltree.AVLTree.Node node54 = aVLTree45.getRoot();
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = null;
        int int57 = aVLTree55.getBalance(node56);
        aVLTree55.insert((int) (byte) 100);
        aVLTree55.insert((int) 'a');
        avltree.AVLTree.Node node63 = aVLTree55.find((int) (byte) 100);
        avltree.AVLTree aVLTree64 = new avltree.AVLTree();
        avltree.AVLTree.Node node66 = aVLTree64.find((int) '4');
        aVLTree64.delete((int) 'a');
        avltree.AVLTree.Node node69 = aVLTree64.getRoot();
        aVLTree64.delete(0);
        avltree.AVLTree.Node node72 = null;
        int int73 = aVLTree64.getBalance(node72);
        int int74 = aVLTree64.height();
        avltree.AVLTree aVLTree75 = new avltree.AVLTree();
        avltree.AVLTree.Node node77 = aVLTree75.find((int) '4');
        avltree.AVLTree.Node node78 = aVLTree75.getRoot();
        aVLTree75.delete(100);
        aVLTree75.insert((int) (byte) 10);
        avltree.AVLTree.Node node83 = aVLTree75.getRoot();
        int int84 = aVLTree64.getBalance(node83);
        int int85 = aVLTree55.getBalance(node83);
        int int86 = aVLTree45.getBalance(node83);
        int int87 = aVLTree0.getBalance(node83);
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node90 = aVLTree0.getRoot();
        aVLTree0.delete((int) '4');
        int int93 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertNull(node66);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNull(node77);
        org.junit.Assert.assertNull(node78);
        org.junit.Assert.assertNotNull(node83);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 0 + "'", int86 == 0);
        org.junit.Assert.assertTrue("'" + int87 + "' != '" + 0 + "'", int87 == 0);
        org.junit.Assert.assertNull(node90);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + (-1) + "'", int93 == (-1));
    }

    @Test
    public void test1934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1934");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) (byte) -1);
        int int5 = aVLTree0.height();
        avltree.AVLTree.Node node7 = aVLTree0.find((int) (byte) 0);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + (-1) + "'", int5 == (-1));
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node9);
    }

    @Test
    public void test1935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1935");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree28.find((int) 'a');
        int int33 = aVLTree28.height();
        aVLTree28.delete(1);
        aVLTree28.insert((int) 'a');
        aVLTree28.insert((int) '#');
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        int int43 = aVLTree40.height();
        int int44 = aVLTree40.height();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node46 = null;
        int int47 = aVLTree45.getBalance(node46);
        aVLTree45.insert((int) (byte) 100);
        aVLTree45.insert((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree45.find((int) (byte) 100);
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        aVLTree54.delete((int) 'a');
        avltree.AVLTree.Node node59 = aVLTree54.getRoot();
        aVLTree54.delete(0);
        avltree.AVLTree.Node node62 = null;
        int int63 = aVLTree54.getBalance(node62);
        int int64 = aVLTree54.height();
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node67 = aVLTree65.find((int) '4');
        avltree.AVLTree.Node node68 = aVLTree65.getRoot();
        aVLTree65.delete(100);
        aVLTree65.insert((int) (byte) 10);
        avltree.AVLTree.Node node73 = aVLTree65.getRoot();
        int int74 = aVLTree54.getBalance(node73);
        int int75 = aVLTree45.getBalance(node73);
        int int76 = aVLTree40.getBalance(node73);
        int int77 = aVLTree28.getBalance(node73);
        int int78 = aVLTree0.getBalance(node73);
        aVLTree0.insert(0);
        int int81 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test1936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1936");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = null;
        int int8 = aVLTree6.getBalance(node7);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = aVLTree9.getRoot();
        aVLTree9.insert((int) (byte) 100);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree15.getBalance(node18);
        aVLTree15.insert((int) (short) 100);
        avltree.AVLTree.Node node23 = aVLTree15.find((int) ' ');
        int int24 = aVLTree15.height();
        avltree.AVLTree.Node node25 = aVLTree15.getRoot();
        int int26 = aVLTree9.getBalance(node25);
        int int27 = aVLTree6.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree6.find((int) 'a');
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        aVLTree30.delete((int) 'a');
        aVLTree30.delete(1);
        aVLTree30.delete((int) '#');
        aVLTree30.delete((int) (short) -1);
        avltree.AVLTree.Node node41 = aVLTree30.getRoot();
        aVLTree30.insert(10);
        aVLTree30.delete(1);
        avltree.AVLTree.Node node46 = aVLTree30.getRoot();
        int int47 = aVLTree30.height();
        aVLTree30.delete((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree30.getRoot();
        int int51 = aVLTree6.getBalance(node50);
        int int52 = aVLTree0.getBalance(node50);
        avltree.AVLTree aVLTree53 = new avltree.AVLTree();
        avltree.AVLTree.Node node55 = aVLTree53.find((int) '4');
        avltree.AVLTree.Node node56 = aVLTree53.getRoot();
        aVLTree53.delete(100);
        aVLTree53.insert((int) (byte) 10);
        avltree.AVLTree.Node node61 = aVLTree53.getRoot();
        aVLTree53.insert((int) (byte) 100);
        int int64 = aVLTree53.height();
        aVLTree53.delete((int) (byte) 0);
        avltree.AVLTree.Node node68 = aVLTree53.find(0);
        int int69 = aVLTree53.height();
        aVLTree53.insert((-1));
        avltree.AVLTree aVLTree72 = new avltree.AVLTree();
        avltree.AVLTree.Node node74 = aVLTree72.find((int) '4');
        avltree.AVLTree.Node node75 = aVLTree72.getRoot();
        aVLTree72.delete(100);
        aVLTree72.insert((int) (byte) 10);
        avltree.AVLTree.Node node80 = aVLTree72.getRoot();
        aVLTree72.insert((int) (byte) 100);
        int int83 = aVLTree72.height();
        avltree.AVLTree.Node node85 = aVLTree72.find((int) (byte) -1);
        aVLTree72.insert((-1));
        int int88 = aVLTree72.height();
        avltree.AVLTree.Node node89 = aVLTree72.getRoot();
        int int90 = aVLTree53.getBalance(node89);
        avltree.AVLTree.Node node91 = aVLTree53.getRoot();
        int int92 = aVLTree0.getBalance(node91);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNotNull(node61);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 1 + "'", int64 == 1);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNull(node74);
        org.junit.Assert.assertNull(node75);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 1 + "'", int83 == 1);
        org.junit.Assert.assertNull(node85);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 1 + "'", int88 == 1);
        org.junit.Assert.assertNotNull(node89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 0 + "'", int90 == 0);
        org.junit.Assert.assertNotNull(node91);
        org.junit.Assert.assertTrue("'" + int92 + "' != '" + 0 + "'", int92 == 0);
    }

    @Test
    public void test1937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1937");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find(0);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        aVLTree9.delete(1);
        aVLTree9.delete((int) '#');
        aVLTree9.delete((int) (short) -1);
        avltree.AVLTree.Node node20 = aVLTree9.getRoot();
        avltree.AVLTree.Node node22 = aVLTree9.find((int) (byte) 100);
        int int23 = aVLTree9.height();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        aVLTree24.insert((int) (byte) 100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree30.find((int) 'a');
        aVLTree30.delete((int) (short) 10);
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        aVLTree37.insert((int) (byte) 100);
        aVLTree37.insert((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree37.find((int) (byte) 100);
        int int46 = aVLTree30.getBalance(node45);
        int int47 = aVLTree24.getBalance(node45);
        int int48 = aVLTree9.getBalance(node45);
        int int49 = aVLTree0.getBalance(node45);
        avltree.AVLTree.Node node51 = aVLTree0.find(0);
        int int52 = aVLTree0.height();
        int int53 = aVLTree0.height();
        avltree.AVLTree.Node node54 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node54);
    }

    @Test
    public void test1938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1938");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.insert((int) (short) 1);
        aVLTree0.insert((int) '#');
        aVLTree0.delete(10);
        aVLTree0.delete((int) (byte) 10);
        aVLTree0.delete((int) (byte) 0);
        org.junit.Assert.assertNull(node2);
    }

    @Test
    public void test1939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1939");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) '4');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + (-1) + "'", int9 == (-1));
    }

    @Test
    public void test1940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1940");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((-1));
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
    }

    @Test
    public void test1941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1941");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree aVLTree1 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = null;
        int int3 = aVLTree1.getBalance(node2);
        aVLTree1.insert((int) (byte) 100);
        aVLTree1.insert((int) 'a');
        avltree.AVLTree.Node node9 = aVLTree1.find((int) (byte) 100);
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        int int31 = aVLTree1.getBalance(node29);
        avltree.AVLTree.Node node32 = aVLTree1.getRoot();
        avltree.AVLTree.Node node33 = aVLTree1.getRoot();
        int int34 = aVLTree0.getBalance(node33);
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree35.getRoot();
        aVLTree35.insert((int) (byte) 100);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node43 = aVLTree41.find((int) '4');
        avltree.AVLTree.Node node44 = null;
        int int45 = aVLTree41.getBalance(node44);
        aVLTree41.insert((int) (short) 100);
        avltree.AVLTree.Node node49 = aVLTree41.find((int) ' ');
        int int50 = aVLTree41.height();
        avltree.AVLTree.Node node51 = aVLTree41.getRoot();
        int int52 = aVLTree35.getBalance(node51);
        avltree.AVLTree.Node node54 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node55 = aVLTree35.getRoot();
        int int56 = aVLTree0.getBalance(node55);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertNotNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test1942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1942");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree.Node node29 = aVLTree0.find((int) (short) 0);
        aVLTree0.delete((int) (short) 0);
        avltree.AVLTree.Node node33 = aVLTree0.find(0);
        int int34 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
    }

    @Test
    public void test1943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1943");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        int int7 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.find((-1));
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree12.getBalance(node15);
        aVLTree12.insert((int) (short) 100);
        avltree.AVLTree.Node node20 = aVLTree12.find((int) ' ');
        int int21 = aVLTree12.height();
        aVLTree12.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree12.find((-1));
        int int26 = aVLTree12.height();
        int int27 = aVLTree12.height();
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree28.getRoot();
        aVLTree28.insert((int) (byte) 100);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree34.find((int) 'a');
        aVLTree34.delete((int) (short) 10);
        avltree.AVLTree aVLTree41 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = null;
        int int43 = aVLTree41.getBalance(node42);
        aVLTree41.insert((int) (byte) 100);
        aVLTree41.insert((int) 'a');
        avltree.AVLTree.Node node49 = aVLTree41.find((int) (byte) 100);
        int int50 = aVLTree34.getBalance(node49);
        int int51 = aVLTree28.getBalance(node49);
        int int52 = aVLTree12.getBalance(node49);
        int int53 = aVLTree0.getBalance(node49);
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.delete(100);
        aVLTree54.insert((int) (byte) 10);
        avltree.AVLTree.Node node62 = aVLTree54.getRoot();
        int int63 = aVLTree0.getBalance(node62);
        java.lang.Class<?> wildcardClass64 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test1944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1944");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree8.getRoot();
        aVLTree8.delete(100);
        aVLTree8.insert((int) (byte) 10);
        avltree.AVLTree.Node node16 = aVLTree8.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree20.find((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree20.find((int) ' ');
        aVLTree20.delete((int) '4');
        avltree.AVLTree.Node node30 = aVLTree20.find((-1));
        avltree.AVLTree.Node node32 = aVLTree20.find((int) (byte) -1);
        int int33 = aVLTree20.height();
        int int34 = aVLTree20.height();
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        aVLTree35.delete((int) 'a');
        avltree.AVLTree.Node node40 = aVLTree35.getRoot();
        aVLTree35.delete(0);
        avltree.AVLTree.Node node43 = null;
        int int44 = aVLTree35.getBalance(node43);
        avltree.AVLTree.Node node45 = null;
        int int46 = aVLTree35.getBalance(node45);
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node51 = aVLTree47.find((int) 'a');
        avltree.AVLTree.Node node52 = aVLTree47.getRoot();
        aVLTree47.delete((int) (short) 10);
        avltree.AVLTree.Node node55 = aVLTree47.getRoot();
        avltree.AVLTree.Node node56 = aVLTree47.getRoot();
        avltree.AVLTree aVLTree57 = new avltree.AVLTree();
        avltree.AVLTree.Node node58 = null;
        int int59 = aVLTree57.getBalance(node58);
        aVLTree57.insert((int) (byte) 100);
        aVLTree57.insert((int) 'a');
        avltree.AVLTree.Node node65 = aVLTree57.find((int) (byte) 100);
        int int66 = aVLTree47.getBalance(node65);
        int int67 = aVLTree35.getBalance(node65);
        aVLTree35.delete((int) (short) 10);
        avltree.AVLTree aVLTree70 = new avltree.AVLTree();
        avltree.AVLTree.Node node71 = null;
        int int72 = aVLTree70.getBalance(node71);
        aVLTree70.insert((int) (byte) 100);
        aVLTree70.insert((int) 'a');
        avltree.AVLTree.Node node78 = aVLTree70.find((int) (byte) 100);
        avltree.AVLTree.Node node79 = aVLTree70.getRoot();
        avltree.AVLTree.Node node80 = aVLTree70.getRoot();
        int int81 = aVLTree35.getBalance(node80);
        int int82 = aVLTree20.getBalance(node80);
        int int83 = aVLTree0.getBalance(node80);
        avltree.AVLTree.Node node85 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNull(node55);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(node78);
        org.junit.Assert.assertNotNull(node79);
        org.junit.Assert.assertNotNull(node80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + (-1) + "'", int81 == (-1));
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + (-1) + "'", int83 == (-1));
        org.junit.Assert.assertNull(node85);
    }

    @Test
    public void test1945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1945");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (short) 0);
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree5.getBalance(node8);
        aVLTree5.insert(0);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree12.getBalance(node13);
        aVLTree12.insert((int) (byte) 100);
        aVLTree12.insert((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree12.getRoot();
        int int20 = aVLTree5.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        avltree.AVLTree.Node node23 = aVLTree0.find((int) (short) 100);
        java.lang.Class<?> wildcardClass24 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test1946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1946");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find((-1));
        int int14 = aVLTree0.height();
        int int15 = aVLTree0.height();
        int int16 = aVLTree0.height();
        aVLTree0.delete((int) (short) 10);
        aVLTree0.delete((int) '4');
        int int21 = aVLTree0.height();
        aVLTree0.insert(10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 1 + "'", int15 == 1);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 1 + "'", int16 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
    }

    @Test
    public void test1947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1947");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        aVLTree26.delete((int) 'a');
        avltree.AVLTree.Node node31 = aVLTree26.getRoot();
        aVLTree26.delete(0);
        avltree.AVLTree.Node node34 = null;
        int int35 = aVLTree26.getBalance(node34);
        int int36 = aVLTree26.height();
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node39 = aVLTree37.find((int) '4');
        avltree.AVLTree.Node node40 = aVLTree37.getRoot();
        aVLTree37.delete(100);
        aVLTree37.insert((int) (byte) 10);
        avltree.AVLTree.Node node45 = aVLTree37.getRoot();
        int int46 = aVLTree26.getBalance(node45);
        int int47 = aVLTree17.getBalance(node45);
        avltree.AVLTree.Node node48 = aVLTree17.getRoot();
        avltree.AVLTree.Node node49 = aVLTree17.getRoot();
        int int50 = aVLTree0.getBalance(node49);
        avltree.AVLTree.Node node52 = aVLTree0.find((int) 'a');
        java.lang.Class<?> wildcardClass53 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node48);
        org.junit.Assert.assertNotNull(node49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNull(node52);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test1948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1948");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree31.find((int) 'a');
        int int36 = aVLTree31.height();
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        avltree.AVLTree.Node node40 = aVLTree37.getRoot();
        aVLTree37.insert((int) (byte) 100);
        avltree.AVLTree aVLTree43 = new avltree.AVLTree();
        avltree.AVLTree.Node node45 = aVLTree43.find((int) '4');
        aVLTree43.delete((int) 'a');
        avltree.AVLTree.Node node48 = aVLTree43.getRoot();
        aVLTree43.delete(0);
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree43.getBalance(node51);
        int int53 = aVLTree43.height();
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        avltree.AVLTree.Node node57 = aVLTree54.getRoot();
        aVLTree54.delete(100);
        aVLTree54.insert((int) (byte) 10);
        avltree.AVLTree.Node node62 = aVLTree54.getRoot();
        int int63 = aVLTree43.getBalance(node62);
        int int64 = aVLTree37.getBalance(node62);
        int int65 = aVLTree31.getBalance(node62);
        int int66 = aVLTree0.getBalance(node62);
        avltree.AVLTree.Node node67 = aVLTree0.getRoot();
        avltree.AVLTree.Node node69 = aVLTree0.find((int) ' ');
        int int70 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + (-1) + "'", int53 == (-1));
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNotNull(node62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test1949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1949");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.delete((int) (byte) -1);
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree5.getBalance(node8);
        aVLTree5.insert((int) (short) 100);
        avltree.AVLTree.Node node13 = aVLTree5.find((int) ' ');
        int int14 = aVLTree5.height();
        aVLTree5.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree5.find((-1));
        int int19 = aVLTree5.height();
        int int20 = aVLTree5.height();
        int int21 = aVLTree5.height();
        aVLTree5.delete((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree5.find((int) (short) 100);
        int int26 = aVLTree0.getBalance(node25);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 1 + "'", int19 == 1);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 1 + "'", int21 == 1);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test1950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1950");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((-1));
        aVLTree9.delete(100);
        aVLTree9.insert((int) (short) 1);
        avltree.AVLTree.Node node16 = aVLTree9.getRoot();
        avltree.AVLTree.Node node17 = aVLTree9.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test1951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1951");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node10 = aVLTree0.find((-1));
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node14);
    }

    @Test
    public void test1952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1952");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree aVLTree5 = new avltree.AVLTree();
        avltree.AVLTree.Node node7 = aVLTree5.find((int) '4');
        avltree.AVLTree.Node node8 = aVLTree5.getRoot();
        aVLTree5.insert((int) (byte) 100);
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree11.getBalance(node14);
        aVLTree11.insert((int) (short) 100);
        avltree.AVLTree.Node node19 = aVLTree11.find((int) ' ');
        int int20 = aVLTree11.height();
        avltree.AVLTree.Node node21 = aVLTree11.getRoot();
        int int22 = aVLTree5.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        avltree.AVLTree.Node node25 = aVLTree0.find((int) (byte) -1);
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node28 = aVLTree0.getRoot();
        aVLTree0.delete((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNotNull(node28);
    }

    @Test
    public void test1953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1953");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        aVLTree0.delete(100);
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree0.getBalance(node13);
        aVLTree0.delete((int) (byte) 1);
        int int17 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
    }

    @Test
    public void test1954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1954");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find(0);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        aVLTree9.delete((int) 'a');
        aVLTree9.delete(1);
        aVLTree9.delete((int) '#');
        aVLTree9.delete((int) (short) -1);
        avltree.AVLTree.Node node20 = aVLTree9.getRoot();
        avltree.AVLTree.Node node22 = aVLTree9.find((int) (byte) 100);
        int int23 = aVLTree9.height();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        aVLTree24.insert((int) (byte) 100);
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node34 = aVLTree30.find((int) 'a');
        aVLTree30.delete((int) (short) 10);
        avltree.AVLTree aVLTree37 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = null;
        int int39 = aVLTree37.getBalance(node38);
        aVLTree37.insert((int) (byte) 100);
        aVLTree37.insert((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree37.find((int) (byte) 100);
        int int46 = aVLTree30.getBalance(node45);
        int int47 = aVLTree24.getBalance(node45);
        int int48 = aVLTree9.getBalance(node45);
        int int49 = aVLTree0.getBalance(node45);
        avltree.AVLTree.Node node50 = aVLTree0.getRoot();
        avltree.AVLTree.Node node51 = aVLTree0.getRoot();
        aVLTree0.delete((int) ' ');
        avltree.AVLTree.Node node55 = aVLTree0.find((int) (short) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node55);
    }

    @Test
    public void test1955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1955");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree.Node node13 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree0.find((int) (byte) 100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node19);
    }

    @Test
    public void test1956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1956");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        aVLTree21.delete((int) 'a');
        avltree.AVLTree.Node node26 = aVLTree21.getRoot();
        aVLTree21.delete(0);
        avltree.AVLTree.Node node29 = null;
        int int30 = aVLTree21.getBalance(node29);
        int int31 = aVLTree21.height();
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree21.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        aVLTree0.delete((int) (byte) 100);
        aVLTree0.insert((int) ' ');
        avltree.AVLTree.Node node48 = aVLTree0.find((int) (short) 1);
        aVLTree0.delete((int) '#');
        int int51 = aVLTree0.height();
        avltree.AVLTree.Node node53 = aVLTree0.find(1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(node53);
    }

    @Test
    public void test1957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1957");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find(100);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        aVLTree10.delete((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree10.getRoot();
        aVLTree10.delete(0);
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree10.getBalance(node18);
        int int20 = aVLTree10.height();
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = aVLTree21.getRoot();
        aVLTree21.delete(100);
        aVLTree21.insert((int) (byte) 10);
        avltree.AVLTree.Node node29 = aVLTree21.getRoot();
        int int30 = aVLTree10.getBalance(node29);
        avltree.AVLTree aVLTree31 = new avltree.AVLTree();
        avltree.AVLTree.Node node33 = aVLTree31.find((int) '4');
        aVLTree31.delete((int) 'a');
        avltree.AVLTree.Node node36 = aVLTree31.getRoot();
        aVLTree31.delete(0);
        avltree.AVLTree.Node node39 = null;
        int int40 = aVLTree31.getBalance(node39);
        int int41 = aVLTree31.height();
        avltree.AVLTree aVLTree42 = new avltree.AVLTree();
        avltree.AVLTree.Node node44 = aVLTree42.find((int) '4');
        avltree.AVLTree.Node node45 = aVLTree42.getRoot();
        aVLTree42.delete(100);
        aVLTree42.insert((int) (byte) 10);
        avltree.AVLTree.Node node50 = aVLTree42.getRoot();
        int int51 = aVLTree31.getBalance(node50);
        int int52 = aVLTree10.getBalance(node50);
        int int53 = aVLTree0.getBalance(node50);
        aVLTree0.insert(100);
        avltree.AVLTree.Node node57 = aVLTree0.find(2);
        aVLTree0.delete((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node44);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNotNull(node50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNull(node57);
    }

    @Test
    public void test1958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1958");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) '#');
        int int9 = aVLTree0.height();
        avltree.AVLTree.Node node11 = aVLTree0.find((int) (short) 100);
        avltree.AVLTree.Node node13 = aVLTree0.find(1);
        avltree.AVLTree.Node node14 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNotNull(node14);
    }

    @Test
    public void test1959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1959");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.insert((int) (short) 1);
        aVLTree0.insert((int) '#');
        aVLTree0.delete(10);
        aVLTree0.delete((int) (byte) 10);
        int int13 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test1960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1960");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 1);
        aVLTree0.delete(0);
        int int13 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
    }

    @Test
    public void test1961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1961");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node10 = aVLTree0.find((-1));
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        avltree.AVLTree.Node node14 = aVLTree0.find(2);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        avltree.AVLTree.Node node18 = aVLTree15.getRoot();
        aVLTree15.insert((int) (byte) 100);
        avltree.AVLTree aVLTree21 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = aVLTree21.find((int) '4');
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree21.getBalance(node24);
        aVLTree21.insert((int) (short) 100);
        avltree.AVLTree.Node node29 = aVLTree21.find((int) ' ');
        int int30 = aVLTree21.height();
        avltree.AVLTree.Node node31 = aVLTree21.getRoot();
        int int32 = aVLTree15.getBalance(node31);
        avltree.AVLTree.Node node34 = aVLTree15.find((int) '4');
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((-1));
        int int38 = aVLTree35.height();
        avltree.AVLTree.Node node40 = aVLTree35.find((int) (byte) 100);
        aVLTree35.insert(0);
        avltree.AVLTree.Node node43 = aVLTree35.getRoot();
        int int44 = aVLTree15.getBalance(node43);
        aVLTree15.insert((int) (byte) 1);
        avltree.AVLTree.Node node47 = aVLTree15.getRoot();
        int int48 = aVLTree0.getBalance(node47);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
    }

    @Test
    public void test1962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1962");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        aVLTree7.delete(0);
        avltree.AVLTree.Node node15 = null;
        int int16 = aVLTree7.getBalance(node15);
        int int17 = aVLTree7.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node20 = aVLTree18.find((int) '4');
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.delete(100);
        aVLTree18.insert((int) (byte) 10);
        avltree.AVLTree.Node node26 = aVLTree18.getRoot();
        int int27 = aVLTree7.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        aVLTree28.delete((int) 'a');
        avltree.AVLTree.Node node33 = aVLTree28.getRoot();
        aVLTree28.delete(0);
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree28.getBalance(node36);
        int int38 = aVLTree28.height();
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node42 = aVLTree39.getRoot();
        aVLTree39.delete(100);
        aVLTree39.insert((int) (byte) 10);
        avltree.AVLTree.Node node47 = aVLTree39.getRoot();
        int int48 = aVLTree28.getBalance(node47);
        int int49 = aVLTree7.getBalance(node47);
        int int50 = aVLTree0.getBalance(node47);
        aVLTree0.delete(0);
        aVLTree0.delete((int) ' ');
        int int55 = aVLTree0.height();
        aVLTree0.insert(100);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertNotNull(node47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
    }

    @Test
    public void test1963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1963");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        int int17 = aVLTree0.height();
        aVLTree0.insert(1);
        avltree.AVLTree.Node node20 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(node20);
    }

    @Test
    public void test1964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1964");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 1);
        avltree.AVLTree.Node node15 = aVLTree0.find(10);
        int int16 = aVLTree0.height();
        int int17 = aVLTree0.height();
        avltree.AVLTree.Node node19 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNull(node19);
    }

    @Test
    public void test1965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1965");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree17.getBalance(node20);
        aVLTree17.insert((int) (short) 100);
        avltree.AVLTree.Node node25 = aVLTree17.find((int) ' ');
        int int26 = aVLTree17.height();
        avltree.AVLTree.Node node27 = aVLTree17.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node31 = aVLTree0.find((int) (byte) 100);
        avltree.AVLTree.Node node32 = aVLTree0.getRoot();
        avltree.AVLTree.Node node34 = aVLTree0.find((int) '#');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
    }

    @Test
    public void test1966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1966");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) (short) 100);
        avltree.AVLTree.Node node8 = aVLTree0.find((int) ' ');
        int int9 = aVLTree0.height();
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        int int22 = aVLTree11.height();
        aVLTree11.delete((int) (byte) 0);
        avltree.AVLTree.Node node26 = aVLTree11.find(0);
        int int27 = aVLTree11.height();
        avltree.AVLTree.Node node29 = aVLTree11.find((int) (short) 10);
        int int30 = aVLTree0.getBalance(node29);
        avltree.AVLTree.Node node32 = aVLTree0.find((-1));
        int int33 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 1 + "'", int22 == 1);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNotNull(node29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test1967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1967");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        int int10 = aVLTree0.height();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.delete(100);
        aVLTree11.insert((int) (byte) 10);
        avltree.AVLTree.Node node19 = aVLTree11.getRoot();
        int int20 = aVLTree0.getBalance(node19);
        aVLTree0.insert(0);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((-1));
        int int26 = aVLTree23.height();
        avltree.AVLTree.Node node28 = aVLTree23.find((int) (byte) 100);
        aVLTree23.insert(0);
        avltree.AVLTree.Node node31 = aVLTree23.getRoot();
        int int32 = aVLTree0.getBalance(node31);
        avltree.AVLTree.Node node34 = aVLTree0.find((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(node34);
    }

    @Test
    public void test1968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1968");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        avltree.AVLTree.Node node20 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) 'a');
        int int23 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test1969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1969");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree12.find((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        aVLTree12.delete((int) (short) 10);
        avltree.AVLTree.Node node20 = aVLTree12.getRoot();
        avltree.AVLTree.Node node21 = aVLTree12.getRoot();
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree22.getBalance(node23);
        aVLTree22.insert((int) (byte) 100);
        aVLTree22.insert((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree22.find((int) (byte) 100);
        int int31 = aVLTree12.getBalance(node30);
        int int32 = aVLTree0.getBalance(node30);
        int int33 = aVLTree0.height();
        avltree.AVLTree.Node node34 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node37 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNotNull(node37);
    }

    @Test
    public void test1970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1970");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) (byte) 1);
        aVLTree0.insert((int) (byte) -1);
        java.lang.Class<?> wildcardClass13 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test1971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1971");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree7.getBalance(node10);
        aVLTree7.insert((int) (short) 100);
        avltree.AVLTree.Node node15 = aVLTree7.find((int) ' ');
        int int16 = aVLTree7.height();
        avltree.AVLTree.Node node17 = aVLTree7.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        aVLTree19.delete(100);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree19.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        java.lang.Class<?> wildcardClass43 = aVLTree0.getClass();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test1972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1972");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        aVLTree0.delete(100);
        avltree.AVLTree.Node node6 = aVLTree0.find((int) '#');
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        aVLTree7.delete((int) 'a');
        avltree.AVLTree.Node node12 = aVLTree7.getRoot();
        avltree.AVLTree.Node node13 = null;
        int int14 = aVLTree7.getBalance(node13);
        avltree.AVLTree.Node node16 = aVLTree7.find((int) ' ');
        aVLTree7.insert((-1));
        avltree.AVLTree.Node node19 = aVLTree7.getRoot();
        int int20 = aVLTree7.height();
        avltree.AVLTree.Node node22 = aVLTree7.find((int) (short) -1);
        aVLTree7.insert((int) ' ');
        avltree.AVLTree.Node node25 = aVLTree7.getRoot();
        int int26 = aVLTree0.getBalance(node25);
        int int27 = aVLTree0.height();
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree28.getRoot();
        aVLTree28.delete(100);
        aVLTree28.insert((int) (byte) 10);
        avltree.AVLTree.Node node36 = aVLTree28.getRoot();
        aVLTree28.insert((int) (byte) 100);
        int int39 = aVLTree28.height();
        aVLTree28.delete((int) (byte) 0);
        avltree.AVLTree.Node node43 = aVLTree28.find(0);
        int int44 = aVLTree28.height();
        aVLTree28.insert((-1));
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node50 = aVLTree47.getRoot();
        aVLTree47.delete(100);
        aVLTree47.insert((int) (byte) 10);
        avltree.AVLTree.Node node55 = aVLTree47.getRoot();
        aVLTree47.insert((int) (byte) 100);
        int int58 = aVLTree47.height();
        avltree.AVLTree.Node node60 = aVLTree47.find((int) (byte) -1);
        aVLTree47.insert((-1));
        int int63 = aVLTree47.height();
        avltree.AVLTree.Node node64 = aVLTree47.getRoot();
        int int65 = aVLTree28.getBalance(node64);
        avltree.AVLTree.Node node66 = aVLTree28.getRoot();
        int int67 = aVLTree0.getBalance(node66);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(node22);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 1 + "'", int26 == 1);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNotNull(node36);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 1 + "'", int39 == 1);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 1 + "'", int44 == 1);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(node66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test1973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1973");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node10 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree11 = new avltree.AVLTree();
        avltree.AVLTree.Node node13 = aVLTree11.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree11.getRoot();
        aVLTree11.insert((int) (byte) 100);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = aVLTree17.find((int) '4');
        avltree.AVLTree.Node node20 = null;
        int int21 = aVLTree17.getBalance(node20);
        aVLTree17.insert((int) (short) 100);
        avltree.AVLTree.Node node25 = aVLTree17.find((int) ' ');
        int int26 = aVLTree17.height();
        avltree.AVLTree.Node node27 = aVLTree17.getRoot();
        int int28 = aVLTree11.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        avltree.AVLTree.Node node30 = aVLTree0.getRoot();
        avltree.AVLTree.Node node32 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
    }

    @Test
    public void test1974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1974");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        aVLTree0.insert((int) (byte) 100);
        aVLTree0.insert((int) 'a');
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree7.getBalance(node10);
        aVLTree7.insert((int) (short) 100);
        avltree.AVLTree.Node node15 = aVLTree7.find((int) ' ');
        int int16 = aVLTree7.height();
        avltree.AVLTree.Node node17 = aVLTree7.getRoot();
        int int18 = aVLTree0.getBalance(node17);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        aVLTree19.delete(100);
        avltree.AVLTree aVLTree32 = new avltree.AVLTree();
        avltree.AVLTree.Node node34 = aVLTree32.find((int) '4');
        avltree.AVLTree.Node node35 = aVLTree32.getRoot();
        aVLTree32.delete(100);
        aVLTree32.insert((int) (byte) 10);
        avltree.AVLTree.Node node40 = aVLTree32.getRoot();
        int int41 = aVLTree19.getBalance(node40);
        int int42 = aVLTree0.getBalance(node40);
        avltree.AVLTree.Node node43 = aVLTree0.getRoot();
        aVLTree0.delete((int) '#');
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(node43);
    }

    @Test
    public void test1975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1975");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.insert((int) (byte) 10);
        avltree.AVLTree.Node node8 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        int int11 = aVLTree0.height();
        aVLTree0.delete((int) (byte) 0);
        avltree.AVLTree aVLTree14 = new avltree.AVLTree();
        avltree.AVLTree.Node node16 = aVLTree14.find((int) '4');
        aVLTree14.delete((int) 'a');
        avltree.AVLTree.Node node19 = aVLTree14.getRoot();
        aVLTree14.delete(0);
        avltree.AVLTree.Node node22 = null;
        int int23 = aVLTree14.getBalance(node22);
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree14.getBalance(node24);
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        avltree.AVLTree.Node node30 = aVLTree26.find((int) 'a');
        avltree.AVLTree.Node node31 = aVLTree26.getRoot();
        aVLTree26.delete((int) (short) 10);
        avltree.AVLTree.Node node34 = aVLTree26.getRoot();
        avltree.AVLTree.Node node35 = aVLTree26.getRoot();
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree36.getBalance(node37);
        aVLTree36.insert((int) (byte) 100);
        aVLTree36.insert((int) 'a');
        avltree.AVLTree.Node node44 = aVLTree36.find((int) (byte) 100);
        int int45 = aVLTree26.getBalance(node44);
        int int46 = aVLTree14.getBalance(node44);
        int int47 = aVLTree0.getBalance(node44);
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.insert(2);
        avltree.AVLTree.Node node52 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNotNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(node52);
    }

    @Test
    public void test1976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1976");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) 0);
        aVLTree0.insert((int) (byte) 1);
        int int11 = aVLTree0.height();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node15 = aVLTree12.getRoot();
        aVLTree12.delete(100);
        aVLTree12.delete((int) (short) -1);
        avltree.AVLTree aVLTree20 = new avltree.AVLTree();
        avltree.AVLTree.Node node22 = aVLTree20.find((int) '4');
        aVLTree20.insert((int) (short) 0);
        avltree.AVLTree.Node node26 = aVLTree20.find(100);
        avltree.AVLTree aVLTree27 = new avltree.AVLTree();
        avltree.AVLTree.Node node29 = aVLTree27.find((int) '4');
        aVLTree27.delete((int) 'a');
        avltree.AVLTree.Node node32 = aVLTree27.getRoot();
        aVLTree27.delete(0);
        avltree.AVLTree.Node node35 = null;
        int int36 = aVLTree27.getBalance(node35);
        int int37 = aVLTree27.height();
        avltree.AVLTree aVLTree38 = new avltree.AVLTree();
        avltree.AVLTree.Node node40 = aVLTree38.find((int) '4');
        avltree.AVLTree.Node node41 = aVLTree38.getRoot();
        aVLTree38.delete(100);
        aVLTree38.insert((int) (byte) 10);
        avltree.AVLTree.Node node46 = aVLTree38.getRoot();
        int int47 = aVLTree27.getBalance(node46);
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        aVLTree48.delete((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree48.getRoot();
        aVLTree48.delete(0);
        avltree.AVLTree.Node node56 = null;
        int int57 = aVLTree48.getBalance(node56);
        int int58 = aVLTree48.height();
        avltree.AVLTree aVLTree59 = new avltree.AVLTree();
        avltree.AVLTree.Node node61 = aVLTree59.find((int) '4');
        avltree.AVLTree.Node node62 = aVLTree59.getRoot();
        aVLTree59.delete(100);
        aVLTree59.insert((int) (byte) 10);
        avltree.AVLTree.Node node67 = aVLTree59.getRoot();
        int int68 = aVLTree48.getBalance(node67);
        int int69 = aVLTree27.getBalance(node67);
        int int70 = aVLTree20.getBalance(node67);
        int int71 = aVLTree12.getBalance(node67);
        aVLTree12.insert(1);
        int int74 = aVLTree12.height();
        avltree.AVLTree.Node node75 = aVLTree12.getRoot();
        int int76 = aVLTree0.getBalance(node75);
        aVLTree0.insert((int) (short) 100);
        aVLTree0.delete((int) ' ');
        aVLTree0.insert((int) (short) 10);
        java.lang.Class<?> wildcardClass83 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNull(node40);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNotNull(node46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNull(node61);
        org.junit.Assert.assertNull(node62);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(node75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(wildcardClass83);
    }

    @Test
    public void test1977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1977");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node10 = aVLTree6.find((int) 'a');
        aVLTree6.delete((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree13.getBalance(node14);
        aVLTree13.insert((int) (byte) 100);
        aVLTree13.insert((int) 'a');
        avltree.AVLTree.Node node21 = aVLTree13.find((int) (byte) 100);
        int int22 = aVLTree6.getBalance(node21);
        int int23 = aVLTree0.getBalance(node21);
        avltree.AVLTree.Node node24 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree25 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = null;
        int int27 = aVLTree25.getBalance(node26);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node31 = aVLTree28.getRoot();
        aVLTree28.insert((int) (byte) 100);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree34.getBalance(node37);
        aVLTree34.insert((int) (short) 100);
        avltree.AVLTree.Node node42 = aVLTree34.find((int) ' ');
        int int43 = aVLTree34.height();
        avltree.AVLTree.Node node44 = aVLTree34.getRoot();
        int int45 = aVLTree28.getBalance(node44);
        int int46 = aVLTree25.getBalance(node44);
        avltree.AVLTree.Node node48 = aVLTree25.find((int) 'a');
        avltree.AVLTree aVLTree49 = new avltree.AVLTree();
        avltree.AVLTree.Node node51 = aVLTree49.find((int) '4');
        aVLTree49.delete((int) 'a');
        aVLTree49.delete(1);
        aVLTree49.delete((int) '#');
        aVLTree49.delete((int) (short) -1);
        avltree.AVLTree.Node node60 = aVLTree49.getRoot();
        aVLTree49.insert(10);
        aVLTree49.delete(1);
        avltree.AVLTree.Node node65 = aVLTree49.getRoot();
        int int66 = aVLTree49.height();
        aVLTree49.delete((int) 'a');
        avltree.AVLTree.Node node69 = aVLTree49.getRoot();
        int int70 = aVLTree25.getBalance(node69);
        int int71 = aVLTree0.getBalance(node69);
        int int72 = aVLTree0.height();
        avltree.AVLTree.Node node74 = aVLTree0.find(10);
        aVLTree0.delete((int) (byte) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(node24);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNull(node60);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(node69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNull(node74);
    }

    @Test
    public void test1978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1978");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.delete((int) (byte) -1);
        int int12 = aVLTree7.height();
        int int13 = aVLTree7.height();
        avltree.AVLTree.Node node15 = aVLTree7.find((int) '#');
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        avltree.AVLTree.Node node20 = aVLTree16.find((int) 'a');
        aVLTree16.delete((int) (short) 10);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node24 = null;
        int int25 = aVLTree23.getBalance(node24);
        aVLTree23.insert((int) (byte) 100);
        aVLTree23.insert((int) 'a');
        avltree.AVLTree.Node node31 = aVLTree23.find((int) (byte) 100);
        int int32 = aVLTree16.getBalance(node31);
        int int33 = aVLTree7.getBalance(node31);
        int int34 = aVLTree0.getBalance(node31);
        avltree.AVLTree.Node node36 = aVLTree0.find((int) (byte) -1);
        aVLTree0.insert((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node36);
    }

    @Test
    public void test1979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1979");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree0.getBalance(node8);
        avltree.AVLTree.Node node10 = null;
        int int11 = aVLTree0.getBalance(node10);
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree12.find((int) 'a');
        avltree.AVLTree.Node node17 = aVLTree12.getRoot();
        aVLTree12.delete((int) (short) 10);
        avltree.AVLTree.Node node20 = aVLTree12.getRoot();
        avltree.AVLTree.Node node21 = aVLTree12.getRoot();
        avltree.AVLTree aVLTree22 = new avltree.AVLTree();
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree22.getBalance(node23);
        aVLTree22.insert((int) (byte) 100);
        aVLTree22.insert((int) 'a');
        avltree.AVLTree.Node node30 = aVLTree22.find((int) (byte) 100);
        int int31 = aVLTree12.getBalance(node30);
        int int32 = aVLTree0.getBalance(node30);
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = null;
        int int37 = aVLTree35.getBalance(node36);
        aVLTree35.insert((int) (byte) 100);
        aVLTree35.insert((int) 'a');
        avltree.AVLTree.Node node43 = aVLTree35.find((int) (byte) 100);
        avltree.AVLTree.Node node44 = aVLTree35.getRoot();
        avltree.AVLTree.Node node45 = aVLTree35.getRoot();
        int int46 = aVLTree0.getBalance(node45);
        aVLTree0.insert((int) 'a');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(node30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertNotNull(node45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test1980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1980");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.insert((int) (short) 0);
        avltree.AVLTree.Node node12 = aVLTree6.find(100);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.delete((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree13.getRoot();
        aVLTree13.delete(0);
        avltree.AVLTree.Node node21 = null;
        int int22 = aVLTree13.getBalance(node21);
        int int23 = aVLTree13.height();
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        avltree.AVLTree.Node node27 = aVLTree24.getRoot();
        aVLTree24.delete(100);
        aVLTree24.insert((int) (byte) 10);
        avltree.AVLTree.Node node32 = aVLTree24.getRoot();
        int int33 = aVLTree13.getBalance(node32);
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        aVLTree34.delete((int) 'a');
        avltree.AVLTree.Node node39 = aVLTree34.getRoot();
        aVLTree34.delete(0);
        avltree.AVLTree.Node node42 = null;
        int int43 = aVLTree34.getBalance(node42);
        int int44 = aVLTree34.height();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        avltree.AVLTree.Node node48 = aVLTree45.getRoot();
        aVLTree45.delete(100);
        aVLTree45.insert((int) (byte) 10);
        avltree.AVLTree.Node node53 = aVLTree45.getRoot();
        int int54 = aVLTree34.getBalance(node53);
        int int55 = aVLTree13.getBalance(node53);
        int int56 = aVLTree6.getBalance(node53);
        int int57 = aVLTree0.getBalance(node53);
        int int58 = aVLTree0.height();
        aVLTree0.insert((int) (byte) 0);
        int int61 = aVLTree0.height();
        aVLTree0.insert((int) (short) 1);
        avltree.AVLTree.Node node65 = aVLTree0.find((int) (byte) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node27);
        org.junit.Assert.assertNotNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node39);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(node65);
    }

    @Test
    public void test1981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1981");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node1 = null;
        int int2 = aVLTree0.getBalance(node1);
        avltree.AVLTree aVLTree3 = new avltree.AVLTree();
        avltree.AVLTree.Node node5 = aVLTree3.find((int) '4');
        avltree.AVLTree.Node node6 = aVLTree3.getRoot();
        aVLTree3.insert((int) (byte) 100);
        avltree.AVLTree aVLTree9 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = aVLTree9.find((int) '4');
        avltree.AVLTree.Node node12 = null;
        int int13 = aVLTree9.getBalance(node12);
        aVLTree9.insert((int) (short) 100);
        avltree.AVLTree.Node node17 = aVLTree9.find((int) ' ');
        int int18 = aVLTree9.height();
        avltree.AVLTree.Node node19 = aVLTree9.getRoot();
        int int20 = aVLTree3.getBalance(node19);
        int int21 = aVLTree0.getBalance(node19);
        avltree.AVLTree.Node node23 = aVLTree0.find((int) 'a');
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        aVLTree24.delete(1);
        aVLTree24.delete((int) '#');
        aVLTree24.delete((int) (short) -1);
        avltree.AVLTree.Node node35 = aVLTree24.getRoot();
        aVLTree24.insert(10);
        aVLTree24.delete(1);
        avltree.AVLTree.Node node40 = aVLTree24.getRoot();
        int int41 = aVLTree24.height();
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node44 = aVLTree24.getRoot();
        int int45 = aVLTree0.getBalance(node44);
        int int46 = aVLTree0.height();
        avltree.AVLTree.Node node47 = aVLTree0.getRoot();
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(node19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNull(node23);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node35);
        org.junit.Assert.assertNotNull(node40);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(node44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(node47);
    }

    @Test
    public void test1982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1982");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = null;
        int int9 = aVLTree7.getBalance(node8);
        aVLTree7.insert((int) (byte) 100);
        aVLTree7.insert((int) 'a');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) (byte) 100);
        int int16 = aVLTree0.getBalance(node15);
        avltree.AVLTree.Node node17 = aVLTree0.getRoot();
        avltree.AVLTree.Node node18 = aVLTree0.getRoot();
        avltree.AVLTree.Node node20 = aVLTree0.find((int) 'a');
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node26 = aVLTree0.find((int) (short) 10);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertNull(node26);
    }

    @Test
    public void test1983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1983");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        aVLTree0.insert((-1));
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        int int13 = aVLTree0.height();
        avltree.AVLTree.Node node15 = aVLTree0.find((int) (short) -1);
        aVLTree0.insert((int) ' ');
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree.Node node20 = aVLTree0.getRoot();
        avltree.AVLTree.Node node22 = aVLTree0.find((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNotNull(node12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node20);
        org.junit.Assert.assertNull(node22);
    }

    @Test
    public void test1984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1984");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node4 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.find((-1));
        aVLTree0.insert(10);
        aVLTree0.insert(100);
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree0.getBalance(node11);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        aVLTree13.delete((int) 'a');
        aVLTree13.insert((int) (short) 1);
        avltree.AVLTree.Node node21 = aVLTree13.find((int) ' ');
        aVLTree13.insert((int) (short) 10);
        aVLTree13.insert(0);
        avltree.AVLTree.Node node26 = aVLTree13.getRoot();
        int int27 = aVLTree13.height();
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree28.find((int) 'a');
        avltree.AVLTree.Node node34 = aVLTree28.find((int) ' ');
        aVLTree28.delete((int) '4');
        aVLTree28.delete((int) (short) 100);
        avltree.AVLTree aVLTree39 = new avltree.AVLTree();
        avltree.AVLTree.Node node41 = aVLTree39.find((int) '4');
        avltree.AVLTree.Node node43 = aVLTree39.find((int) 'a');
        avltree.AVLTree.Node node45 = aVLTree39.find((int) ' ');
        avltree.AVLTree.Node node47 = aVLTree39.find((int) '#');
        avltree.AVLTree aVLTree48 = new avltree.AVLTree();
        avltree.AVLTree.Node node50 = aVLTree48.find((int) '4');
        avltree.AVLTree.Node node51 = null;
        int int52 = aVLTree48.getBalance(node51);
        aVLTree48.insert((int) (short) 100);
        avltree.AVLTree.Node node56 = aVLTree48.find((int) ' ');
        int int57 = aVLTree48.height();
        avltree.AVLTree.Node node58 = aVLTree48.getRoot();
        int int59 = aVLTree39.getBalance(node58);
        int int60 = aVLTree28.getBalance(node58);
        int int61 = aVLTree13.getBalance(node58);
        int int62 = aVLTree0.getBalance(node58);
        java.lang.Class<?> wildcardClass63 = aVLTree0.getClass();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 1 + "'", int27 == 1);
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node34);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertNull(node43);
        org.junit.Assert.assertNull(node45);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(node58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(wildcardClass63);
    }

    @Test
    public void test1985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1985");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node6 = aVLTree0.find((int) ' ');
        avltree.AVLTree.Node node8 = aVLTree0.find(0);
        avltree.AVLTree.Node node10 = aVLTree0.find((int) (byte) 0);
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (byte) -1);
        aVLTree0.delete((int) ' ');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node12);
    }

    @Test
    public void test1986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1986");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) (short) -1);
        int int13 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test1987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1987");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((-1));
        int int3 = aVLTree0.height();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (byte) 100);
        aVLTree0.delete((int) (short) 100);
        aVLTree0.insert((int) ' ');
        aVLTree0.delete((int) (short) 1);
        avltree.AVLTree.Node node12 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + (-1) + "'", int3 == (-1));
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNotNull(node12);
    }

    @Test
    public void test1988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1988");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree0.getBalance(node9);
        avltree.AVLTree.Node node11 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree12 = new avltree.AVLTree();
        avltree.AVLTree.Node node14 = aVLTree12.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree12.find((int) 'a');
        int int17 = aVLTree12.height();
        avltree.AVLTree aVLTree18 = new avltree.AVLTree();
        avltree.AVLTree.Node node19 = null;
        int int20 = aVLTree18.getBalance(node19);
        avltree.AVLTree.Node node21 = aVLTree18.getRoot();
        aVLTree18.insert((int) (byte) 100);
        avltree.AVLTree aVLTree24 = new avltree.AVLTree();
        avltree.AVLTree.Node node26 = aVLTree24.find((int) '4');
        aVLTree24.delete((int) 'a');
        avltree.AVLTree.Node node29 = aVLTree24.getRoot();
        aVLTree24.delete(0);
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree24.getBalance(node32);
        int int34 = aVLTree24.height();
        avltree.AVLTree aVLTree35 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = aVLTree35.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree35.getRoot();
        aVLTree35.delete(100);
        aVLTree35.insert((int) (byte) 10);
        avltree.AVLTree.Node node43 = aVLTree35.getRoot();
        int int44 = aVLTree24.getBalance(node43);
        int int45 = aVLTree18.getBalance(node43);
        int int46 = aVLTree12.getBalance(node43);
        int int47 = aVLTree0.getBalance(node43);
        aVLTree0.insert((int) (short) -1);
        avltree.AVLTree.Node node51 = aVLTree0.find((int) (short) 0);
        avltree.AVLTree.Node node52 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int55 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + (-1) + "'", int34 == (-1));
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertNotNull(node52);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test1989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1989");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node4 = aVLTree0.find((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = aVLTree0.getRoot();
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        aVLTree0.delete((int) (byte) 10);
        int int10 = aVLTree0.height();
        avltree.AVLTree.Node node12 = aVLTree0.find((int) (short) 10);
        avltree.AVLTree aVLTree13 = new avltree.AVLTree();
        avltree.AVLTree.Node node15 = aVLTree13.find((int) '4');
        avltree.AVLTree.Node node16 = aVLTree13.getRoot();
        aVLTree13.delete(100);
        aVLTree13.insert((int) (byte) 10);
        avltree.AVLTree.Node node21 = aVLTree13.getRoot();
        int int22 = aVLTree0.getBalance(node21);
        aVLTree0.delete((int) (short) 10);
        avltree.AVLTree.Node node26 = aVLTree0.find(1);
        int int27 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node4);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node6);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + (-1) + "'", int10 == (-1));
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node16);
        org.junit.Assert.assertNotNull(node21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
    }

    @Test
    public void test1990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1990");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.insert((int) (byte) 100);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        avltree.AVLTree.Node node9 = null;
        int int10 = aVLTree6.getBalance(node9);
        aVLTree6.insert((int) (short) 100);
        avltree.AVLTree.Node node14 = aVLTree6.find((int) ' ');
        int int15 = aVLTree6.height();
        avltree.AVLTree.Node node16 = aVLTree6.getRoot();
        int int17 = aVLTree0.getBalance(node16);
        avltree.AVLTree.Node node19 = aVLTree0.find((int) '4');
        aVLTree0.insert((int) (byte) -1);
        aVLTree0.delete((int) '#');
        int int24 = aVLTree0.height();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(node16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(node19);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 1 + "'", int24 == 1);
    }

    @Test
    public void test1991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1991");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        avltree.AVLTree.Node node6 = null;
        int int7 = aVLTree0.getBalance(node6);
        avltree.AVLTree.Node node9 = aVLTree0.find((int) ' ');
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node12 = aVLTree10.find((int) '4');
        avltree.AVLTree.Node node14 = aVLTree10.find((int) 'a');
        aVLTree10.delete((int) (short) 10);
        avltree.AVLTree aVLTree17 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = null;
        int int19 = aVLTree17.getBalance(node18);
        aVLTree17.insert((int) (byte) 100);
        aVLTree17.insert((int) 'a');
        avltree.AVLTree.Node node25 = aVLTree17.find((int) (byte) 100);
        int int26 = aVLTree10.getBalance(node25);
        int int27 = aVLTree0.getBalance(node25);
        avltree.AVLTree aVLTree28 = new avltree.AVLTree();
        avltree.AVLTree.Node node30 = aVLTree28.find((int) '4');
        avltree.AVLTree.Node node32 = aVLTree28.find((int) 'a');
        int int33 = aVLTree28.height();
        aVLTree28.delete(1);
        aVLTree28.insert((int) 'a');
        aVLTree28.insert((int) '#');
        avltree.AVLTree aVLTree40 = new avltree.AVLTree();
        avltree.AVLTree.Node node42 = aVLTree40.find((int) '4');
        int int43 = aVLTree40.height();
        int int44 = aVLTree40.height();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node46 = null;
        int int47 = aVLTree45.getBalance(node46);
        aVLTree45.insert((int) (byte) 100);
        aVLTree45.insert((int) 'a');
        avltree.AVLTree.Node node53 = aVLTree45.find((int) (byte) 100);
        avltree.AVLTree aVLTree54 = new avltree.AVLTree();
        avltree.AVLTree.Node node56 = aVLTree54.find((int) '4');
        aVLTree54.delete((int) 'a');
        avltree.AVLTree.Node node59 = aVLTree54.getRoot();
        aVLTree54.delete(0);
        avltree.AVLTree.Node node62 = null;
        int int63 = aVLTree54.getBalance(node62);
        int int64 = aVLTree54.height();
        avltree.AVLTree aVLTree65 = new avltree.AVLTree();
        avltree.AVLTree.Node node67 = aVLTree65.find((int) '4');
        avltree.AVLTree.Node node68 = aVLTree65.getRoot();
        aVLTree65.delete(100);
        aVLTree65.insert((int) (byte) 10);
        avltree.AVLTree.Node node73 = aVLTree65.getRoot();
        int int74 = aVLTree54.getBalance(node73);
        int int75 = aVLTree45.getBalance(node73);
        int int76 = aVLTree40.getBalance(node73);
        int int77 = aVLTree28.getBalance(node73);
        int int78 = aVLTree0.getBalance(node73);
        avltree.AVLTree aVLTree79 = new avltree.AVLTree();
        avltree.AVLTree.Node node81 = aVLTree79.find((int) '4');
        avltree.AVLTree.Node node82 = null;
        int int83 = aVLTree79.getBalance(node82);
        aVLTree79.insert((int) '4');
        avltree.AVLTree.Node node87 = aVLTree79.find((int) (short) 0);
        avltree.AVLTree.Node node89 = aVLTree79.find((int) ' ');
        aVLTree79.insert((int) (short) 100);
        avltree.AVLTree.Node node93 = aVLTree79.find((int) (short) 100);
        int int94 = aVLTree0.getBalance(node93);
        avltree.AVLTree.Node node96 = aVLTree0.find((int) ' ');
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node12);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(node25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNull(node30);
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(node53);
        org.junit.Assert.assertNull(node56);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + (-1) + "'", int64 == (-1));
        org.junit.Assert.assertNull(node67);
        org.junit.Assert.assertNull(node68);
        org.junit.Assert.assertNotNull(node73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(node81);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertNull(node87);
        org.junit.Assert.assertNull(node89);
        org.junit.Assert.assertNotNull(node93);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 0 + "'", int94 == 0);
        org.junit.Assert.assertNull(node96);
    }

    @Test
    public void test1992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1992");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        int int6 = aVLTree0.height();
        avltree.AVLTree.Node node8 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree10 = new avltree.AVLTree();
        avltree.AVLTree.Node node11 = null;
        int int12 = aVLTree10.getBalance(node11);
        aVLTree10.insert((int) (byte) 100);
        aVLTree10.insert((int) 'a');
        avltree.AVLTree.Node node18 = aVLTree10.find((int) (byte) 100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        aVLTree19.delete((int) 'a');
        avltree.AVLTree.Node node24 = aVLTree19.getRoot();
        aVLTree19.delete(0);
        avltree.AVLTree.Node node27 = null;
        int int28 = aVLTree19.getBalance(node27);
        int int29 = aVLTree19.height();
        avltree.AVLTree aVLTree30 = new avltree.AVLTree();
        avltree.AVLTree.Node node32 = aVLTree30.find((int) '4');
        avltree.AVLTree.Node node33 = aVLTree30.getRoot();
        aVLTree30.delete(100);
        aVLTree30.insert((int) (byte) 10);
        avltree.AVLTree.Node node38 = aVLTree30.getRoot();
        int int39 = aVLTree19.getBalance(node38);
        int int40 = aVLTree10.getBalance(node38);
        int int41 = aVLTree0.getBalance(node38);
        aVLTree0.insert(1);
        int int44 = aVLTree0.height();
        avltree.AVLTree aVLTree45 = new avltree.AVLTree();
        avltree.AVLTree.Node node47 = aVLTree45.find((int) '4');
        avltree.AVLTree.Node node49 = aVLTree45.find((int) 'a');
        avltree.AVLTree.Node node50 = aVLTree45.getRoot();
        avltree.AVLTree.Node node51 = aVLTree45.getRoot();
        int int52 = aVLTree45.height();
        aVLTree45.insert((int) 'a');
        aVLTree45.insert((int) (short) 100);
        avltree.AVLTree.Node node57 = aVLTree45.getRoot();
        int int58 = aVLTree0.getBalance(node57);
        int int59 = aVLTree0.height();
        avltree.AVLTree.Node node61 = aVLTree0.find(0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + (-1) + "'", int6 == (-1));
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(node18);
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNull(node32);
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNotNull(node38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(node47);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNull(node51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(node57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(node61);
    }

    @Test
    public void test1993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1993");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        avltree.AVLTree.Node node5 = aVLTree0.getRoot();
        aVLTree0.delete(0);
        aVLTree0.delete(1);
        aVLTree0.insert((int) (byte) 0);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node5);
    }

    @Test
    public void test1994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1994");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        aVLTree0.delete((int) (byte) -1);
        aVLTree0.delete((int) (byte) 0);
        aVLTree0.insert(100);
        avltree.AVLTree aVLTree7 = new avltree.AVLTree();
        avltree.AVLTree.Node node9 = aVLTree7.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree7.find((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree7.find((int) ' ');
        avltree.AVLTree.Node node15 = aVLTree7.find((int) '#');
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        avltree.AVLTree.Node node19 = null;
        int int20 = aVLTree16.getBalance(node19);
        aVLTree16.insert((int) (short) 100);
        avltree.AVLTree.Node node24 = aVLTree16.find((int) ' ');
        int int25 = aVLTree16.height();
        avltree.AVLTree.Node node26 = aVLTree16.getRoot();
        int int27 = aVLTree7.getBalance(node26);
        int int28 = aVLTree0.getBalance(node26);
        avltree.AVLTree aVLTree29 = new avltree.AVLTree();
        avltree.AVLTree.Node node31 = aVLTree29.find((int) '4');
        avltree.AVLTree.Node node32 = null;
        int int33 = aVLTree29.getBalance(node32);
        aVLTree29.insert(0);
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node37 = null;
        int int38 = aVLTree36.getBalance(node37);
        aVLTree36.insert((int) (byte) 100);
        aVLTree36.insert((int) 'a');
        avltree.AVLTree.Node node43 = aVLTree36.getRoot();
        int int44 = aVLTree29.getBalance(node43);
        avltree.AVLTree.Node node46 = aVLTree29.find((int) (short) 100);
        aVLTree29.delete((int) (short) -1);
        aVLTree29.insert(10);
        aVLTree29.insert(1);
        avltree.AVLTree.Node node54 = aVLTree29.find((int) (short) 1);
        int int55 = aVLTree0.getBalance(node54);
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(node24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(node26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(node31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(node43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNotNull(node54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test1995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1995");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.delete((int) (short) -1);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        aVLTree8.insert((int) (short) 0);
        avltree.AVLTree.Node node14 = aVLTree8.find(100);
        avltree.AVLTree aVLTree15 = new avltree.AVLTree();
        avltree.AVLTree.Node node17 = aVLTree15.find((int) '4');
        aVLTree15.delete((int) 'a');
        avltree.AVLTree.Node node20 = aVLTree15.getRoot();
        aVLTree15.delete(0);
        avltree.AVLTree.Node node23 = null;
        int int24 = aVLTree15.getBalance(node23);
        int int25 = aVLTree15.height();
        avltree.AVLTree aVLTree26 = new avltree.AVLTree();
        avltree.AVLTree.Node node28 = aVLTree26.find((int) '4');
        avltree.AVLTree.Node node29 = aVLTree26.getRoot();
        aVLTree26.delete(100);
        aVLTree26.insert((int) (byte) 10);
        avltree.AVLTree.Node node34 = aVLTree26.getRoot();
        int int35 = aVLTree15.getBalance(node34);
        avltree.AVLTree aVLTree36 = new avltree.AVLTree();
        avltree.AVLTree.Node node38 = aVLTree36.find((int) '4');
        aVLTree36.delete((int) 'a');
        avltree.AVLTree.Node node41 = aVLTree36.getRoot();
        aVLTree36.delete(0);
        avltree.AVLTree.Node node44 = null;
        int int45 = aVLTree36.getBalance(node44);
        int int46 = aVLTree36.height();
        avltree.AVLTree aVLTree47 = new avltree.AVLTree();
        avltree.AVLTree.Node node49 = aVLTree47.find((int) '4');
        avltree.AVLTree.Node node50 = aVLTree47.getRoot();
        aVLTree47.delete(100);
        aVLTree47.insert((int) (byte) 10);
        avltree.AVLTree.Node node55 = aVLTree47.getRoot();
        int int56 = aVLTree36.getBalance(node55);
        int int57 = aVLTree15.getBalance(node55);
        int int58 = aVLTree8.getBalance(node55);
        int int59 = aVLTree0.getBalance(node55);
        aVLTree0.insert(1);
        avltree.AVLTree.Node node63 = aVLTree0.find((int) (byte) 0);
        avltree.AVLTree.Node node64 = aVLTree0.getRoot();
        avltree.AVLTree.Node node65 = aVLTree0.getRoot();
        aVLTree0.insert((int) '4');
        avltree.AVLTree.Node node68 = aVLTree0.getRoot();
        avltree.AVLTree.Node node70 = aVLTree0.find((int) (byte) -1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node14);
        org.junit.Assert.assertNull(node17);
        org.junit.Assert.assertNull(node20);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertNull(node29);
        org.junit.Assert.assertNotNull(node34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertNull(node41);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertNull(node50);
        org.junit.Assert.assertNotNull(node55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNull(node63);
        org.junit.Assert.assertNotNull(node64);
        org.junit.Assert.assertNotNull(node65);
        org.junit.Assert.assertNotNull(node68);
        org.junit.Assert.assertNull(node70);
    }

    @Test
    public void test1996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1996");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        aVLTree0.delete(100);
        aVLTree0.delete(0);
        avltree.AVLTree aVLTree8 = new avltree.AVLTree();
        avltree.AVLTree.Node node10 = aVLTree8.find((int) '4');
        avltree.AVLTree.Node node11 = aVLTree8.getRoot();
        aVLTree8.delete(100);
        aVLTree8.delete((int) (short) -1);
        avltree.AVLTree aVLTree16 = new avltree.AVLTree();
        avltree.AVLTree.Node node18 = aVLTree16.find((int) '4');
        aVLTree16.insert((int) (short) 0);
        avltree.AVLTree.Node node22 = aVLTree16.find(100);
        avltree.AVLTree aVLTree23 = new avltree.AVLTree();
        avltree.AVLTree.Node node25 = aVLTree23.find((int) '4');
        aVLTree23.delete((int) 'a');
        avltree.AVLTree.Node node28 = aVLTree23.getRoot();
        aVLTree23.delete(0);
        avltree.AVLTree.Node node31 = null;
        int int32 = aVLTree23.getBalance(node31);
        int int33 = aVLTree23.height();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node37 = aVLTree34.getRoot();
        aVLTree34.delete(100);
        aVLTree34.insert((int) (byte) 10);
        avltree.AVLTree.Node node42 = aVLTree34.getRoot();
        int int43 = aVLTree23.getBalance(node42);
        avltree.AVLTree aVLTree44 = new avltree.AVLTree();
        avltree.AVLTree.Node node46 = aVLTree44.find((int) '4');
        aVLTree44.delete((int) 'a');
        avltree.AVLTree.Node node49 = aVLTree44.getRoot();
        aVLTree44.delete(0);
        avltree.AVLTree.Node node52 = null;
        int int53 = aVLTree44.getBalance(node52);
        int int54 = aVLTree44.height();
        avltree.AVLTree aVLTree55 = new avltree.AVLTree();
        avltree.AVLTree.Node node57 = aVLTree55.find((int) '4');
        avltree.AVLTree.Node node58 = aVLTree55.getRoot();
        aVLTree55.delete(100);
        aVLTree55.insert((int) (byte) 10);
        avltree.AVLTree.Node node63 = aVLTree55.getRoot();
        int int64 = aVLTree44.getBalance(node63);
        int int65 = aVLTree23.getBalance(node63);
        int int66 = aVLTree16.getBalance(node63);
        int int67 = aVLTree8.getBalance(node63);
        aVLTree8.insert(1);
        avltree.AVLTree.Node node70 = null;
        int int71 = aVLTree8.getBalance(node70);
        avltree.AVLTree.Node node72 = aVLTree8.getRoot();
        int int73 = aVLTree0.getBalance(node72);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node10);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertNull(node18);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNull(node25);
        org.junit.Assert.assertNull(node28);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node37);
        org.junit.Assert.assertNotNull(node42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNull(node46);
        org.junit.Assert.assertNull(node49);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNull(node57);
        org.junit.Assert.assertNull(node58);
        org.junit.Assert.assertNotNull(node63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(node72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test1997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1997");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        aVLTree0.delete((int) '#');
        aVLTree0.delete((int) (short) -1);
        aVLTree0.insert((int) (short) -1);
        aVLTree0.delete((int) (byte) 100);
        avltree.AVLTree.Node node15 = aVLTree0.getRoot();
        avltree.AVLTree.Node node16 = aVLTree0.getRoot();
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNotNull(node15);
        org.junit.Assert.assertNotNull(node16);
    }

    @Test
    public void test1998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1998");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = null;
        int int4 = aVLTree0.getBalance(node3);
        aVLTree0.insert(0);
        aVLTree0.insert((int) (short) 10);
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.delete((int) '4');
        aVLTree0.delete((int) (short) 100);
        avltree.AVLTree.Node node15 = aVLTree0.find((int) (short) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(node9);
        org.junit.Assert.assertNull(node15);
    }

    @Test
    public void test1999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test1999");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        avltree.AVLTree.Node node3 = aVLTree0.getRoot();
        avltree.AVLTree.Node node5 = aVLTree0.find((int) (short) -1);
        avltree.AVLTree aVLTree6 = new avltree.AVLTree();
        avltree.AVLTree.Node node8 = aVLTree6.find((int) '4');
        aVLTree6.delete((int) 'a');
        avltree.AVLTree.Node node11 = aVLTree6.getRoot();
        aVLTree6.delete(0);
        avltree.AVLTree.Node node14 = null;
        int int15 = aVLTree6.getBalance(node14);
        int int16 = aVLTree6.height();
        aVLTree6.delete(100);
        avltree.AVLTree aVLTree19 = new avltree.AVLTree();
        avltree.AVLTree.Node node21 = aVLTree19.find((int) '4');
        avltree.AVLTree.Node node22 = aVLTree19.getRoot();
        aVLTree19.delete(100);
        aVLTree19.insert((int) (byte) 10);
        avltree.AVLTree.Node node27 = aVLTree19.getRoot();
        int int28 = aVLTree6.getBalance(node27);
        int int29 = aVLTree0.getBalance(node27);
        int int30 = aVLTree0.height();
        aVLTree0.delete((int) '4');
        avltree.AVLTree.Node node33 = aVLTree0.getRoot();
        avltree.AVLTree aVLTree34 = new avltree.AVLTree();
        avltree.AVLTree.Node node36 = aVLTree34.find((int) '4');
        avltree.AVLTree.Node node38 = aVLTree34.find((int) 'a');
        aVLTree34.delete((int) (short) 10);
        int int41 = aVLTree34.height();
        aVLTree34.delete((int) '#');
        aVLTree34.delete((int) (short) -1);
        avltree.AVLTree aVLTree46 = new avltree.AVLTree();
        avltree.AVLTree.Node node48 = aVLTree46.find((int) '4');
        aVLTree46.delete((int) 'a');
        avltree.AVLTree aVLTree51 = new avltree.AVLTree();
        avltree.AVLTree.Node node53 = aVLTree51.find((int) '4');
        avltree.AVLTree.Node node54 = aVLTree51.getRoot();
        aVLTree51.insert((int) (byte) 100);
        avltree.AVLTree aVLTree57 = new avltree.AVLTree();
        avltree.AVLTree.Node node59 = aVLTree57.find((int) '4');
        avltree.AVLTree.Node node60 = null;
        int int61 = aVLTree57.getBalance(node60);
        aVLTree57.insert((int) (short) 100);
        avltree.AVLTree.Node node65 = aVLTree57.find((int) ' ');
        int int66 = aVLTree57.height();
        avltree.AVLTree.Node node67 = aVLTree57.getRoot();
        int int68 = aVLTree51.getBalance(node67);
        int int69 = aVLTree46.getBalance(node67);
        int int70 = aVLTree34.getBalance(node67);
        int int71 = aVLTree0.getBalance(node67);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node3);
        org.junit.Assert.assertNull(node5);
        org.junit.Assert.assertNull(node8);
        org.junit.Assert.assertNull(node11);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNull(node21);
        org.junit.Assert.assertNull(node22);
        org.junit.Assert.assertNotNull(node27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNull(node33);
        org.junit.Assert.assertNull(node36);
        org.junit.Assert.assertNull(node38);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNull(node48);
        org.junit.Assert.assertNull(node53);
        org.junit.Assert.assertNull(node54);
        org.junit.Assert.assertNull(node59);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(node65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(node67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test2000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest3.test2000");
        avltree.AVLTree aVLTree0 = new avltree.AVLTree();
        avltree.AVLTree.Node node2 = aVLTree0.find((int) '4');
        aVLTree0.delete((int) 'a');
        aVLTree0.delete(1);
        avltree.AVLTree.Node node7 = aVLTree0.getRoot();
        int int8 = aVLTree0.height();
        avltree.AVLTree.Node node9 = aVLTree0.getRoot();
        aVLTree0.insert((int) 'a');
        avltree.AVLTree.Node node13 = aVLTree0.find(0);
        avltree.AVLTree.Node node15 = aVLTree0.find(1);
        aVLTree0.delete(1);
        aVLTree0.insert((int) (short) 0);
        aVLTree0.insert((int) (byte) 1);
        org.junit.Assert.assertNull(node2);
        org.junit.Assert.assertNull(node7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNull(node9);
        org.junit.Assert.assertNull(node13);
        org.junit.Assert.assertNull(node15);
    }
}

